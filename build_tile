#!/bin/bash -exu

function main() {
  local pcf_releng_ci_path
  pcf_releng_ci_path="${GOPATH}/src/github.com/pivotal-cf/pcf-releng-ci"

  local tile_repo_path
  tile_repo_path="${GOPATH}/src/github.com/pivotal-cf/p-isolation-segment"

  local releases_dir
  releases_dir="${PWD}/releases"
  mkdir -p "${releases_dir}"

  local stemcell_dir
  stemcell_dir="${PWD}/stemcell"
  mkdir -p "${stemcell_dir}"

  local version

  if [[ ! -e "${stemcell_dir}/stemcell.tgz" ]]; then
    curl -L https://bosh.io/d/stemcells/bosh-vsphere-esxi-ubuntu-trusty-go_agent -o "${stemcell_dir}/stemcell.tgz"
  else
    echo "Skipping stemcell, already exists"
  fi

  go run "${pcf_releng_ci_path}/tasks/future/generate-ert-metadata/main.go" \
    --jobs "${tile_repo_path}/metadata_parts/jobs" \
    --forms "${tile_repo_path}/metadata_parts/forms_and_validators" \
    --blueprints "${tile_repo_path}/metadata_parts/global_properties" \
    --base-file "${tile_repo_path}/metadata_parts/handcraft_base.yml" \
    --output-path "${PWD}/metadata.yml"

  version="$(cat ${tile_repo_path}/version)"
  go run "${pcf_releng_ci_path}/tasks/future/create-ert/main.go" \
    $(release_tarball_args "${releases_dir}") \
    --stemcell-tarball "${stemcell_dir}/stemcell.tgz" \
    --handcraft "${PWD}/metadata.yml" \
    --final-version "${version}" \
    --version "${version}" \
    --name "p-isolation-segment" \
    --output-dir "${PWD}"
}

function release_tarball_args() {
  local tarballs
  tarballs="$(ls -1 "${1}")"

  local args
  args="$(echo "${tarballs}" | xargs -n 1 -I {} echo "--release-tarball ${1}/{}")"

  printf "%s" "${args}"
}

main
