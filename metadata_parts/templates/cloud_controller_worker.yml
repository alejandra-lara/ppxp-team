---
name: cloud_controller_worker
release: capi
consumes: |
  (( .properties.system_database.selected_option.parsed_manifest(ccdb_link) ))
manifest: |
  ccdb: (( .properties.system_database.selected_option.parsed_manifest(ccdb) ))
  cc:
    buildpacks: (( .properties.system_blobstore.selected_option.parsed_manifest(ccbuildpack) ))
    droplets: (( .properties.system_blobstore.selected_option.parsed_manifest(ccdroplet) ))
    packages: (( .properties.system_blobstore.selected_option.parsed_manifest(ccpackage) ))
    resource_pool: (( .properties.system_blobstore.selected_option.parsed_manifest(ccresource) ))
    bulk_api_password: ((( cloud-controller-bulk-api-credentials.password )))
    db_encryption_key: (( .cloud_controller.encrypt_key.value || .cloud_controller.db_encryption_credentials.password ))
    allow_app_ssh_access: (( .cloud_controller.allow_app_ssh_access.value ))
    internal_api_user: ((( cloud-controller-internal-api-user-credentials.username )))
    internal_api_password: ((( cloud-controller-internal-api-user-credentials.password )))
    staging_upload_user: ((( cloud-controller-staging-upload-credentials.username )))
    staging_upload_password: ((( cloud-controller-staging-upload-credentials.password )))
    perform_blob_cleanup: true
    default_running_security_groups:
    - default_security_group
    maximum_health_check_timeout: 600
    mutual_tls:
      ca_cert: (( $ops_manager.ca_certificate ))
      public_cert: (( .properties.cloud_controller_mutual_cert.cert_pem ))
      private_key: (( .properties.cloud_controller_mutual_cert.private_key_pem ))
    security_group_definitions:
    - name: default_security_group
      rules:
      - protocol: all
        destination: 0.0.0.0-169.253.255.255
      - protocol: all
        destination: 169.255.0.0-255.255.255.255
    default_staging_security_groups:
    - default_security_group
    default_app_ssh_access: (( .cloud_controller.default_app_ssh_access.value ))
    logging_level: debug
    quota_definitions:
      default:
        memory_limit: (( .cloud_controller.default_quota_memory_limit_mb.value ))
        total_services: (( .cloud_controller.default_quota_max_number_services.value ))
        non_basic_services_allowed: true
        total_routes: 1000
        trial_db_allowed: true
      runaway:
        memory_limit: 102400
        total_services: -1
        total_routes: 1000
        non_basic_services_allowed: true
    diego:
      lifecycle_bundles:
        "buildpack/cflinuxfs2": "buildpack_app_lifecycle/buildpack_app_lifecycle.tgz"
        "buildpack/windows2012R2": "windows_app_lifecycle/windows_app_lifecycle.tgz"
        "buildpack/windows2016": "buildpack_app_lifecycle/buildpack_app_lifecycle.tgz"
        "docker": "docker_app_lifecycle/docker_app_lifecycle.tgz"
      temporary_cc_uploader_mtls: true
      temporary_droplet_download_mtls: true
      temporary_local_apps: true
      temporary_local_staging: true
      temporary_local_sync: true
      temporary_local_tasks: true
      temporary_local_tps: true
      file_server_url: http://file-server.service.cf.internal:{{ tile | ert 8080 | srt 8084 }}
  uaa:
    url: https://uaa.(( .cloud_controller.system_domain.value ))
    clients:
      cc-service-dashboards:
        secret: (( .uaa.cc_service_dashboards_credentials.password ))
      cc_routing:
        secret: (( .uaa.cc_routing_credentials.password ))
    ca_cert: (( $ops_manager.ca_certificate ))
  login:
    url: https://login.(( .cloud_controller.system_domain.value ))
  app_domains:
  - (( .cloud_controller.apps_domain.value ))
  hm9000:
    port: 12345
  system_domain: (( .cloud_controller.system_domain.value ))
  ssl:
    skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
  routing_api:
    enabled: true
  domain: (( .cloud_controller.system_domain.value ))
  release_level_backup: true
