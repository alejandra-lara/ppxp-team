---
name: etcd_tls_server
label: etcd Server
resource_label: etcd Server
description: An etcd TLS cluster node, which maintains the state of applications, and its metrics server
templates:
  - name: consul_agent
    release: consul
  - name: etcd
    release: etcd
  - name: etcd_metrics_server
    release: etcd
  - name: metron_agent
    release: loggregator

resource_definitions:
  - name: ram
    type: integer
    label: RAM
    configurable: true
    default: 1_024
    constraints:
      min: 1_024

  - name: ephemeral_disk
    type: integer
    label: Ephemeral Disk
    configurable: true
    default: 2_048
    constraints:
      min: 2_048

  - name: persistent_disk
    type: integer
    label: Persistent Disk
    configurable: true
    default: 1_024
    constraints:
      min: 1_024

  - name: cpu
    type: integer
    label: CPU
    configurable: true
    default: 1
    constraints:
      min: 1
      power_of_two: true

static_ip: 1
dynamic_ip: 0
max_in_flight: 1
single_az_only: false

instance_definition:
  name: instances
  type: integer
  label: Instances
  configurable: true
  default: 1
  constraints:
    min: 1
    may_only_be_odd_or_zero: true

property_blueprints:

manifest: |
  syslog_daemon_config:
    address: (( .properties.syslog_host.value ))
    port: (( .properties.syslog_port.value ))
    transport: (( .properties.syslog_protocol.value ))
  metron_agent:
    deployment: cf
    etcd:
      client_cert: (( .properties.cf_etcd_client_cert.cert_pem ))
      client_key: (( .properties.cf_etcd_client_cert.private_key_pem ))
  metron_endpoint:
    shared_secret: (( .doppler.shared_secret_credentials.password ))
  etcd:
    advertise_urls_dns_suffix: cf-etcd.service.cf.internal
    machines: ['cf-etcd.service.cf.internal']
    cluster:
    - instances: (( instances ))
      name: "etcd_tls_server"
    ca_cert: (( $ops_manager.ca_certificate ))
    server_cert: (( .properties.cf_etcd_server_cert.cert_pem ))
    server_key: (( .properties.cf_etcd_server_cert.private_key_pem ))
    client_cert: (( .properties.cf_etcd_client_cert.cert_pem ))
    client_key: (( .properties.cf_etcd_client_cert.private_key_pem ))
    peer_ca_cert: (( $ops_manager.ca_certificate ))
    peer_cert: (( .properties.cf_etcd_peer_cert.cert_pem ))
    peer_key: (( .properties.cf_etcd_peer_cert.private_key_pem ))
  loggregator:
    tls:
      ca_cert: (( $ops_manager.ca_certificate ))
      metron:
        cert: (( .doppler.metron_tls_cert.cert_pem ))
        key: (( .doppler.metron_tls_cert.private_key_pem ))
    etcd:
      require_ssl: true
      machines: ['cf-etcd.service.cf.internal']
      ca_cert: (( $ops_manager.ca_certificate ))
  etcd_metrics_server:
    etcd:
      require_ssl: true
      dns_suffix: 'cf-etcd.service.cf.internal'
      ca_cert: (( $ops_manager.ca_certificate ))
      client_cert: (( .properties.cf_etcd_client_cert.cert_pem ))
      client_key: (( .properties.cf_etcd_client_cert.private_key_pem ))
    nats:
      username: (( .nats.credentials.identity ))
      password: (( .nats.credentials.password ))
      machines: (( .nats.ips ))
  consul:
    encrypt_keys:
    - (( .properties.consul_encrypt_key.value ))
    ca_cert: (( $ops_manager.ca_certificate ))
    agent_cert: (( .properties.consul_agent_cert.cert_pem ))
    agent_key: (( .properties.consul_agent_cert.private_key_pem ))
    server_cert: (( .properties.consul_server_cert.cert_pem ))
    server_key: (( .properties.consul_server_cert.private_key_pem ))
    agent:
      domain: cf.internal
      servers:
        lan: (( .consul_server.ips ))
      services:
        etcd:
          name: cf-etcd
