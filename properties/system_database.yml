---
- name: account_database_name
  type: string
  configurable: false
  default: account

- name: app_usage_service_database_name
  type: string
  configurable: false
  default: app_usage_service

- name: autoscale_database_name
  type: string
  configurable: false
  default: autoscale

- name: ccdb_database_name
  type: string
  configurable: false
  default: ccdb

- name: diego_database_name
  type: string
  configurable: false
  default: diego

- name: locket_database_name
  type: string
  configurable: false
  default: locket

- name: networkpolicyserver_database_name
  type: string
  configurable: false
  default: networkpolicyserver

- name: notifications_database_name
  type: string
  configurable: false
  default: notifications

- name: routing_database_name
  type: string
  configurable: false
  default: routing

- name: silk_database_name
  type: string
  configurable: false
  default: silk

- name: nfsvolume_database_name
  type: string
  configurable: false
  default: nfsvolume

- name: system_database
  type: selector
  configurable: true
  default: internal_pxc
  option_templates:
    - name: internal_pxc
      select_value: internal_pxc
      named_manifests:
      - name: enable_pxc
        manifest: |
          true
      - name: ccdb
        manifest: |
          connection_validation_timeout: (( .properties.ccdb_connection_validation_timeout.value ))
          read_timeout: (( .properties.ccdb_read_timeout.value ))
          db_scheme: mysql
          address: mysql.service.cf.internal
          port: 3306
          ssl_verify_hostname: true
          ca_cert: (( $ops_manager.ca_certificate ))
          roles:
          - tag: admin
            name: ((( cc-db-credentials.username )))
            password: ((( cc-db-credentials.password )))
          databases:
          - tag: cc
            name: (( .properties.ccdb_database_name.value ))
            citext: true
      - name: notifications
        manifest: |
          host: mysql.service.cf.internal
          port: 3306
          username: ((( notifications-db-credentials.username )))
          password: ((( notifications-db-credentials.password )))
          database: (( .properties.notifications_database_name.value ))
          max_open_connections: 10
      - name: autoscaling
        manifest: |
          host: mysql.service.cf.internal
          adapter: mysql
          port: 3306
          username: ((( autoscale-db-credentials.username )))
          password: ((( autoscale-db-credentials.password )))
          name: (( .properties.autoscale_database_name.value ))
      - name: push-app-usage-service
        manifest: |
          address: mysql.service.cf.internal
          port: 3306
          username: ((( app-usage-db-credentials.username )))
          password: ((( app-usage-db-credentials.password )))
          name: (( .properties.app_usage_service_database_name.value ))
          ca_cert: (( $ops_manager.ca_certificate ))
          verify_ssl: true
      - name: bbr-usage-servicedb
        manifest: |
          address: mysql.service.cf.internal
          port: 3306
          username: ((( app-usage-db-credentials.username )))
          password: ((( app-usage-db-credentials.password )))
          name: (( .properties.app_usage_service_database_name.value ))
          ca_cert: (( $ops_manager.ca_certificate ))
          skip_host_verify: true
      - name: diegodb
        manifest: |
          db_host: mysql.service.cf.internal
          db_port: 3306
          db_username: ((( diego-db-credentials.username )))
          db_password: ((( diego-db-credentials.password )))
          db_schema: (( .properties.diego_database_name.value ))
          max_open_connections: 100
          require_ssl: true
          ca_cert: (( $ops_manager.ca_certificate ))
      - name: locketdb
        manifest: |
          db_host: mysql.service.cf.internal
          db_port: 3306
          db_username: ((( locket-db-credentials.username )))
          db_password: ((( locket-db-credentials.password )))
          db_schema: (( .properties.locket_database_name.value ))
          require_ssl: true
          ca_cert: (( $ops_manager.ca_certificate ))
      - name: routingdb
        manifest: |
          type: mysql
          host: mysql.service.cf.internal
          port: 3306
          username: ((( routing-db-credentials.username )))
          password: ((( routing-db-credentials.password )))
          schema: (( .properties.routing_database_name.value ))
          ca_cert: (( $ops_manager.ca_certificate ))
      - name: silkdb
        manifest: |
          type: mysql
          host: mysql.service.cf.internal
          port: 3306
          username: ((( silk-db-credentials.username )))
          password: ((( silk-db-credentials.password )))
          name: (( .properties.silk_database_name.value ))
          connect_timeout_seconds: (( .properties.cf_networking_database_connection_timeout.value ))
          require_ssl: true
          ca_cert: (( $ops_manager.ca_certificate ))
      - name: networkpolicyserverdb
        manifest: |
          type: mysql
          host: mysql.service.cf.internal
          port: 3306
          username: ((( network-policy-server-db-credentials.username )))
          password: ((( network-policy-server-db-credentials.password )))
          name: (( .properties.networkpolicyserver_database_name.value ))
          connect_timeout_seconds: (( .properties.cf_networking_database_connection_timeout.value ))
          require_ssl: true
          ca_cert: (( $ops_manager.ca_certificate ))
      - name: nfsvolume
        manifest: |
          host: mysql.service.cf.internal
          username: ((( nfs-volume-db-credentials.username )))
          password: ((( nfs-volume-db-credentials.password )))
          name: (( .properties.nfsvolume_database_name.value ))
          ca_cert: (( $ops_manager.ca_certificate ))
      - name: nfsvolume_bbr
        manifest: |
          db_username: ((( nfs-volume-db-credentials.username )))
          db_password: ((( nfs-volume-db-credentials.password )))
          db_name: (( .properties.nfsvolume_database_name.value ))
          db_hostname: mysql.service.cf.internal
          db_port: 3306
          db_driver: mysql
          db_ca_cert: (( $ops_manager.ca_certificate ))
          release_level_backup: true

    - name: external
      select_value: external
      property_blueprints:
        - name: host
          type: string
          configurable: true
        - name: port
          type: port
          configurable: true
        - name: ca_cert
          type: text
          configurable: true
          optional: true
        - name: account_username
          type: string
          configurable: true
        - name: account_password
          type: secret
          configurable: true
        - name: app_usage_service_username
          type: string
          configurable: true
        - name: app_usage_service_password
          type: secret
          configurable: true
        - name: autoscale_username
          type: string
          configurable: true
        - name: autoscale_password
          type: secret
          configurable: true
        - name: ccdb_username
          type: string
          configurable: true
        - name: ccdb_password
          type: secret
          configurable: true
        - name: diego_username
          type: string
          configurable: true
        - name: diego_password
          type: secret
          configurable: true
        - name: locket_username
          type: string
          configurable: true
        - name: locket_password
          type: secret
          configurable: true
        - name: networkpolicyserver_username
          type: string
          configurable: true
        - name: networkpolicyserver_password
          type: secret
          configurable: true
        - name: nfsvolume_username
          type: string
          configurable: true
        - name: nfsvolume_password
          type: secret
          configurable: true
        - name: notifications_username
          type: string
          configurable: true
        - name: notifications_password
          type: secret
          configurable: true
        - name: routing_username
          type: string
          configurable: true
        - name: routing_password
          type: secret
          configurable: true
        - name: silk_username
          type: string
          configurable: true
        - name: silk_password
          type: secret
          configurable: true
      named_manifests:
        - name: enable_pxc
          manifest: |
            false
        - name: ccdb
          manifest: |
            connection_validation_timeout: (( .properties.ccdb_connection_validation_timeout.value ))
            read_timeout: (( .properties.ccdb_read_timeout.value ))
            db_scheme: "mysql"
            address: (( .properties.system_database.external.host.value ))
            port: (( .properties.system_database.external.port.value ))
            ssl_verify_hostname: '(( .properties.system_database.external.ca_cert.value ? true : false ))'
            ca_cert: (( .properties.system_database.external.ca_cert.value ))
            roles:
            - tag: admin
              name: (( .properties.system_database.external.ccdb_username.value ))
              password: (( .properties.system_database.external.ccdb_password.value ))
            databases:
            - tag: cc
              name: (( .properties.ccdb_database_name.value ))
        - name: notifications
          manifest: |
            host: (( .properties.system_database.external.host.value ))
            port: (( .properties.system_database.external.port.value ))
            username: (( .properties.system_database.external.notifications_username.value ))
            password: (( .properties.system_database.external.notifications_password.value ))
            database: (( .properties.notifications_database_name.value ))
            max_open_connections: 10
        - name: autoscaling
          manifest: |
            adapter: mysql
            host: (( .properties.system_database.external.host.value ))
            port: (( .properties.system_database.external.port.value ))
            username: (( .properties.system_database.external.autoscale_username.value ))
            password: (( .properties.system_database.external.autoscale_password.value ))
            name: (( .properties.autoscale_database_name.value ))
        - name: push-app-usage-service
          manifest: |
            address: (( .properties.system_database.external.host.value ))
            port: (( .properties.system_database.external.port.value ))
            username: (( .properties.system_database.external.app_usage_service_username.value ))
            password: (( .properties.system_database.external.app_usage_service_password.value ))
            name: (( .properties.app_usage_service_database_name.value ))
            ca_cert: (( .properties.system_database.external.ca_cert.value ))
            verify_ssl: '(( .properties.system_database.external.ca_cert.value ? true : false ))'
        - name: bbr-usage-servicedb
          manifest: |
            address: (( .properties.system_database.external.host.value ))
            port: (( .properties.system_database.external.port.value ))
            username: (( .properties.system_database.external.app_usage_service_username.value ))
            password: (( .properties.system_database.external.app_usage_service_password.value ))
            name: (( .properties.app_usage_service_database_name.value ))
            ca_cert: (( .properties.system_database.external.ca_cert.value ))
            skip_host_verify: '(( .properties.system_database.external.ca_cert.value ? true : false ))'
        - name: diegodb
          manifest: |
            db_host: (( .properties.system_database.external.host.value ))
            db_port: (( .properties.system_database.external.port.value ))
            db_username: (( .properties.system_database.external.diego_username.value ))
            db_password: (( .properties.system_database.external.diego_password.value ))
            db_schema: (( .properties.diego_database_name.value ))
            max_open_connections: 100
            require_ssl: '(( .properties.system_database.external.ca_cert.value ? true : false ))'
            ca_cert: (( .properties.system_database.external.ca_cert.value ))
        - name: locketdb
          manifest: |
            db_host: (( .properties.system_database.external.host.value ))
            db_port: (( .properties.system_database.external.port.value ))
            db_username: (( .properties.system_database.external.locket_username.value ))
            db_password: (( .properties.system_database.external.locket_password.value ))
            db_schema: (( .properties.locket_database_name.value ))
            require_ssl: '(( .properties.system_database.external.ca_cert.value ? true : false ))'
            ca_cert: (( .properties.system_database.external.ca_cert.value ))
        - name: routingdb
          manifest: |
            type: mysql
            host: (( .properties.system_database.external.host.value ))
            port: (( .properties.system_database.external.port.value ))
            username: (( .properties.system_database.external.routing_username.value ))
            password: (( .properties.system_database.external.routing_password.value ))
            schema: (( .properties.routing_database_name.value ))
            ca_cert: (( .properties.system_database.external.ca_cert.value ))
        - name: silkdb
          manifest: |
            type: mysql
            host: (( .properties.system_database.external.host.value ))
            port: (( .properties.system_database.external.port.value ))
            require_ssl: '(( .properties.system_database.external.ca_cert.value ? true : false ))'
            ca_cert: (( .properties.system_database.external.ca_cert.value ))
            username: (( .properties.system_database.external.silk_username.value ))
            password: (( .properties.system_database.external.silk_password.value ))
            name: (( .properties.silk_database_name.value ))
        - name: networkpolicyserverdb
          manifest: |
            type: mysql
            host: (( .properties.system_database.external.host.value ))
            port: (( .properties.system_database.external.port.value ))
            require_ssl: '(( .properties.system_database.external.ca_cert.value ? true : false ))'
            ca_cert: (( .properties.system_database.external.ca_cert.value ))
            username: (( .properties.system_database.external.networkpolicyserver_username.value ))
            password: (( .properties.system_database.external.networkpolicyserver_password.value ))
            name: (( .properties.networkpolicyserver_database_name.value ))
            connect_timeout_seconds: (( .properties.cf_networking_database_connection_timeout.value ))
        - name: nfsvolume
          manifest: |
            host: (( .properties.system_database.external.host.value ))
            port: (( .properties.system_database.external.port.value ))
            username: (( .properties.system_database.external.nfsvolume_username.value ))
            password: (( .properties.system_database.external.nfsvolume_password.value ))
            name: (( .properties.nfsvolume_database_name.value ))
            ca_cert: (( .properties.system_database.external.ca_cert.value ))
        - name: nfsvolume_bbr
          manifest: |
            db_driver: mysql
            db_hostname: (( .properties.system_database.external.host.value ))
            db_name: (( .properties.nfsvolume_database_name.value ))
            db_password: (( .properties.system_database.external.nfsvolume_password.value ))
            db_port: (( .properties.system_database.external.port.value ))
            db_username: (( .properties.system_database.external.nfsvolume_username.value ))
            db_ca_cert: (( .properties.system_database.external.ca_cert.value ))
            release_level_backup: true

- name: mysql_activity_logging
  type: selector
  configurable: true
  default: enable
  option_templates:
    - name: disable
      select_value: disable
      named_manifests:
      - name: mysql_audit_events
        manifest: ""
      - name: pxc_server_audit_logs_enabled
        manifest: |
          false
    - name: enable
      select_value: enable
      named_manifests:
      - name: mysql_audit_events
        manifest: (( .properties.mysql_activity_logging.enable.audit_logging_events.value ))
      - name: pxc_server_audit_logs_enabled
        manifest: |
          true
      property_blueprints:
        - name: audit_logging_events
          type: string
          configurable: true
          default: "connect,query"

- name: pxc_internal_certificate
  type: rsa_cert_credentials
  configurable: false
  default:
    domains:
    - pxc_internal_certificate

- name: pxc_server_certificate
  type: rsa_cert_credentials
  configurable: false
  default:
    domains:
    - mysql.service.cf.internal
