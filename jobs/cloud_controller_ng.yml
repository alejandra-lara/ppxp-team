---
name: cloud_controller_ng
release: capi
consumes: |
  (( .properties.system_database.selected_option.parsed_manifest(ccdb_link) ))
provides: |
  cloud_controller: {as: cloud_controller, shared: true}
manifest: |
  name: $( variable "label" )
  build: $( variable "build-version" )
  description: https://docs.pivotal.io/pivotalcf/2-3/pcf-release-notes/runtime-rn.html
  uaa:
    url: https://uaa.(( .cloud_controller.system_domain.value ))
    clients:
      cc-service-dashboards:
        scope: cloud_controller.write,openid,cloud_controller.read,cloud_controller_service_permissions.read
        secret: (( .uaa.cc_service_dashboards_credentials.password ))
      cc_service_key_client:
        secret: (( .uaa.cc_service_key_credentials.password ))
      cloud_controller_username_lookup:
        secret: (( .uaa.cloud_controller_username_lookup_credentials.password ))
      cc_routing:
        secret: (( .uaa.cc_routing_credentials.password ))
    ca_cert: (( $ops_manager.ca_certificate ))
  dea_next:
    staging_disk_limit_mb: 6144
  app_domains:
  - (( .cloud_controller.apps_domain.value ))
  login:
    url: https://login.(( .cloud_controller.system_domain.value ))
  domain: (( .cloud_controller.system_domain.value ))
  ccdb: (( .properties.system_database.selected_option.parsed_manifest(ccdb) ))
  cc:
    buildpacks: '(( .properties.system_blobstore.external.iam_instance_profile_authentication.value ? .properties.system_blobstore.selected_option.parsed_manifest(ccbuildpack_iam) : .properties.system_blobstore.selected_option.parsed_manifest(ccbuildpack) ))'
    droplets: '(( .properties.system_blobstore.external.iam_instance_profile_authentication.value ? .properties.system_blobstore.selected_option.parsed_manifest(ccdroplet_iam) : .properties.system_blobstore.selected_option.parsed_manifest(ccdroplet) ))'
    packages:  '(( .properties.system_blobstore.external.iam_instance_profile_authentication.value ? .properties.system_blobstore.selected_option.parsed_manifest(ccpackage_iam) : .properties.system_blobstore.selected_option.parsed_manifest(ccpackage) ))'
    resource_pool:  '(( .properties.system_blobstore.external.iam_instance_profile_authentication.value ? .properties.system_blobstore.selected_option.parsed_manifest(ccresource_iam) : .properties.system_blobstore.selected_option.parsed_manifest(ccresource) ))'
    rate_limiter: (( .properties.cc_api_rate_limit.selected_option.parsed_manifest(rate_limiter) ))
    disable_custom_buildpacks: "(( .cloud_controller.enable_custom_buildpacks.value ? 'false' : 'true' ))"
    mutual_tls:
      private_key: (( .properties.cloud_controller_mutual_cert.private_key_pem ))
      ca_cert: (( $ops_manager.ca_certificate ))
      public_cert: (( .properties.cloud_controller_mutual_cert.cert_pem ))
    stacks:
    - name: cflinuxfs2
      description: Cloud Foundry Linux-based filesystem
    - name: windows2012R2
      description: Microsoft Windows / .Net 64 bit
    - name: windows2016
      description: Microsoft Windows 2016
    min_cli_version: 6.23.0
    bulk_api_password: ((( cloud-controller-bulk-api-credentials.password )))
    default_running_security_groups:
    - default_security_group
    allow_app_ssh_access: (( .cloud_controller.allow_app_ssh_access.value ))
    default_app_disk_in_mb: (( .cloud_controller.default_disk_quota_app.value ))
    app_bits_max_body_size: "(( .cloud_controller.max_file_size.value ))M"
    db_encryption_key: (( .cloud_controller.encrypt_key.value || .cloud_controller.db_encryption_credentials.password ))
    maximum_health_check_timeout: 600
    security_group_definitions:
    - name: default_security_group
      rules:
      - protocol: all
        destination: 0.0.0.0-169.253.255.255
      - protocol: all
        destination: 169.255.0.0-255.255.255.255
    default_app_ssh_access: (( .cloud_controller.default_app_ssh_access.value ))
    min_recommended_cli_version: 6.23.0
    security_event_logging:
      enabled: (( .cloud_controller.security_event_logging_enabled.value ))
    install_buildpacks:
    - name: staticfile_buildpack
      package: staticfile-buildpack
    - name: java_buildpack_offline
      package: java-buildpack
    - name: ruby_buildpack
      package: ruby-buildpack
    - name: nodejs_buildpack
      package: nodejs-buildpack
    - name: go_buildpack
      package: go-buildpack
    - name: python_buildpack
      package: python-buildpack
    - name: php_buildpack
      package: php-buildpack
    - name: dotnet_core_buildpack
      package: dotnet-core-buildpack
    - name: binary_buildpack
      package: binary-buildpack
    broker_client_default_async_poll_interval_seconds: 10
    diego:
      lifecycle_bundles:
        "buildpack/cflinuxfs2": "buildpack_app_lifecycle/buildpack_app_lifecycle.tgz"
        "buildpack/windows2012R2": "windows_app_lifecycle/windows_app_lifecycle.tgz"
        "buildpack/windows2016": "buildpack_app_lifecycle/buildpack_app_lifecycle.tgz"
        "docker": "docker_app_lifecycle/docker_app_lifecycle.tgz"
      temporary_cc_uploader_mtls: true
      temporary_droplet_download_mtls: true
      temporary_local_apps: true
      temporary_local_staging: true
      temporary_local_sync: true
      temporary_local_tasks: true
      temporary_local_tps: true
      file_server_url: http://file-server.service.cf.internal:$( variable "diego_fileserver_port" )
      pid_limit: 0
    allowed_cors_domains:
    - https://apm.(( .cloud_controller.system_domain.value ))
    - https://metrics.(( .cloud_controller.system_domain.value ))
    maximum_app_disk_in_mb: (( .cloud_controller.max_disk_quota_app.value ))
    default_app_memory: (( .cloud_controller.default_app_memory.value ))
    internal_api_user: ((( cloud-controller-internal-api-user-credentials.username )))
    internal_api_password: ((( cloud-controller-internal-api-user-credentials.password )))
    staging_upload_user: ((( cloud-controller-staging-upload-credentials.username )))
    staging_upload_password: ((( cloud-controller-staging-upload-credentials.password )))
    volume_services_enabled: true
    default_staging_security_groups:
    - default_security_group
    quota_definitions:
      default:
        memory_limit: (( .cloud_controller.default_quota_memory_limit_mb.value ))
        total_services: (( .cloud_controller.default_quota_max_number_services.value ))
        non_basic_services_allowed: true
        total_routes: 1000
        trial_db_allowed: true
      runaway:
        memory_limit: 102400
        total_services: -1
        total_routes: 1000
        non_basic_services_allowed: true
    server_keepalive_timeout: 0
    staging_timeout_in_seconds: (( .cloud_controller.staging_timeout_in_seconds.value ))
    temporary_create_internal_domain: (( .properties.enable_service_discovery_for_apps.value ))
  credhub_api:
    ca_cert: (( $ops_manager.ca_certificate ))
  support_address: https://support.pivotal.io
  routing_api:
    enabled: true
  hm9000:
    port: 12345
  ssl:
    skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
  doppler:
    port: (( .properties.logger_endpoint_port.value ))
  router:
    route_services_secret: (( .properties.route_services.selected_option.parsed_manifest(secret) ))
  app_ssh:
    host_key_fingerprint: (( .diego_brain.ssh_host_key.public_key_fingerprint ))
  release_level_backup: true
  system_domain: (( .cloud_controller.system_domain.value ))
  system_domain_organization: system
