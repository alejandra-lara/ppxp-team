---
name: diego_brain
label: Diego Brain
resource_label: Diego Brain
description: Diego Brain
templates:
  - name: consul_agent
    release: consul
    consumes: |
      consul: {from: consul_server}
  - name: auctioneer
    release: diego
  - name: cfdot
    release: diego
  - name: cc_uploader
    release: capi
  - name: file_server
    release: diego
  - name: nsync
    release: capi
  - name: route_emitter
    release: diego
  - name: tcp_emitter
    release: routing
  - name: ssh_proxy
    release: diego
  - name: tps
    release: capi
  - name: stager
    release: capi
  - name: metron_agent
    release: loggregator

resource_definitions:
  - name: ram
    type: integer
    label: RAM
    configurable: true
    default: 2_048
    constraints:
      min: 1_024

  - name: ephemeral_disk
    type: integer
    label: Ephemeral Disk
    configurable: true
    default: 4_096
    constraints:
      min: 4_096

  - name: persistent_disk
    type: integer
    label: Persistent Disk
    configurable: true
    default: 1_024
    constraints:
      min: 1_024

  - name: cpu
    type: integer
    label: CPU
    configurable: true
    default: 1
    constraints:
      min: 1
      power_of_two: true

static_ip: 1
dynamic_ip: 0
max_in_flight: 1
single_az_only: false

instance_definition:
  name: instances
  type: integer
  label: Instances
  configurable: true
  default: 1
  constraints:
    min: 1

property_blueprints:
  - name: ssh_host_key
    type: rsa_pkey_credentials
    configurable: false

  - name: static_ips
    type: ip_ranges
    configurable: true
    optional: true

  - name: starting_container_count_maximum
    type: integer
    configurable: true
    default: 200

  - name: cc_uploader_client_cert
    type: rsa_cert_credentials
    configurable: false

manifest: |
  capi:
    cc_uploader:
      cc:
        job_polling_interval_in_seconds: 5
        ca_cert: (( $ops_manager.ca_certificate ))
        client_cert: (( cc_uploader_client_cert.cert_pem ))
        client_key: (( cc_uploader_client_cert.private_key_pem ))
    nsync:
      bbs:
        ca_cert: (( $ops_manager.ca_certificate ))
        client_cert: (( .properties.bbs_client_cert.cert_pem ))
        client_key: (( .properties.bbs_client_cert.private_key_pem ))
      cc:
        base_url: http://cloud-controller-ng.service.cf.internal:9022
        basic_auth_username: (( .cloud_controller.internal_api_user_credentials.identity ))
        basic_auth_password: (( .cloud_controller.internal_api_user_credentials.password ))
    stager:
      insecure_docker_registry_list: (( .diego_cell.insecure_docker_registry_list.parsed_strings ))
      bbs:
        ca_cert: (( $ops_manager.ca_certificate ))
        client_cert: (( .properties.bbs_client_cert.cert_pem ))
        client_key: (( .properties.bbs_client_cert.private_key_pem ))
      cc:
        basic_auth_username: (( .cloud_controller.internal_api_user_credentials.identity ))
        basic_auth_password: (( .cloud_controller.internal_api_user_credentials.password ))
    tps:
      bbs:
        ca_cert: (( $ops_manager.ca_certificate ))
        client_cert: (( .properties.bbs_client_cert.cert_pem ))
        client_key: (( .properties.bbs_client_cert.private_key_pem ))
      cc:
        ca_cert: (( $ops_manager.ca_certificate ))
        client_cert: (( .properties.tps_client_cert.cert_pem ))
        client_key: (( .properties.tps_client_cert.private_key_pem ))
  diego:
    auctioneer:
      starting_container_count_maximum: (( starting_container_count_maximum.value ))
      ca_cert: (( $ops_manager.ca_certificate ))
      server_cert: (( .properties.auctioneer_server_cert.cert_pem ))
      server_key: (( .properties.auctioneer_server_cert.private_key_pem ))
      bbs:
        ca_cert: (( $ops_manager.ca_certificate ))
        client_cert: (( .properties.bbs_client_cert.cert_pem ))
        client_key: (( .properties.bbs_client_cert.private_key_pem ))
      rep:
        require_tls: true
        ca_cert: (( $ops_manager.ca_certificate ))
        client_cert: (( .properties.rep_client_cert.cert_pem ))
        client_key: (( .properties.rep_client_cert.private_key_pem ))
    route_emitter:
      bbs:
        ca_cert: (( $ops_manager.ca_certificate ))
        client_cert: (( .properties.bbs_client_cert.cert_pem ))
        client_key: (( .properties.bbs_client_cert.private_key_pem ))
    ssh_proxy:
      host_key: (( ssh_host_key.private_key_pem ))
      enable_cf_auth: true
      diego_credentials: ""
      uaa_token_url: "https://uaa.(( .cloud_controller.system_domain.value ))/oauth/token"
      uaa_secret: (( .uaa.ssh_proxy_client_credentials.password ))
      bbs:
        ca_cert: (( $ops_manager.ca_certificate ))
        client_cert: (( .properties.bbs_client_cert.cert_pem ))
        client_key: (( .properties.bbs_client_cert.private_key_pem ))
    ssl:
      skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
    cfdot:
      bbs:
        ca_cert: (( $ops_manager.ca_certificate ))
        client_cert: (( .properties.bbs_client_cert.cert_pem ))
        client_key: (( .properties.bbs_client_cert.private_key_pem ))
  syslog_daemon_config:
    address: (( .properties.syslog_host.value ))
    port: (( .properties.syslog_port.value ))
    transport: (( .properties.syslog_protocol.value ))
  metron_agent:
    deployment: cf
  metron_endpoint:
    shared_secret: (( .doppler.shared_secret_credentials.password ))
  loggregator:
    tls:
      ca_cert: (( $ops_manager.ca_certificate ))
      metron:
        cert: (( .doppler.metron_tls_cert.cert_pem ))
        key: (( .doppler.metron_tls_cert.private_key_pem ))
  tcp_emitter:
    bbs:
      client_cert: (( .properties.bbs_client_cert.cert_pem ))
      client_key: (( .properties.bbs_client_cert.private_key_pem ))
    oauth_secret: (( .uaa.tcp_emitter_credentials.password ))
  uaa:
    tls_port: 8443
    ca_cert: (( $ops_manager.ca_certificate ))
  bbs:
    api_location: bbs.service.cf.internal:8889
    ca_cert: (( $ops_manager.ca_certificate ))
