---
metadata_version: '1.7'
provides_product_versions:
- name: cf
  version: 1.7.0.0
product_version: &product_version "1.7.0.0$PRERELEASE_VERSION$"
minimum_version_for_upgrade: 1.6.9-build.0
label: Pivotal Elastic Runtime
description:
  Gives developers the ability to push apps on a dynamically-configured software stack
icon_image: 
rank: 90
serial: false

install_time_verifiers:
  - name: Verifiers::SsoUrlVerifier
    properties:
      url: .properties.uaa.saml.sso_url
  - name: Verifiers::WildcardDomainVerifier
    ignorable: true
    properties:
      domain: .cloud_controller.system_domain
  - name: Verifiers::WildcardDomainVerifier
    ignorable: true
    properties:
      domain: .cloud_controller.apps_domain
  - name: Verifiers::MysqlDatabaseVerifier
    ignorable: true
    properties:
      host: .properties.system_database.external.host
      port: .properties.system_database.external.port
      username: .properties.system_database.external.username
      password: .properties.system_database.external.password
      database: .properties.app_usage_service_database
  - name: Verifiers::MysqlDatabaseVerifier
    ignorable: true
    properties:
      host: .properties.system_database.external.host
      port: .properties.system_database.external.port
      username: .properties.system_database.external.username
      password: .properties.system_database.external.password
      database: .properties.autoscale_database
  - name: Verifiers::MysqlDatabaseVerifier
    ignorable: true
    properties:
      host: .properties.system_database.external.host
      port: .properties.system_database.external.port
      username: .properties.system_database.external.username
      password: .properties.system_database.external.password
      database: .properties.ccdb_database
  - name: Verifiers::MysqlDatabaseVerifier
    ignorable: true
    properties:
      host: .properties.system_database.external.host
      port: .properties.system_database.external.port
      username: .properties.system_database.external.username
      password: .properties.system_database.external.password
      database: .properties.console_database
  - name: Verifiers::MysqlDatabaseVerifier
    ignorable: true
    properties:
      host: .properties.system_database.external.host
      port: .properties.system_database.external.port
      username: .properties.system_database.external.username
      password: .properties.system_database.external.password
      database: .properties.notifications_database
  - name: Verifiers::MysqlDatabaseVerifier
    ignorable: true
    properties:
      host: .properties.system_database.external.host
      port: .properties.system_database.external.port
      username: .properties.system_database.external.username
      password: .properties.system_database.external.password
      database: .properties.uaa_database
  - name: Verifiers::BlobstoreVerifier
    ignorable: true
    properties:
      endpoint: .properties.system_blobstore.external.endpoint
      access_key_id: .properties.system_blobstore.external.access_key
      secret_access_key: .properties.system_blobstore.external.secret_key
      bucket_name: .properties.system_blobstore.external.buildpacks_bucket
      region: .properties.system_blobstore.external.region
      signature_version: .properties.system_blobstore.external.signature_version
  - name: Verifiers::BlobstoreVerifier
    ignorable: true
    properties:
      endpoint: .properties.system_blobstore.external.endpoint
      access_key_id: .properties.system_blobstore.external.access_key
      secret_access_key: .properties.system_blobstore.external.secret_key
      bucket_name: .properties.system_blobstore.external.droplets_bucket
      region: .properties.system_blobstore.external.region
      signature_version: .properties.system_blobstore.external.signature_version
  - name: Verifiers::BlobstoreVerifier
    ignorable: true
    properties:
      endpoint: .properties.system_blobstore.external.endpoint
      access_key_id: .properties.system_blobstore.external.access_key
      secret_access_key: .properties.system_blobstore.external.secret_key
      bucket_name: .properties.system_blobstore.external.packages_bucket
      region: .properties.system_blobstore.external.region
      signature_version: .properties.system_blobstore.external.signature_version
  - name: Verifiers::BlobstoreVerifier
    ignorable: true
    properties:
      endpoint: .properties.system_blobstore.external.endpoint
      access_key_id: .properties.system_blobstore.external.access_key
      secret_access_key: .properties.system_blobstore.external.secret_key
      bucket_name: .properties.system_blobstore.external.resources_bucket
      region: .properties.system_blobstore.external.region
      signature_version: .properties.system_blobstore.external.signature_version

post_deploy_errands:
  - name: smoke-tests
  - name: push-apps-manager
  - name: notifications
  - name: notifications-ui
  - name: autoscaling
  - name: autoscaling-register-broker

form_types:
  - name: domains
    label: Domains
    description: Elastic Runtime hosts applications at subdomains under its apps domain and assigns system components to subdomains under its system domain. You need to configure a wildcard DNS for both the apps domain and system domain. The two domains can be the same, although this is not recommended.
    verifiers:
      - name: Verifiers::WildcardDomainVerifier
        properties:
          domain: .cloud_controller.system_domain
      - name: Verifiers::WildcardDomainVerifier
        properties:
          domain: .cloud_controller.apps_domain
    property_inputs:
      - reference: .cloud_controller.system_domain
        label: System Domain
        description: "This domain is for system-level PCF components, such as Apps Manager, service brokers, etc. You must set up a wildcard DNS record for this domain that points to your entry point load balancer or HAProxy."
      - reference: .cloud_controller.apps_domain
        label: Apps Domain
        description: Default parent domain that pushed apps use for their hostnames. This domain also requires a wildcard DNS record. Use the Cloud Foundry command line interface (cf CLI) to add or delete subdomains assigned to individual apps.

  - name: networking
    label: Networking
    description: Configure security and routing services for your platform. It is usually preferable to use your own load balancer instead of an HAProxy instance as your point-of-entry to the platform.
    property_inputs:
      - reference: .router.static_ips
        label: Router IPs
        description: "If you are not using HAProxy, enter static IP address(es) for the Router(s), which must be within the subnet CIDR block  that you defined in the Ops Manager network configuration. If you have a load balancer, configure it to point to these IPs. If deploying PCF to AWS with an ELB, do not enter IP addresses here. Instead, add the name of your ELB in the Resource Config section, in the ELB Name column for Router."
      - reference: .ha_proxy.static_ips
        label: HAProxy IPs
        description: "If you are using HAProxy, enter its IP address(es). The addresses must be within your subnet CIDR block. Point your DNS to this IP address unless you are using your own load balancer."
      - reference: .properties.networking_point_of_entry
        label: Configure the point-of-entry to this environment
        selector_property_inputs:
          - reference: .properties.networking_point_of_entry.external_ssl
            label: "Select this option if you have an external load balancer, and it can forward encrypted traffic (SSL, HTTPS, etc.) to the Elastic Runtime Router(s). You may also select this option for a non-production environment where load balancing is not required, by configuring a single Router with TLS enabled as your point-of-entry to the Elastic Runtime platform."
            property_inputs:
              - reference: .properties.networking_point_of_entry.external_ssl.ssl_rsa_certificate
                label: Router SSL Termination Certificate and Private Key
                description: "Required for SSL encryption between the load balancer and Router(s)."
              - reference: .properties.networking_point_of_entry.external_ssl.ssl_ciphers
                label: Router SSL Ciphers
                description: Router ciphers are read in Golang and should use underscores instead of dashes in their names e.g. TLS_RSA_WITH_RC4_128_SHA:TLS_RSA_WITH_AES_128_CBC_SHA
          - reference: .properties.networking_point_of_entry.external_non_ssl
            label: "Select this option if you have an external load balancer, but it will not forward any encrypted traffic to the Elastic Runtime Router(s). You may also select this option for a non-production environment where load balancing is not required, by configuring a single Router with TLS disabled as your point-of-entry to the Elastic Runtime platform."
          - reference: .properties.networking_point_of_entry.haproxy
            label: "Select this option if you want to use HAProxy as your first point-of-entry instead of your own load balancer. Note that HAProxy does not provide IP failover, so it is not a robust load balancer."
            property_inputs:
              - reference: .properties.networking_point_of_entry.haproxy.ssl_rsa_certificate
                label: SSL Certificate and Private Key
                description: "This certificate and key are used to terminate SSL traffic at HAProxy. The certificate can have multiple domains attributed to it, for example if you have separate system and application domains. You can also generate a self-signed certificate here with your wildcard system domain."
              - reference: .properties.networking_point_of_entry.haproxy.disable_http
                label: Disable HTTP traffic to HAProxy
                description: "If checked, HAProxy will only allow HTTPS traffic."
              - reference: .properties.networking_point_of_entry.haproxy.ssl_ciphers
                label: HAProxy SSL Ciphers
                description: "These ciphers should use dashes in their names, e.g. `ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384`"
      - reference: .ha_proxy.skip_cert_verify
        label: Disable SSL certificate verification for this environment
        description: You can disable SSL verification if you are using your own self-signed certificates that are not from a trusted CA.
      - reference: .router.disable_insecure_cookies
        label: Disable insecure cookies on the Router
        description: If checked, this turns on the secure flag for cookies generated by router.
      - reference: .properties.route_services
        label: Choose whether to enable route services. Route services enable you to proxy requests to your app over TLS to arbitrary URLs before hitting your app.
        selector_property_inputs:
          - reference: .properties.route_services.enable
            label: Enable route services
            property_inputs:
              - reference: .properties.route_services.enable.ignore_ssl_cert_verification
                label: Ignore SSL certificate verification on route services
                description: "When disabled, the routing tier rejects requests for routes bound to route services if the SSL certificate provided by the route service is not signed by a trusted CA."
          - reference: .properties.route_services.disable
            label: Disable route services
      - reference: .properties.logger_endpoint_port
        label: Loggregator Port
        description: "Default is 443. Enter a new value to override the default, for instance if port 443 on your load balancer is used for other traffic."
      - reference: .diego_cell.garden_network_pool
        label: Applications Subnet (Only change this if you need to avoid address collision with a third-party service on the same subnet.)
        description: Enter a CIDR subnet mask specifying the range of available IP addresses to be assigned to your app containers. This must be different from the network used by the system VMs.
      - reference: .diego_cell.garden_network_mtu
        label: Applications Network Maximum Transmission Unit (MTU) (in bytes)
        description: The default 1454 bytes is fine for most cases, but you might need less, such as for networks that use GRE tunnels.
      - reference: .router.request_timeout_in_seconds
        label: Router Timeout to Backends (in seconds)
        description: "Timeout for connections from Router (and HAProxy, if you use it) to applications and system components. Increase this to accommodate larger uploads over connections with high latency."


  - name: app_containers
    label: Application Containers
    description: "Enable microservice frameworks, private Docker registries, and other services that support your applications at a container level."
    property_inputs:
    - reference: .cloud_controller.enable_custom_buildpacks
      label: Enable Custom Buildpacks
      description: Enable custom-built application runtime buildpacks.
    - reference: .cloud_controller.allow_app_ssh_access
      label: Allow SSH access to app containers
      description: "If you are using a load balancer instead of HAProxy, to enable SSH traffic ensure that your load balancer has port 2222 open. PCF users can give SSH access to an app only if an admin assigns them a Space Developer role in the space that the app runs in. Admins can grant this role in Apps Manager or via the cf CLI."
    - reference: .diego_cell.insecure_docker_registry_list
      label: Private Docker Insecure Registry Whitelist
      description: If you use private Docker image registries that are secured with self-signed certificates, enter them here as a comma-delimited list. List each registry as either an IP:Port tuple or a Hostname:Port tuple.
    - reference: .properties.garden_disk_cleanup
      label: Docker Images Disk-Cleanup Scheduling on Cell VMs
      selector_property_inputs:
      - reference: .properties.garden_disk_cleanup.never
        label: Never clean up Cell disk-space
      - reference: .properties.garden_disk_cleanup.routine
        label: Routinely clean up Cell disk-space
      - reference: .properties.garden_disk_cleanup.threshold
        label: Clean up disk-space once threshold is reached
        property_inputs:
          - reference: .properties.garden_disk_cleanup.threshold.cleanup_threshold_in_mb
            label: Threshold of Disk-Used (MB)
            description: Disk cleanup will initiate whenever a Cell has exceeded this much disk-space for filesystem layers.
  - name: application_dev_controls
    label: Application Developer Controls
    description: Configure restrictions and default settings for applications pushed to Elastic Runtime.
    property_inputs:
      - reference: .cloud_controller.max_file_size
        label: Maximum File Upload Size (MB)
        description: Maximum size of an application upload
      - reference: .cloud_controller.default_app_memory
        label: Default App Memory (MB)
        description: Memory allocated to a newly-pushed app when no value is specified at cf push.
      - reference: .cloud_controller.default_quota_memory_limit_mb
        label: Default App Memory Quota per Org
        description:  "Default memory limit for all apps in an org. This default only applies for the first installation of Elastic Runtime. After initial installation, use the CLI to manage quotas."
      - reference: .cloud_controller.max_disk_quota_app
        label: Maximum Disk Quota per App (MB)
        description: Maximum disk allocated per app. In the event of a system upgrade or outage that causes a rolling deploy, larger apps may not succeed to re-deploy if there is insufficient disk capacity.
      - reference: .cloud_controller.default_disk_quota_app
        label: Default Disk Quota per App (MB)
        description: Default disk allocated per app. In the event of a system upgrade or outage that causes a rolling deploy, larger apps may not re-deploy successfully if there is insufficient disk capacity.
      - reference: .cloud_controller.default_quota_max_number_services
        label: Default Service Instances Quota per Org
        description: Default maximum number of service instances in an org. This default only applies for the first installation of Elastic Runtime, otherwise use the CLI to manage quotas

  - name: uaa
    label: Authentication and Enterprise SSO
    description: Configure your user store access, which can be an internal user store (managed by Cloud Foundry's UAA) or an external user store (LDAP or SAML). You can also adjust the lifetimes of authentication tokens.
    verifiers:
      - name: Verifiers::LDAPBindVerifier
        properties:
          url: .properties.uaa.ldap.url
          credentials: .properties.uaa.ldap.credentials
    property_inputs:
      - reference: .properties.uaa
        label: Configure your UAA user account store with either internal or external authentication mechanisms
        selector_property_inputs:
          - reference: .properties.uaa.internal
            label: "Internal UAA (provided by Elastic Runtime; configure your password policy below)"
            description:
            property_inputs:
              - reference: .properties.uaa.internal.password_min_length
                label: Minimum Password Length
                description: Minimum number of characters for a valid password.
              - reference: .properties.uaa.internal.password_min_uppercase
                label: Minimum Uppercase Characters Required for Password
                description: Minimum number of uppercase characters required for a valid password.
              - reference: .properties.uaa.internal.password_min_lowercase
                label: Minimum Lowercase Characters Required for Password
                description: Minimum number of lowercase characters required for a valid password
              - reference: .properties.uaa.internal.password_min_numeric
                label: Minimum Numerical Digits Required for Password
                description: Minimum number of digits required for a valid password.
              - reference: .properties.uaa.internal.password_min_special
                label: Minimum Special Characters Required for Password
                description: Minimum number of special characters required for a valid password.
              - reference: .properties.uaa.internal.password_expires_after_months
                label: Number of Months Before Password Expires
                description: Password will expire after this many months, input 0 if you want passwords to never expire.
              - reference: .properties.uaa.internal.password_max_retry
                label: Maximum Password Entry Attempts Allowed
                description: Maximum allowed password entry attempts (within a five minute timespan) before the account is locked
          - reference: .properties.uaa.saml
            label: SAML Identity Provider
            description:
            property_inputs:
              - reference: .properties.uaa.saml.sso_name
                label: Provider Name
                description: "Name of Identity Provider. Allowed characters are alphanumeric, plus `_`, and `-`. Do not change this name once deployed."
              - reference: .properties.uaa.saml.display_name
                label: Display Name
                description: "Shows as a link on the login page."
              - reference: .properties.uaa.saml.sso_xml
                label: "Provider Metadata (if you would rather provide an SSO endpoint URL, skip to the next field)"
                description: "Metadata XML content for the Identity Provider."
              - reference: .properties.uaa.saml.sso_url
                label: "(OR) Provider Metadata URL"
                description: "If you did not provide metadata above, enter an SSO endpoint that returns the metadata."
              - reference: .properties.uaa.saml.name_id_format
                label: Name ID Format
                description: "Select the name identifier format configured for the identity provider. This translates to the username on Pivotal Cloud Foundry"
              - reference: .properties.uaa.saml.sign_auth_requests
                label: Sign Authentication Requests
                description: "If enabled, signed authentication requests will be sent to the SAML identity provider."
              - reference: .properties.uaa.saml.require_signed_assertions
                label: Require Signed Assertions
                description: "If enabled, the SAML identity provider should always send signed assertions."
          - reference: .properties.uaa.ldap
            label: LDAP Server
            description:
            property_inputs:
              - reference: .properties.uaa.ldap.url
                label: Server URL
                description: 'Required for LDAP. Must start with `ldap://` or `ldaps://`.'
              - reference: .properties.uaa.ldap.credentials
                label: LDAP Credentials
                description:  Required for LDAP. This is the unique username and password for binding to the server.
              - reference: .properties.uaa.ldap.search_base
                label: User Search Base
                description: 'Required for LDAP. Example: `ou=Users,dc=example,dc=com`.'
              - reference: .properties.uaa.ldap.search_filter
                label: User Search Filter
                description: "Required for LDAP. Replace `{0}` with username."
              - reference: .properties.uaa.ldap.group_search_base
                label: Group Search Base
                description: 'Required if mapping LDAP groups to Admin role. Example: `ou=Groups,dc=example,dc=com`.'
              - reference: .properties.uaa.ldap.group_search_filter
                label: Group Search Filter
                description: 'Required if mapping LDAP groups to Admin role. Replace `{0}` with user DN.'
              - reference: .properties.uaa.ldap.server_ssl_cert
                label: Server SSL Cert
                description: 'Required only for ldaps://. This is the server certificate if using a Self Signed Certificate. If using a CA certificate, this must be the root certificate from your CA.'
              - reference: .properties.uaa.ldap.server_ssl_cert_alias
                label: Server SSL Cert AltName
                description: "Required only for ldaps:// and using a Self Signed Certificate."
              - reference: .properties.uaa.ldap.mail_attribute_name
                label: Email Attribute
                description: "The name of the attribute that contains the user's email address."
      - reference: .uaa.apps_manager_access_token_lifetime
        label: Apps Manager Access Token Lifetime (in seconds)
        description: Set the lifetime of the access token for the Apps Manager login portal.
      - reference: .uaa.apps_manager_refresh_token_lifetime
        label: Apps Manager Refresh Token Lifetime (in seconds)
        description: Set the lifetime of the refresh token for Apps Manager.
      - reference: .uaa.cf_cli_access_token_lifetime
        label: Cloud Foundry CLI Access Token Lifetime (in seconds)
        description: Set the lifetime of the access token for the Cloud Foundry CLI.
      - reference: .uaa.cf_cli_refresh_token_lifetime
        label: Cloud Foundry CLI Refresh Token Lifetime (in seconds)
        description: Set the lifetime of the refresh token for the Cloud Foundry CLI.

  - name: system_database
    label: Databases
    description: Place the databases used by Elastic Runtime components like Cloud Controller and UAA.
    verifiers:
      - name: Verifiers::MysqlDatabaseVerifier
        properties:
          host: .properties.system_database.external.host
          port: .properties.system_database.external.port
          username: .properties.system_database.external.username
          password: .properties.system_database.external.password
          database: .properties.app_usage_service_database
      - name: Verifiers::MysqlDatabaseVerifier
        properties:
          host: .properties.system_database.external.host
          port: .properties.system_database.external.port
          username: .properties.system_database.external.username
          password: .properties.system_database.external.password
          database: .properties.autoscale_database
      - name: Verifiers::MysqlDatabaseVerifier
        properties:
          host: .properties.system_database.external.host
          port: .properties.system_database.external.port
          username: .properties.system_database.external.username
          password: .properties.system_database.external.password
          database: .properties.ccdb_database
      - name: Verifiers::MysqlDatabaseVerifier
        properties:
          host: .properties.system_database.external.host
          port: .properties.system_database.external.port
          username: .properties.system_database.external.username
          password: .properties.system_database.external.password
          database: .properties.console_database
      - name: Verifiers::MysqlDatabaseVerifier
        properties:
          host: .properties.system_database.external.host
          port: .properties.system_database.external.port
          username: .properties.system_database.external.username
          password: .properties.system_database.external.password
          database: .properties.notifications_database
      - name: Verifiers::MysqlDatabaseVerifier
        properties:
          host: .properties.system_database.external.host
          port: .properties.system_database.external.port
          username: .properties.system_database.external.username
          password: .properties.system_database.external.password
          database: .properties.uaa_database
    property_inputs:
    - reference: .properties.system_database
      label: "Choose the location of your system databases"
      selector_property_inputs:
      - reference: .properties.system_database.internal
        label: Internal Databases - MySQL and Postgres (the Postgres DBs are not highly-available, but this selection is required if you want to keep your system data from a pre-1.6.0 Elastic Runtime that you upgraded)
      - reference: .properties.system_database.internal_mysql
        label: Internal Databases - MySQL (preferred for complete high-availability)
      - reference: .properties.system_database.external
        label: External Databases (preferred if, for example, you use AWS RDS)
        property_inputs:
          - reference: .properties.system_database.external.host
            label: Hostname DNS Name
          - reference: .properties.system_database.external.port
            label: TCP Port
          - reference: .properties.system_database.external.username
            label: Username
          - reference: .properties.system_database.external.password
            label: Password

  - name: mysql_config
    label: Internal MySQL
    description:  Only configure this section if you selected Internal Databases - MySQL or Internal Databases - MySQL and Postgres in the previous Databases section.
    markdown: |
      ## A proxy tier routes MySQL connections from internal components to healthy cluster nodes. Configure DNS and/or your own load balancer to point to multiple proxy instances for increased availability. TCP healthchecks can be configured against port 1936.
      ## The automated backups functionality works with any S3-compatible file store that can receive your backup files.
    property_inputs:
      - reference: .mysql_proxy.static_ips
        label: MySQL Proxy IPs
        description: "Enter the IP address(es) for the MySQL proxy instances configured on your external load balancer."
      - reference: .mysql_proxy.service_hostname
        label: MySQL Service Hostname
        description: "To remove a MySQL proxy as a single point of failure, configure your load balancer to route application requests to multiple proxy instances. Then enter the IP or hostname of the load balancer here, so components reach their MySQL databases through the load balancer. If this field is blank, components use the IP of the first MySQL proxy instance."
      - reference: .properties.mysql_backups
        label: Automated Backups Configuration
        selector_property_inputs:
        - reference: .properties.mysql_backups.disable
          label: |
            Disable Automated MySQL Backups (With this option, set Resource Config > Backup Prepare Node > Instances to 0.)
          description: Disable mysql_backups
        - reference: .properties.mysql_backups.enable
          label: "Enable Automated MySQL Backups (With this option, set Resource Config > Backup Prepare Node > Instances to 1.)"
          description: Enable MySQL Backups
          property_inputs:
          - reference: .properties.mysql_backups.enable.bucket_name
            label: S3 Bucket Name
            description: Do not include 's3://' prefix, trailing '/', or underscores. The bucket is created automatically if it does not already exist.
          - reference: .properties.mysql_backups.enable.bucket_path
            label: Bucket Path
            description: Specify a folder within the bucket to hold the MySQL backups. Do not include a trailing slash.
          - reference: .properties.mysql_backups.enable.access_key_id
            label: AWS Access Key ID
          - reference: .properties.mysql_backups.enable.secret_access_key
            label: AWS Secret Access Key
          - reference: .properties.mysql_backups.enable.cron_schedule
            label: Cron Schedule
            description: Schedule MySQL backups as a cron expression (see http://godoc.org/github.com/robfig/cron). Schedule uses the machine local time zone.

  - name: system_blobstore
    label: File Storage
    description: "Configure the location of file storage for Elastic Runtime. Only do this during the initial installation of Elastic Runtime. Do not change anything in this section when upgrading. For an existing installation, you must perform a manual data migration to change this configuration safely. Consult Pivotal Cloud Foundry documentation for details."
    verifiers:
      - name: Verifiers::BlobstoreVerifier
        properties:
          endpoint: .properties.system_blobstore.external.endpoint
          access_key_id: .properties.system_blobstore.external.access_key
          secret_access_key: .properties.system_blobstore.external.secret_key
          bucket_name: .properties.system_blobstore.external.buildpacks_bucket
          region: .properties.system_blobstore.external.region
          signature_version: .properties.system_blobstore.external.signature_version
      - name: Verifiers::BlobstoreVerifier
        properties:
          endpoint: .properties.system_blobstore.external.endpoint
          access_key_id: .properties.system_blobstore.external.access_key
          secret_access_key: .properties.system_blobstore.external.secret_key
          bucket_name: .properties.system_blobstore.external.droplets_bucket
          region: .properties.system_blobstore.external.region
          signature_version: .properties.system_blobstore.external.signature_version
      - name: Verifiers::BlobstoreVerifier
        properties:
          endpoint: .properties.system_blobstore.external.endpoint
          access_key_id: .properties.system_blobstore.external.access_key
          secret_access_key: .properties.system_blobstore.external.secret_key
          bucket_name: .properties.system_blobstore.external.packages_bucket
          region: .properties.system_blobstore.external.region
          signature_version: .properties.system_blobstore.external.signature_version
      - name: Verifiers::BlobstoreVerifier
        properties:
          endpoint: .properties.system_blobstore.external.endpoint
          access_key_id: .properties.system_blobstore.external.access_key
          secret_access_key: .properties.system_blobstore.external.secret_key
          bucket_name: .properties.system_blobstore.external.resources_bucket
          region: .properties.system_blobstore.external.region
          signature_version: .properties.system_blobstore.external.signature_version
    property_inputs:
    - reference: .properties.system_blobstore
      label: "Configure your Cloud Controller's filesystem"
      selector_property_inputs:
      - reference: .properties.system_blobstore.internal
        label: Internal
        description:
      - reference: .properties.system_blobstore.external
        label: External S3-Compatible File Store
        description:
        property_inputs:
          - reference: .properties.system_blobstore.external.endpoint
            label: URL Endpoint
            description: URL endpoint of your S3-compatible file store
          - reference: .properties.system_blobstore.external.access_key
            label: Access Key
          - reference: .properties.system_blobstore.external.secret_key
            label: Secret Key
          - reference: .properties.system_blobstore.external.signature_version
            label: S3 Signature Version
          - reference: .properties.system_blobstore.external.region
            label: Region
          - reference: .properties.system_blobstore.external.buildpacks_bucket
            label: Buildpacks Bucket Name
            description: S3 bucket for storing app buildpacks.
          - reference: .properties.system_blobstore.external.droplets_bucket
            label: Droplets Bucket Name
            description: S3 bucket for storing app droplets. Pivotal recommends that you use a unique bucket name for droplets, but you can also use the same name as above.
          - reference: .properties.system_blobstore.external.packages_bucket
            label: Packages Bucket Name
            description: S3 bucket for storing app packages. Pivotal recommends that you use a unique bucket name for packages, but you can also use the same name as above.
          - reference: .properties.system_blobstore.external.resources_bucket
            label: Resources Bucket Name
            description: S3 bucket for storing app resources. Pivotal recommends that you use a unique bucket name for app resources, but you can also use the same name as above.

  - name: syslog_aggregator
    label: System Logging
    description: Configure system logging. Complete the External Syslog fields only if using an external syslogd server.
    property_inputs:
      - reference: .cloud_controller.security_event_logging_enabled
        label: Enable Cloud Controller security event logging
        description: When enabled, all requests to Cloud Controller will be captured in the syslog
      - reference: .properties.syslog_host
        label: External Syslog Aggregator Hostname
        description: The aggregator must be reachable from the Elastic Runtime network, accept TCP, UDP or RELP connections, and use the RELP protocol (e.g. rsyslogd). You can also configure this with an IP address.
      - reference: .properties.syslog_port
        label: External Syslog Aggregator Port
        description: The typical syslogd port is 514. Ensure syslogd is listening on external interfaces.
      - reference: .properties.syslog_protocol
        label: External Syslog Network Protocol
        description: Select the transport protocol for forwarding logs.
      - reference: .doppler.message_drain_buffer_size
        label: "Syslog Drain Buffer Size (# of messages)"
        description: "The number of log messages the buffer holds before dropping messages. A larger buffer size might overload the system."

  - name: generic_white_label_config
    label: Custom Branding
    description: "Customize colors, images, and text for Apps Manager and the Cloud Foundry login portal."
    property_inputs:
      - reference: .push-apps-manager.company_name
        label: Company Name
        description: Defaults to 'Pivotal'
      - reference: .push-apps-manager.accent_color
        label: Accent Color
        description: Enter a hexadecimal color code like '#71ffda'
      - reference: .push-apps-manager.logo
        label: Main Logo (PNGs only)
        description: "Enter a base64-encoded PNG image string, but leave out the mime-type (data:image/png;base64,) string. Only enter the base64 encoded data."
      - reference: .push-apps-manager.square_logo
        label: Square Logo/Favicon (PNGs only)
        description: "Enter a base64-encoded PNG image string, but leave out the mime-type (data:image/png;base64,) string. Only enter the base64 encoded data."
      - reference: .push-apps-manager.footer_text
        label: Footer Text
        description: "Defaults to 'Pivotal Software Inc. All rights reserved.'"
      - reference: .push-apps-manager.footer_links
        label: Footer Links
        description: "You may configure up to three links in the Apps Manager footer"
        property_inputs:
          - reference: name
            label: "Link text"
          - reference: href
            label: "URL"
      - reference: .push-apps-manager.global_wrapper_bg_color
        label: Classification Header/Footer Background Color
        description: Enter a hexadecimal color code like '#71ffda'
      - reference: .push-apps-manager.global_wrapper_text_color
        label: Classification Header/Footer Text Color
        description: Enter a hexadecimal color code like '#71ffda'
      - reference: .push-apps-manager.global_wrapper_header_content
        label: Classification Header Content
        description: 'Plain text or HTML Markup'
      - reference: .push-apps-manager.global_wrapper_footer_content
        label: Classification Footer Content
        description: 'Plain text or HTML Markup'

  - name: apps_manager_config
    label: Apps Manager
    description: "Configure Apps Manager"
    property_inputs:
      - reference: .push-apps-manager.enable_internal_user_store
        label: Enable Internal User Store
      - reference: .push-apps-manager.enable_non_admin_role_management
        label: Enable Non Admin Role Management
      - reference: .push-apps-manager.product_name
        label: Product Name
        description: Replace "Apps Manager" in the header with a custom product name (defaults to "Apps Manager" if blank)
      - reference: .push-apps-manager.marketplace_name
        label: Marketplace Name
        description: Replaces "Marketplace" on the Apps Manager Marketplace Pages.
      - reference: .push-apps-manager.nav_links
        label: Customize Sidebar Links
        description: "You may configure up to 10 links in the Apps Manager sidebar"
        property_inputs:
          - reference: name
            label: "Link text"
          - reference: href
            label: "URL"

  - name: smtp_config
    label: Email Notifications
    description: Configure Simple Mail Transfer Protocol for the Notifications application to send email notifications about your deployment. This application is deployed as an errand in Elastic Runtime. If you do not need this service, leave this section blank and disable the Notifications and Notifications UI errands.
    property_inputs:
      - reference: .properties.smtp_from
        label: From Email
        description: The email address from which emails are sent.
      - reference: .properties.smtp_address
        label: Address of SMTP Server
        description: The SMTP address of the server that sends emails.
      - reference: .properties.smtp_port
        label: Port of SMTP Server
        description: The port of the SMTP server that sends emails.
      - reference: .properties.smtp_credentials
        label: SMTP Server Credentials
        description: The credentials for the SMTP server that sends emails.
      - reference: .properties.smtp_enable_starttls_auto
        label: SMTP Enable Automatic STARTTLS
      - reference: .properties.smtp_auth_mechanism
        label: SMTP Authentication Mechanism
      - reference: .properties.smtp_crammd5_secret
        label: SMTP CRAMMD5 secret

  - name: cloud_controller
    label: Restore CCDB Encryption Key
    description: Enter the encryption key for restoring the Cloud Controller database from a backup.
    property_inputs:
      - reference: .cloud_controller.encrypt_key
        label: Cloud Controller DB Encryption Key
        description: "Leave blank unless restoring a Cloud Controller Database exported from a previous installation."

  - name: smoke_tests
    label: Smoke Tests
    description: Specify a Cloud Foundry organization and space where smoke tests can run if in the future you delete your Elastic Runtime deployment domains.
    property_inputs:
      - reference: .properties.smoke_tests
        label: Choose whether to create a new org and space on demand for smoke tests
        selector_property_inputs:
        - reference: .properties.smoke_tests.on_demand
          label: Temporary org and space (This org and space are deleted after smoke tests finish.)
        - reference: .properties.smoke_tests.specified
          label: Specified org and space (The org and space must have a domain available for routing.)
          property_inputs:
            - reference: .properties.smoke_tests.specified.org_name
              label: Organization
              description: The Elastic Runtime organization to use when running tests
            - reference: .properties.smoke_tests.specified.space_name
              label: Space
              description: The Elastic Runtime space to use when running tests
            - reference: .properties.smoke_tests.specified.apps_domain
              label: Domain
              description: Must be accessible to the organization

  - name: experimental_features
    label: Experimental Features
    description: Diego Cells are virtual machines that host applications. Specify how much memory or disk you want to set as the cells available capacity. You can overcommit these resources with values that exceed the Diego Cell VM sizes configured in the Resource Config section.
    property_inputs:
      - reference: .diego_cell.executor_memory_capacity
        label: Cell Memory Capacity (MB)
      - reference: .diego_cell.executor_disk_capacity
        label: Cell Disk Capacity (MB)

job_types:
  - name: consul_server
    label: Consul
    resource_label: Consul
    description:
    templates:
      - name: consul_agent
        release: cf
      - name: metron_agent
        release: cf
      - name: statsd-injector
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 1024
        constraints:
          min: 1024

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1
    single_az_only: false
    serial: true

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: true
      default: 1
      constraints:
        min: 1
        may_only_be_odd_or_zero: true

    property_blueprints:

    manifest: |
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      loggregator:
        etcd:
          machines: (( .etcd_server.ips ))
      consul:
        encrypt_keys:
        - (( .properties.consul_encrypt_key.value ))
        ca_cert: (( $ops_manager.ca_certificate ))
        agent_cert: (( .properties.consul_agent_cert.cert_pem ))
        agent_key: (( .properties.consul_agent_cert.private_key_pem ))
        server_cert: (( .properties.consul_server_cert.cert_pem ))
        server_key: (( .properties.consul_server_cert.private_key_pem ))
        agent:
          domain: cf.internal
          mode: server
          servers:
            lan: (( .consul_server.ips ))

  - name: nats
    label: NATS
    resource_label: NATS
    description: Acts as the Pivotal CF Elastic Runtime message bus
    templates:
      - name: nats
        release: cf
      - name: metron_agent
        release: cf
      - name: statsd-injector
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024
          max: 3_000 # monit will restart when > 3000

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: true
      default: 1
      constraints:
        min: 1

    property_blueprints:
      - name: credentials
        type: simple_credentials
        default:
          identity: nats

    manifest: |
      nats:
        user: (( credentials.identity ))
        password: (( credentials.password ))
        address: (( first_ip ))
        machines: (( ips ))
        port: 4222
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      loggregator:
        etcd:
          machines: (( .etcd_server.ips ))

  - name: etcd_server
    label: etcd
    resource_label: etcd
    description: An etcd cluster node, which maintains the state of applications, and its metrics server
    templates:
      - name: etcd
        release: cf
      - name: etcd_metrics_server
        release: cf
      - name: metron_agent
        release: cf
      - name: statsd-injector
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: true
      default: 1
      constraints:
        min: 1
        may_only_be_odd_or_zero: true

    property_blueprints:

    manifest: |
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      etcd:
        machines: (( ips ))
        peer_require_ssl: false
        require_ssl: false
      loggregator:
        etcd:
          machines: (( .etcd_server.ips ))
      etcd_metrics_server:
        nats:
          username: (( .nats.credentials.identity ))
          password: (( .nats.credentials.password ))
          machines: (( .nats.ips ))

  - name: diego_database
    label: Diego BBS
    resource_label: Diego BBS
    description: An etcd cluster node for Diego
    templates:
      - name: consul_agent
        release: cf
      - name: etcd
        release: etcd
      - name: bbs
        release: diego
      - name: metron_agent
        release: cf
      - name: statsd-injector
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    serial: true
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: true
      default: 1
      constraints:
        min: 1
        may_only_be_odd_or_zero: true

    property_blueprints:
      - name: bbs_encryption_passphrase
        type: secret
        configurable: false

    manifest: |
      etcd:
        advertise_urls_dns_suffix: etcd.service.cf.internal
        machines: ['etcd.service.cf.internal']
        cluster: (( bosh_job_partition_stats ))
        ca_cert: (( $ops_manager.ca_certificate ))
        server_cert: (( .properties.etcd_server_cert.cert_pem ))
        server_key: (( .properties.etcd_server_cert.private_key_pem ))
        client_cert: (( .properties.etcd_client_cert.cert_pem ))
        client_key: (( .properties.etcd_client_cert.private_key_pem ))
        peer_ca_cert: (( $ops_manager.ca_certificate ))
        peer_cert: (( .properties.etcd_peer_cert.cert_pem ))
        peer_key: (( .properties.etcd_peer_cert.private_key_pem ))
      diego:
        bbs:
          ca_cert: (( $ops_manager.ca_certificate ))
          server_cert: (( .properties.bbs_server_cert.cert_pem ))
          server_key: (( .properties.bbs_server_cert.private_key_pem ))
          client_cert: (( .properties.bbs_client_cert.cert_pem ))
          client_key: (( .properties.bbs_client_cert.private_key_pem ))
          active_key_label: key1
          encryption_keys:
            - label: key1
              passphrase: (( bbs_encryption_passphrase.value ))
          auctioneer:
            api_url: http://auctioneer.service.cf.internal:9016
          etcd:
            advertise_urls_dns_suffix: etcd.service.cf.internal
            machines: ['etcd.service.cf.internal']
            ca_cert: (( $ops_manager.ca_certificate ))
            server_cert: (( .properties.etcd_server_cert.cert_pem ))
            server_key: (( .properties.etcd_server_cert.private_key_pem ))
            client_cert: (( .properties.etcd_client_cert.cert_pem ))
            client_key: (( .properties.etcd_client_cert.private_key_pem ))
            peer_ca_cert: (( $ops_manager.ca_certificate ))
            peer_cert: (( .properties.etcd_peer_cert.cert_pem ))
            peer_key: (( .properties.etcd_peer_cert.private_key_pem ))
      consul:
        encrypt_keys:
        - (( .properties.consul_encrypt_key.value ))
        ca_cert: (( $ops_manager.ca_certificate ))
        agent_cert: (( .properties.consul_agent_cert.cert_pem ))
        agent_key: (( .properties.consul_agent_cert.private_key_pem ))
        server_cert: (( .properties.consul_server_cert.cert_pem ))
        server_key: (( .properties.consul_server_cert.private_key_pem ))
        agent:
          domain: cf.internal
          servers:
            lan: (( .consul_server.ips ))
          services:
            etcd: {}
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      loggregator:
        etcd:
          machines: (( .etcd_server.ips ))

  - name: nfs_server
    label: NFS Server
    resource_label: NFS Server
    description: Stores droplets and app packages on behalf of Cloud Controller
    templates:
      - name: debian_nfs_server
        release: cf
      - name: metron_agent
        release: cf
      - name: statsd-injector
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 102_400
        constraints:
          min: 10_240

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1
    single_az_only: true

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: true
      default: 1
      constraints:
        max: 1

    property_blueprints:

    manifest: |
      nfs_server:
        allow_from_entries: (( .cloud_controller.subnet_cidrs ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      loggregator:
        etcd:
          machines: (( .etcd_server.ips ))

  - name: router
    label: Router
    resource_label: Router
    description: Routers route Internet traffic to applications and between Pivotal CF Elastic Runtime components.
    templates:
      - name: gorouter
        release: cf
      - name: metron_agent
        release: cf
      - name: statsd-injector
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: true
      default: 1
      constraints:
        min: 1

    property_blueprints:
      - name: status_credentials
        type: simple_credentials
        default:
          identity: router_status

      - name: static_ips
        type: ip_ranges
        configurable: true
        optional: true

      - name: disable_insecure_cookies
        type: boolean
        configurable: true
        default: false

      - name: route_services_secret
        type: secret

      - name: request_timeout_in_seconds
        type: integer
        configurable: true
        default: 900
        constraints:
          min: 1

    manifest: |
      request_timeout_in_seconds: (( request_timeout_in_seconds.value ))
      networks:
        apps: default
      router:
        enable_routing_api: false
        secure_cookies: (( .router.disable_insecure_cookies.value ))
        status:
          user: router_status
          password: (( status_credentials.password ))
        cipher_suites: (( .properties.networking_point_of_entry.external_ssl.ssl_ciphers.value ))
        route_services_secret: (( .properties.route_services.selected_option.parsed_manifest(secret) ))
        enable_ssl: "(( .properties.networking_point_of_entry.external_ssl.ssl_rsa_certificate.value_present? ? 'true' : 'false' ))"
        ssl_cert: (( .properties.networking_point_of_entry.external_ssl.ssl_rsa_certificate.cert_pem ))
        ssl_key: (( .properties.networking_point_of_entry.external_ssl.ssl_rsa_certificate.private_key_pem ))
        ssl_skip_validation: (( .properties.route_services.enable.ignore_ssl_cert_verification.value ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      loggregator:
        etcd:
          machines: (( .etcd_server.ips ))
      uaa:
        ssl:
          port: -1
        clients:
          gorouter:
            secret: (( .uaa.gorouter_client_credentials.password ))

  - name: mysql_proxy
    label: MySQL Proxy
    resource_label: MySQL Proxy
    description: MySQL Proxy
    templates:
      - name: proxy
        release: cf-mysql
      - name: statsd-injector
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 4_096
        constraints:
          min: 4_096

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: true
      default: 1
      constraints:
        min: 0

    property_blueprints:
      - name: static_ips
        type: ip_ranges
        configurable: true
        optional: true

      - name: service_hostname
        type: network_address
        configurable: true
        optional: true

      - name: dashboard_credentials
        type: simple_credentials
        default:
          identity: admin

    manifest: |
      network_name: default
      external_host: "p-mysql.internal.(( .cloud_controller.system_domain.value ))"
      proxy:
        api_password: (( dashboard_credentials.password ))
        api_username: (( dashboard_credentials.identity ))
        proxy_ips: (( .mysql_proxy.ips ))
      cluster_ips: (( .mysql.ips ))
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        machines: (( .nats.ips ))
        port: 4222
      syslog_aggregator:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))

  - name: mysql
    label: MySQL Server
    resource_label: MySQL Server
    description: Multi-tenant MySQL server.
    templates:
      - name: mysql
        release: cf-mysql
      - name: streaming-mysql-backup-tool
        release: mysql-backup
      - name: statsd-injector
        release: cf
    max_in_flight: 1
    single_az_only: false
    resource_definitions:
    - name: ram
      type: integer
      label: RAM
      configurable: true
      default: 8192
      constraints:
        min: 4096
    - name: ephemeral_disk
      type: integer
      label: Ephemeral Disk
      configurable: true
      default: 30000
      constraints:
        min: 10000
    - name: persistent_disk
      type: integer
      label: Persistent Disk
      configurable: true
      default: 100000
      constraints:
        min: 10000
    - name: cpu
      type: integer
      label: CPU
      configurable: true
      default: 2
      constraints:
        min: 1
        power_of_two: true
    static_ip: 1
    dynamic_ip: 0
    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: true
      default: 1
      constraints:
        may_only_be_odd_or_zero: true
    property_blueprints:
    - name: mysql_admin_credentials
      type: simple_credentials
      default:
        identity: root
    - name: mysql_bootstrap_credentials
      type: simple_credentials
      label: Bootstrap Endpoint Credentials
    - name: mysql_backup_server_credentials
      type: simple_credentials
      label: Backup Endpoint Credentials
    - name: app_usage_credentials
      type: simple_credentials
      default:
        identity: app_usage
    - name: notifications_credentials
      type: simple_credentials
    - name: autoscale_credentials
      type: simple_credentials
    - name: ccdb_credentials
      type: simple_credentials
    - name: uaadb_credentials
      type: simple_credentials
    - name: consoledb_credentials
      type: simple_credentials
    - name: database_startup_timeout
      type: integer
      configurable: false
      default: 1200
    manifest: |
      roadmin_enabled: false
      admin_password: (( mysql_admin_credentials.password ))
      cluster_ips: (( .mysql.ips ))
      # allow up to 20 minutes for large SST's to succeed,
      # this is temporary until BOSH pre-start is implemented
      database_startup_timeout: (( .mysql.database_startup_timeout.value ))
      innodb_buffer_pool_size: 2147483648
      max_connections: 1500
      network_name: default
      bootstrap_endpoint:
        username: (( mysql_bootstrap_credentials.identity ))
        password: (( mysql_bootstrap_credentials.password ))
      seeded_databases:
        - name: ccdb
          username: (( ccdb_credentials.identity ))
          password: (( ccdb_credentials.password ))
        - name: uaa
          username: (( uaadb_credentials.identity ))
          password: (( uaadb_credentials.password ))
        - name: app_usage_service
          username: (( app_usage_credentials.identity ))
          password: (( app_usage_credentials.password ))
        - name: notifications
          username: (( notifications_credentials.identity ))
          password: (( notifications_credentials.password ))
        - name: autoscale
          username: (( autoscale_credentials.identity ))
          password: (( autoscale_credentials.password ))
        - name: console
          username: (( consoledb_credentials.identity ))
          password: (( consoledb_credentials.password ))
      syslog_aggregator:
        address: (( ..cf.properties.syslog_host.value ))
        port: (( ..cf.properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      mysql-backup:
        command: innobackupex --user=(( mysql_admin_credentials.identity )) --password=(( mysql_admin_credentials.password )) --stream=tar tmp/
        port: 8081
        credentials:
          username: (( mysql_backup_server_credentials.identity ))
          password: (( mysql_backup_server_credentials.password ))

  - name: backup-prepare
    label: Backup Prepare Node
    resource_label: Backup Prepare Node
    description: Streams backups from MySQL Cluster
    templates:
    - name: streaming-mysql-backup-client
      release: mysql-backup
    - name: service-backup
      release: service-backup
    - name: statsd-injector
      release: cf
    max_in_flight: 1
    single_az_only: true
    resource_definitions:
    - name: ram
      type: integer
      label: RAM
      configurable: true
      default: 1024
      constraints:
        min: 1024
    - name: ephemeral_disk
      type: integer
      label: Ephemeral Disk
      configurable: true
      default: 200000 # This value must be twice the mysql persistent disk
      contraints:
        min: 10000
    - name: persistent_disk
      type: integer
      label: Persistent Disk
      configurable: false
      default: 0
    - name: cpu
      type: integer
      label: CPU
      configurable: true
      default: 1
      constraints:
        min: 1
        power_of_two: true
    static_ip: 1
    dynamic_ip: 0
    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: true
      default: 0
      constraints:
        min: 0
        max: 1
    property_blueprints:
    - name: backup_encryption_key
      type: secret
      label: Backup Symmetric Encryption Key
    manifest: |
      service-backup:
        blobstore:
          bucket_name: (( .properties.mysql_backups.enable.bucket_name.value ))
          bucket_path: (( .properties.mysql_backups.enable.bucket_path.value ))
          access_key_id: (( .properties.mysql_backups.enable.access_key_id.value ))
          secret_access_key: (( .properties.mysql_backups.enable.secret_access_key.value ))
        source_folder: /var/vcap/data/mysql-mysql_backups
        source_executable: /var/vcap/jobs/streaming-mysql-backup-client/bin/client
        cleanup_executable: /bin/bash -c /var/vcap/jobs/streaming-mysql-backup-client/bin/cleanup-directories
        cron_schedule: (( .properties.mysql_backups.enable.cron_schedule.value ))
      streaming-mysql-backup-client:
        output_folder: /var/vcap/data/mysql-mysql_backups
        symmetric_key: (( backup_encryption_key.value ))
        backup-generator:
          cluster_ips: (( .mysql.ips ))
          port: 8081
          endpoint: /backup
          credentials:
            username: (( .mysql.mysql_backup_server_credentials.identity ))
            password: (( .mysql.mysql_backup_server_credentials.password ))

  - name: ccdb
    label: Cloud Controller Database
    resource_label: Cloud Controller Database (Postgres)
    description: Stores Cloud Controller information
    templates:
      - name: postgres
        release: cf
      - name: metron_agent
        release: cf
      - name: statsd-injector
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1
    single_az_only: true

    instance_definition:
      name: instances
      type: integer
      label: Instances
      default: 0
      configurable: true
      constraints:
        max: 1
    property_blueprints:
      - name: credentials
        type: simple_credentials
        default:
          identity: admin

    manifest: |
      databases:
        address: (( first_ip ))
        port: 2544
        db_scheme: "postgres"
        roles:
        - tag: admin
          name: (( credentials.identity ))
          password: (( credentials.password ))
        databases:
        - tag: cc
          name: ccdb
          citext: true
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      loggregator:
        etcd:
          machines: (( .etcd_server.ips ))

  - name: uaadb
    label: UAA Database
    resource_label: UAA Database (Postgres)
    description: Stores user information for the UAA
    templates:
      - name: postgres
        release: cf
      - name: metron_agent
        release: cf
      - name: statsd-injector
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 8_192
        constraints:
          min: 8_192

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1
    single_az_only: true

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: true
      constraints:
        max: 1
      default: 0

    property_blueprints:
      - name: credentials
        type: simple_credentials
        default:
          identity: root

    manifest: |
      databases:
        address: (( first_ip ))
        port: 2544
        db_scheme: postgresql
        roles:
        - tag: admin
          name: (( credentials.identity ))
          password: (( credentials.password ))
        databases:
        - tag: uaa
          name: uaa
      networks:
        services: default
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      loggregator:
        etcd:
          machines: (( .etcd_server.ips ))

  - name: consoledb
    label: Apps Manager Database
    resource_label: Apps Manager Database (Postgres)
    description: Apps Manager Database
    templates:
      - name: postgres
        release: cf
      - name: metron_agent
        release: cf
      - name: statsd-injector
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1
    single_az_only: true

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: true
      constraints:
        max: 1
      default: 0

    property_blueprints:
      - name: credentials
        type: simple_credentials
        default:
          identity: root

    manifest: |
      databases:
        address: (( first_ip ))
        port: 2544
        db_scheme: postgresql
        roles:
        - tag: admin
          name: (( credentials.identity ))
          password: (( credentials.password ))
        databases:
        - tag: console
          name: console
      networks:
        services: default
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      loggregator:
        etcd:
          machines: (( .etcd_server.ips ))

  - name: cloud_controller
    label: Cloud Controller
    resource_label: Cloud Controller
    description: Coordinates Pivotal CF Elastic Runtime application lifecycles
    templates:
      - name: consul_agent
        release: cf
      - name: go-buildpack
        release: cf
      - name: binary-buildpack
        release: cf
      - name: nodejs-buildpack
        release: cf
      - name: ruby-buildpack
        release: cf
      - name: php-buildpack
        release: cf
      - name: python-buildpack
        release: cf
      - name: java-offline-buildpack
        release: cf
      - name: staticfile-buildpack
        release: cf
      - name: cloud_controller_ng
        release: cf
      - name: metron_agent
        release: cf
      - name: route_registrar
        release: cf
      - name: nfs_mounter
        release: cf
      - name: statsd-injector
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 4_096
        constraints:
          min: 4_096

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 20_480
        constraints:
          min: 20_480

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    single_az_only: false
    serial: true

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: true
      default: 1
      constraints:
        min: 1

    property_blueprints:
      - name: staging_upload_credentials
        type: simple_credentials
        default:
          identity: staging_upload_user

      - name: bulk_api_credentials
        type: simple_credentials
        default:
          identity: bulk_api

      - name: db_encryption_credentials
        type: simple_credentials
        default:
          identity: db_encryption

      - name: encrypt_key
        type: secret
        configurable: true
        optional: true

      - name: max_file_size
        type: integer
        configurable: true
        optional: false
        default: 1024
        constraints:
          min: 1024
          max: 2048

      - name: default_app_memory
        type: integer
        configurable: true
        optional: false
        default: 1024
        constraints:
          min: 64
          max: 2048

      - name: max_disk_quota_app
        type: integer
        configurable: true
        optional: false
        default: 2048
        constraints:
          min: 512
          max: 10240

      - name: default_disk_quota_app
        type: integer
        configurable: true
        optional: false
        default: 1024
        constraints:
          min: 512
          max: 10240

      - name: enable_custom_buildpacks
        type: boolean
        configurable: true
        optional: false
        default: true

      - name: system_domain
        type: wildcard_domain
        configurable: true

      - name: apps_domain
        type: wildcard_domain
        configurable: true

      - name: default_quota_memory_limit_mb
        type: integer
        configurable: true
        default: 10240
        constraints:
          min: 10240
          max: 102400

      - name: default_quota_max_number_services
        type: integer
        configurable: true
        default: 100
        constraints:
          min: 0
          max: 1000

      - name: allow_app_ssh_access
        type: boolean
        configurable: true
        default: true

      - name: internal_api_user_credentials
        type: simple_credentials

      - name: security_event_logging_enabled
        type: boolean
        configurable: true
        default: true

    manifest: |
      app_ssh:
        host_key_fingerprint: (( .diego_brain.ssh_host_key.public_key_fingerprint ))
      domain: (( .cloud_controller.system_domain.value ))
      system_domain: (( .cloud_controller.system_domain.value ))
      system_domain_organization: system
      app_domains: ["(( .cloud_controller.apps_domain.value ))"]
      support_address: https://support.pivotal.io

      route_registrar:
        routes:
        - name: api
          port: 9022
          registration_interval: 20s
          tags:
            component: CloudController
          uris:
          - "api.(( .cloud_controller.system_domain.value ))"
        nats:
          user: (( .nats.credentials.identity ))
          password: (( .nats.credentials.password ))
          port: 4222
          machines: (( .nats.ips ))

      cc:
        allowed_cors_domains:
        - https://apm.(( .cloud_controller.system_domain.value ))
        allow_app_ssh_access: (( .cloud_controller.allow_app_ssh_access.value ))
        default_to_diego_backend: true
        buildpacks: (( .properties.system_blobstore.selected_option.parsed_manifest(ccbuildpack) ))
        droplets: (( .properties.system_blobstore.selected_option.parsed_manifest(ccdroplet) ))
        service_name: cloud-controller-ng
        external_protocol: https
        packages: (( .properties.system_blobstore.selected_option.parsed_manifest(ccpackage) ))
        resource_pool: (( .properties.system_blobstore.selected_option.parsed_manifest(ccresource) ))
        bootstrap_admin_email: admin
        bulk_api_password: (( bulk_api_credentials.password ))
        client_max_body_size: (( max_file_size.value ))M
        maximum_app_disk_in_mb: (( max_disk_quota_app.value ))
        default_app_disk_in_mb: (( default_disk_quota_app.value ))
        default_app_memory: (( default_app_memory.value ))
        db_encryption_key: (( encrypt_key.value || db_encryption_credentials.password ))
        default_running_security_groups:
          - all_open
        default_staging_security_groups:
          - all_open
        disable_custom_buildpacks: "(( enable_custom_buildpacks.value ? 'false' : 'true' ))"
        external_host: api
        install_buildpacks:
          - name: staticfile_buildpack
            package: staticfile-buildpack
          - name: java_buildpack_offline
            package: buildpack_java_offline
          - name: ruby_buildpack
            package: ruby-buildpack
          - name: nodejs_buildpack
            package: nodejs-buildpack
          - name: go_buildpack
            package: go-buildpack
          - name: python_buildpack
            package: python-buildpack
          - name: php_buildpack
            package: php-buildpack
          - name: binary_buildpack
            package: binary-buildpack
        internal_api_user: (( internal_api_user_credentials.identity ))
        internal_api_password: (( internal_api_user_credentials.password ))
        logging_level: debug
        maximum_health_check_timeout: 600
        quota_definitions:
          default:
            memory_limit: (( default_quota_memory_limit_mb.value ))
            total_services: (( default_quota_max_number_services.value ))
            non_basic_services_allowed: true
            total_routes: 1000
            trial_db_allowed: true
          runaway:
            memory_limit: 102400
            total_services: -1
            total_routes: 1000
            non_basic_services_allowed: true
        security_group_definitions:
          - name: all_open
            rules:
              - protocol: all
                destination: 0.0.0.0-255.255.255.255
        stacks:
          - name: cflinuxfs2
            description: Cloud Foundry Linux-based filesystem
          - name: windows2012R2
            description: "Microsoft Windows / .Net 64 bit"
        staging_upload_user: (( staging_upload_credentials.identity ))
        staging_upload_password: (( staging_upload_credentials.password ))
        tasks_disabled: true
        uaa_resource_id: cloud_controller,cloud_controller_service_permissions
        min_cli_version: 6.7.0
        min_recommended_cli_version: 6.11.2
        security_event_logging:
          enabled: (( security_event_logging_enabled.value ))

      ccdb: (( .properties.system_database.selected_option.parsed_manifest(ccdb) ))

      consul:
        encrypt_keys:
        - (( .properties.consul_encrypt_key.value ))
        ca_cert: (( $ops_manager.ca_certificate ))
        agent_cert: (( .properties.consul_agent_cert.cert_pem ))
        agent_key: (( .properties.consul_agent_cert.private_key_pem ))
        server_cert: (( .properties.consul_server_cert.cert_pem ))
        server_key: (( .properties.consul_server_cert.private_key_pem ))
        agent:
          domain: cf.internal
          services:
            cloud_controller_ng: {}
          servers:
            lan: (( .consul_server.ips ))

      nfs_server:
        address: (( .nfs_server.first_ip ))

      uaa:
        url: "https://uaa.(( .cloud_controller.system_domain.value ))"
        jwt:
          verification_key: (( .uaa.jwt_signing_key_credentials.public_key_pem ))
        clients:
          cc-service-dashboards:
            scope: cloud_controller.write,openid,cloud_controller.read,cloud_controller_service_permissions.read
            secret: (( .uaa.cc_service_dashboards_credentials.password ))
          cloud_controller_username_lookup:
            secret: (( .uaa.cloud_controller_username_lookup_credentials.password ))
          cc_routing:
            secret: (( .uaa.cc_routing_credentials.password ))
      login:
        url: "https://login.(( .cloud_controller.system_domain.value ))"

      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

      logger_endpoint:
        port: (( .properties.logger_endpoint_port.value ))
      doppler:
        port: (( .properties.logger_endpoint_port.value ))
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      loggregator:
        etcd:
          machines: (( .etcd_server.ips ))
      router:
        route_services_secret: (( .properties.route_services.selected_option.parsed_manifest(secret) ))

  - name: ha_proxy
    label: HAProxy
    resource_label: HAProxy
    description: HAProxy is the default load balancer for SSL termination. Alternatively, you can use your own load balancer and forward traffic to the Pivotal CF Elastic Runtime router IP. Self signed certificates will function properly.
    templates:
      - name: haproxy
        release: cf
      - name: metron_agent
        release: cf
      - name: consul_agent
        release: cf
      - name: statsd-injector
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: true
      default: 1
      constraints:
        min: 0
      zero_if:
        property_reference: .properties.networking_point_of_entry
        property_values:
        - external_ssl
        - external_non_ssl

    property_blueprints:
      - name: static_ips
        type: ip_ranges
        configurable: true
        optional: true

      - name: skip_cert_verify
        type: boolean
        configurable: true

    manifest: |
      request_timeout_in_seconds: (( .router.request_timeout_in_seconds.value ))
      ha_proxy:
        disable_http: (( .properties.networking_point_of_entry.haproxy.disable_http.value ))
        ssl_ciphers: (( .properties.networking_point_of_entry.haproxy.ssl_ciphers.value ))
        ssl_pem: (( .properties.networking_point_of_entry.haproxy.ssl_rsa_certificate.cert_and_private_key_pems ))
      router:
        servers:
          z1: (( .router.ips ))
          z2: []
      cc:
        allow_app_ssh_access: (( .cloud_controller.allow_app_ssh_access.value ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      loggregator:
        etcd:
          machines: (( .etcd_server.ips ))
      consul:
        encrypt_keys:
        - (( .properties.consul_encrypt_key.value ))
        ca_cert: (( $ops_manager.ca_certificate ))
        agent_cert: (( .properties.consul_agent_cert.cert_pem ))
        agent_key: (( .properties.consul_agent_cert.private_key_pem ))
        server_cert: (( .properties.consul_server_cert.cert_pem ))
        server_key: (( .properties.consul_server_cert.private_key_pem ))
        agent:
          domain: cf.internal
          servers:
            lan: (( .consul_server.ips ))

  - name: clock_global
    label: Clock Global
    resource_label: Clock Global
    description: Schedules asynchronous tasks for cloud controller
    templates:
      - name: cloud_controller_clock
        release: cf
      - name: metron_agent
        release: cf
      - name: statsd-injector
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: false
      default: 1
      constraints:
        min: 1

    property_blueprints:

    manifest: |
      domain: (( .cloud_controller.system_domain.value ))
      system_domain: (( .cloud_controller.system_domain.value ))
      system_domain_organization: system
      app_domains: ["(( .cloud_controller.apps_domain.value ))"]

      cc:
        allowed_cors_domains:
        - https://apm.(( .cloud_controller.system_domain.value ))
        allow_app_ssh_access: (( .cloud_controller.allow_app_ssh_access.value ))
        buildpacks: (( .properties.system_blobstore.selected_option.parsed_manifest(ccbuildpack) ))
        droplets: (( .properties.system_blobstore.selected_option.parsed_manifest(ccdroplet) ))
        packages: (( .properties.system_blobstore.selected_option.parsed_manifest(ccpackage) ))
        service_name: cloud-controller-ng
        resource_pool: (( .properties.system_blobstore.selected_option.parsed_manifest(ccresource) ))
        logging_level: debug
        maximum_health_check_timeout: 600
        staging_upload_user: (( .cloud_controller.staging_upload_credentials.identity ))
        staging_upload_password: (( .cloud_controller.staging_upload_credentials.password ))
        bulk_api_password: (( .cloud_controller.bulk_api_credentials.password ))
        db_encryption_key: (( .cloud_controller.encrypt_key.value || .cloud_controller.db_encryption_credentials.password ))
        internal_api_user: (( .cloud_controller.internal_api_user_credentials.identity ))
        internal_api_password: (( .cloud_controller.internal_api_user_credentials.password ))
        quota_definitions:
          default:
            memory_limit: (( .cloud_controller.default_quota_memory_limit_mb.value ))
            total_services: (( .cloud_controller.default_quota_max_number_services.value ))
            non_basic_services_allowed: true
            total_routes: 1000
            trial_db_allowed: true
          runaway:
            memory_limit: 102400
            total_services: -1
            total_routes: 1000
            non_basic_services_allowed: true

        security_group_definitions:
          - name: all_open
            rules:
              - protocol: all
                destination: 0.0.0.0-255.255.255.255
        default_running_security_groups:
          - all_open
        default_staging_security_groups:
          - all_open

      ccdb: (( .properties.system_database.selected_option.parsed_manifest(ccdb) ))

      consul:
        encrypt_keys:
        - (( .properties.consul_encrypt_key.value ))
        ca_cert: (( $ops_manager.ca_certificate ))
        agent_cert: (( .properties.consul_agent_cert.cert_pem ))
        agent_key: (( .properties.consul_agent_cert.private_key_pem ))
        server_cert: (( .properties.consul_server_cert.cert_pem ))
        server_key: (( .properties.consul_server_cert.private_key_pem ))

      uaa:
        url: "https://uaa.(( .cloud_controller.system_domain.value ))"
        jwt:
          verification_key: (( .uaa.jwt_signing_key_credentials.public_key_pem ))
        clients:
          cc-service-dashboards:
            secret: (( .uaa.cc_service_dashboards_credentials.password ))
      login:
        url: "https://login.(( .cloud_controller.system_domain.value ))"

      logger_endpoint:
        port: (( .properties.logger_endpoint_port.value ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      loggregator:
        etcd:
          machines: (( .etcd_server.ips ))

  - name: cloud_controller_worker
    label: Cloud Controller Worker
    resource_label: Cloud Controller Worker
    description: Worker for cloud controller asynchronous tasks
    templates:
      - name: cloud_controller_worker
        release: cf
      - name: metron_agent
        release: cf
      - name: consul_agent
        release: cf
      - name: nfs_mounter # NOTE: NFS Mounter must be last until #94152506 is resolved
        release: cf
      - name: statsd-injector
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: true
      default: 1
      constraints:
        min: 1

    property_blueprints:

    manifest: |
      domain: (( .cloud_controller.system_domain.value ))
      system_domain: (( .cloud_controller.system_domain.value ))
      system_domain_organization: system
      app_domains: ["(( .cloud_controller.apps_domain.value ))"]

      cc:
        allowed_cors_domains:
        - https://apm.(( .cloud_controller.system_domain.value ))
        allow_app_ssh_access: (( .cloud_controller.allow_app_ssh_access.value ))
        buildpacks: (( .properties.system_blobstore.selected_option.parsed_manifest(ccbuildpack) ))
        droplets: (( .properties.system_blobstore.selected_option.parsed_manifest(ccdroplet) ))
        packages: (( .properties.system_blobstore.selected_option.parsed_manifest(ccpackage) ))
        resource_pool: (( .properties.system_blobstore.selected_option.parsed_manifest(ccresource) ))
        service_name: cloud-controller-ng
        logging_level: debug
        maximum_health_check_timeout: 600
        staging_upload_user: (( .cloud_controller.staging_upload_credentials.identity ))
        staging_upload_password: (( .cloud_controller.staging_upload_credentials.password ))
        bulk_api_password: (( .cloud_controller.bulk_api_credentials.password ))
        db_encryption_key: (( .cloud_controller.encrypt_key.value || .cloud_controller.db_encryption_credentials.password ))
        internal_api_user: (( .cloud_controller.internal_api_user_credentials.identity ))
        internal_api_password: (( .cloud_controller.internal_api_user_credentials.password ))
        quota_definitions:
          default:
            memory_limit: (( .cloud_controller.default_quota_memory_limit_mb.value ))
            total_services: (( .cloud_controller.default_quota_max_number_services.value ))
            non_basic_services_allowed: true
            total_routes: 1000
            trial_db_allowed: true
          runaway:
            memory_limit: 102400
            total_services: -1
            total_routes: 1000
            non_basic_services_allowed: true

        security_group_definitions:
          - name: all_open
            rules:
              - protocol: all
                destination: 0.0.0.0-255.255.255.255
        default_running_security_groups:
          - all_open
        default_staging_security_groups:
          - all_open

      ccdb: (( .properties.system_database.selected_option.parsed_manifest(ccdb) ))

      consul:
        encrypt_keys:
        - (( .properties.consul_encrypt_key.value ))
        ca_cert: (( $ops_manager.ca_certificate ))
        agent_cert: (( .properties.consul_agent_cert.cert_pem ))
        agent_key: (( .properties.consul_agent_cert.private_key_pem ))
        server_cert: (( .properties.consul_server_cert.cert_pem ))
        server_key: (( .properties.consul_server_cert.private_key_pem ))
        agent:
          domain: cf.internal
          servers:
            lan: (( .consul_server.ips ))

      nfs_server:
        address: (( .nfs_server.first_ip ))

      uaa:
        url: "https://uaa.(( .cloud_controller.system_domain.value ))"
        jwt:
          verification_key: (( .uaa.jwt_signing_key_credentials.public_key_pem ))
        clients:
          cc-service-dashboards:
            secret: (( .uaa.cc_service_dashboards_credentials.password ))
      login:
        url: "https://login.(( .cloud_controller.system_domain.value ))"

      logger_endpoint:
        port: (( .properties.logger_endpoint_port.value ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      loggregator:
        etcd:
          machines: (( .etcd_server.ips ))

  - name: collector
    label: Collector
    resource_label: Collector
    description: Collects system information in order to provide health and status metrics
    templates:
      - name: collector
        release: cf
      - name: metron_agent
        release: cf
      - name: statsd-injector
        release: cf

    requires_product_versions:
      - name: p-metrics
        version: ~> 1.2

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: true
      default: 0

    property_blueprints:

    manifest: |
      collector:
        use_tsdb: true
        opentsdb:
          address: (( ..p-metrics.maximus.first_ip ))
          port: 13321

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      loggregator:
        etcd:
          machines: (( .etcd_server.ips ))

  - name: uaa
    label: UAA
    resource_label: UAA
    description: Pivotal CF Elastic Runtime's Authentication and Authorization server
    templates:
      - name: uaa
        release: cf
      - name: metron_agent
        release: cf
      - name: consul_agent
        release: cf
      - name: route_registrar
        release: cf
      - name: statsd-injector
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      default: 1
      configurable: true
      constraints:
        min: 1

    property_blueprints:
      - name: admin_credentials
        type: simple_credentials
        default:
          identity: admin

      - name: push_apps_manager_credentials
        type: simple_credentials
        default:
          identity: push_apps_manager

      - name: run_smoke_tests_credentials
        type: simple_credentials
        default:
          identity: smoke_tests

      - name: system_services_credentials
        type: simple_credentials
        default:
          identity: system_services

      - name: system_verification_credentials
        type: simple_credentials
        default:
          identity: system_verification

      - name: system_passwords_client_credentials
        type: simple_credentials
        default:
          identity: system_passwords

      - name: login_client_credentials
        type: simple_credentials
        default:
          identity: login

      - name: identity_client_credentials
        type: simple_credentials
        label: Identity client credentials
        default:
          identity: identity

      - name: gorouter_client_credentials
        type: simple_credentials
        default:
          identity: gorouter

      - name: doppler_client_credentials
        type: simple_credentials
        default:
          identity: doppler

      - name: opentsdb_nozzle_credentials
        type: simple_credentials
        default:
          identity: opentsdb-firehose-nozzle

      - name: apps_manager_client_credentials
        type: simple_credentials
        default:
          identity: portal

      - name: autoscale_client_credentials
        type: simple_credentials
        default:
          identity: autoscaling_service

      - name: cc_service_dashboards_credentials
        type: simple_credentials
        default:
          identity: cc-service-dashboards

      - name: cc_client_credentials
        type: simple_credentials
        default:
          identity: cloud_controller

      - name: admin_client_credentials
        type: simple_credentials
        default:
          identity: admin

      - name: jwt_signing_key_credentials
        type: rsa_pkey_credentials

      - name: notifications_client_credentials
        type: simple_credentials
        default:
          identity: notifications

      - name: notifications_template_client_credentials
        type: simple_credentials
        default:
          identity: notifications_template

      - name: ssh_proxy_client_credentials
        type: simple_credentials
        default:
          identity: ssh_proxy

      - name: notifications_ui_client_credentials
        type: simple_credentials
        default:
          identity: notifications_ui_client

      - name: cloud_controller_username_lookup_credentials
        type: simple_credentials
        default:
          identity: cloud_controller_username_lookup

      - name: cc_routing_credentials
        type: simple_credentials
        default:
          identity: cc_routing

      - name: apps_metrics_credentials
        type: simple_credentials
        default:
          identity: apps_metrics

      - name: apps_metrics_processing_credentials
        type: simple_credentials
        default:
          identity: apps_metrics_processing

      - name: service_provider_key_credentials
        type: rsa_cert_credentials

      - name: apps_manager_access_token_lifetime
        type: integer
        configurable: true
        default: 1209600

      - name: apps_manager_refresh_token_lifetime
        type: integer
        configurable: true
        default: 1209600

      - name: cf_cli_access_token_lifetime
        type: integer
        configurable: true
        default: 7200

      - name: cf_cli_refresh_token_lifetime
        type: integer
        configurable: true
        default: 1209600

    manifest: |
      consul:
        encrypt_keys:
        - (( .properties.consul_encrypt_key.value ))
        ca_cert: (( $ops_manager.ca_certificate ))
        agent_cert: (( .properties.consul_agent_cert.cert_pem ))
        agent_key: (( .properties.consul_agent_cert.private_key_pem ))
        server_cert: (( .properties.consul_server_cert.cert_pem ))
        server_key: (( .properties.consul_server_cert.private_key_pem ))
        agent:
          domain: cf.internal
          servers:
            lan: (( .consul_server.ips ))
          services:
            uaa: {}
      login:
        branding:
          company_name: (( .push-apps-manager.company_name.value || "Pivotal" ))
          product_logo: (( .push-apps-manager.logo.value || "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" ))
          square_logo: (( .push-apps-manager.square_logo.value || "iVBORw0KGgoAAAANSUhEUgAAAGwAAABsCAYAAACPZlfNAAAAAXNSR0IArs4c6QAABYtJREFUeAHtnVtsFFUYx7/d3ruWotUKVIkNaCw02YgJGBRTMd4CokUejD4QH4gxQcIDeHnBmPjkhSghUYLGe3ywPtAHNCo0QgkWwi2tXG2V1kIpLXTbLt1tS9dzlmzSJssZhv32zDk7/2km2znn7Pd9+/vt2Z2dmW0D9Obat4gCiwiLBQQSLflSViAQeN6Can1fYiJBFPQ9BcsAQBiEWUbAsnIxwyDMMgKWlYsZBmGWEbCsXMwwCLOMgGXlYoZBmGUELCsXMwzCLCNgWbmYYRBmGQHLysUMgzDLCFhWLmYYhFlGwLJyMcMgzDIClpWLGQZhlhGwrFzMMAizjIBl5WKGQZhlBCwrV1xbb96y59V1VFJQmLawQNrWa43x8XEaHo1fW+Oj1H8lSqf6eulEbw+dvNhLvcNDinvb0WWksAdm3UWhwiJ2gt2RAWo80UY7jrdSU8cZGrt6lT1HtgMaKSxbD7qqfDq99tAjyTUSG6FP9v1BH+3dTUPxeLZSssf17U5HeXEJbXr8aerY+A6tf7iOxFeu2OFmI6BvhaVgVoRCtHl5PTW8/AoV5xekmo299b2wlJn6+WFqWrOWKkpDqSYjbyFskpZFs++hL1e9NKnFvF+t3OmQOwzdkcgUmnnBABXm5Ys1j8qKisVadFPvS8tramn1goX09eEDU+KbsmGlsMbjbbT6x++UDOVORGXoFppXOYMerLqbVsyrpcWzqykYdH5R+fjZlcnd/8sjV5Q5vOh0rt6LqhhyJsQ3uC+ID8ry89aHYtf90W1bKLzlffr19EnH6HIP8oXasOM4LwbkrLB0MP+6cJ6e+eoz+vTP5nTdU9peDC+Ysm3Khq+ESehy5r3e2ECHu7uUDuqq59Id4iXVtMV3wqSACSHt3V2/KF3I97qayjuVY7zo9KUwCfq3M6coNjamZD6zrFzZ70Wnb4XFxseoK3JZyXzWtGnKfi86fStMwu6LRpXMZ5RBmBKQ7k75XqZa8gLmPZ/Nq0hFkLnvttJSZUT5Oc60xbfC5CGs6lsrlD56hgaV/V50+lbYkuo5VFygPp3SMwxhXjwp0+bcsGRp2vZU48TEBB09153aNObWlzNMHo1/6r4apYTmsx10MTqsHONFp5VH6zMBtWbhYtq6YpVjiJ/ajjmO8WKAL4QFxamWZffPT1678dicex05D4jTKj8cO+Q4zosBOSXs7bonktci5ovjgPIUye3ieo3wzKrk+TC5faPLGz83On6ovtFY3ONySth7Ty67qbPMk6Hu+edv+vzg/slNRv3uy52O6xk40HWW6r/94nrdRrTn1AzLhOju9tP03DfbKTo6mkmYrN/X98L6xQHgTb/vpG0t+5LnybJOPMMEvhXWOXCJvj9yiD7Yu4sGRkYyxKjv7r4RJi+Na+05Rwf/66SG1qO0v/NffZQZM+WUsI07d1BC/MTE144GYzHxJYcYDYq1vb/f8WQlI9OshsopYZubm7IKy4Tg2K03wYKLGiDMBSwThkKYCRZc1ABhLmCZMBTCTLDgogYIcwHLhKEQZoIFFzVAmAtYJgyFMBMsuKgBwlzAMmEohJlgwUUNEOYClglDIcwECy5qgDAXsEwYCmEmWHBRA4S5gGXCUAgzwYKLGow84yyvuyhR/GW19kt9Lh5ibg01UtjS7VtzizLjo8FLIiNMHaEgTAdlxhwQxghTRygI00GZMQeEMcLUEQrCdFBmzAFhjDB1hIIwHZQZc0AYI0wdoSBMB2XGHBDGCFNHKAjTQZkxB4QxwtQRCsJ0UGbMAWGMMHWEgjAdlBlzQBgjTB2hIEwHZcYcEMYIU0coCNNBmTEHhDHC1BEKwnRQZswBYYwwdYSCMB2UGXNAGCNMHaEgTAdlxhziUu1Ei8M/+WFMh1CZEUi0/A+j7hNSB5Wo2wAAAABJRU5ErkJggg==" ))
          footer_legal_text: (( .push-apps-manager.footer_text.value ))
        self_service_links_enabled: (( .properties.uaa.selected_option.parsed_manifest(self_service_links_enabled) ))
        protocol: https

        links:
          home: "https://apps.(( .cloud_controller.system_domain.value ))"
          passwd: "https://login.(( .cloud_controller.system_domain.value ))/forgot_password"
          signup: "https://login.(( .cloud_controller.system_domain.value ))/create_account"
        uaa_base: "https://uaa.(( .cloud_controller.system_domain.value ))"
        notifications:
          url: "https://notifications.(( .cloud_controller.system_domain.value ))"
        saml:
          entityid: "http://login.(( .cloud_controller.system_domain.value ))"
          serviceProviderKey: (( service_provider_key_credentials.private_key_pem ))
          serviceProviderCertificate: (( service_provider_key_credentials.cert_pem ))
          providers: (( .properties.uaa.selected_option.parsed_manifest(saml_provider) ))
          signRequest: (( .properties.uaa.saml.sign_auth_requests.value ))
          wantAssertionSigned: (( .properties.uaa.saml.require_signed_assertions.value ))
        logout:
          redirect:
            parameter:
              disable: false
              whitelist:
              - https://console.(( .cloud_controller.system_domain.value ))/
              - https://apps.(( .cloud_controller.system_domain.value ))/
            url: "/login"
      uaa:
        authentication:
          policy:
            lockoutAfterFailures: (( .properties.uaa.internal.password_max_retry.value ))
        password:
          policy:
            minLength: (( .properties.uaa.internal.password_min_length.value ))
            requireUpperCaseCharacter: (( .properties.uaa.internal.password_min_uppercase.value ))
            requireLowerCaseCharacter: (( .properties.uaa.internal.password_min_lowercase.value ))
            requireDigit: (( .properties.uaa.internal.password_min_numeric.value ))
            requireSpecialCharacter: (( .properties.uaa.internal.password_min_special.value ))
            expirePasswordInMonths: (( .properties.uaa.internal.password_expires_after_months.value ))
        require_https: true
        ssl:
          port: -1
        ldap:
          profile_type: search-and-bind
          url: (( .properties.uaa.ldap.url.value ))
          userDN: (( .properties.uaa.ldap.credentials.identity ))
          userPassword: (( .properties.uaa.ldap.credentials.password ))
          searchBase: (( .properties.uaa.ldap.search_base.value ))
          searchFilter: (( .properties.uaa.ldap.search_filter.value ))
          sslCertificate: (( .properties.uaa.ldap.server_ssl_cert.value ))
          sslCertificateAlias: (( .properties.uaa.ldap.server_ssl_cert_alias.value ))
          mailAttributeName: (( .properties.uaa.ldap.mail_attribute_name.value ))
          enabled: (( .properties.uaa.ldap.url.value_present? ))
          groups:
            profile_type: "(( .properties.uaa.ldap.group_search_base.value_present? ? 'groups-map-to-scopes' : 'no-groups' ))"
            searchBase: (( .properties.uaa.ldap.group_search_base.value ))
            groupSearchFilter: (( .properties.uaa.ldap.group_search_filter.value ))
        login:
          addnew: false
        catalina_opts: "-Xmx768m -XX:MaxPermSize=256m"
        url: "https://uaa.(( .cloud_controller.system_domain.value ))"
        jwt:
          signing_key: (( jwt_signing_key_credentials.private_key_pem ))
          verification_key: (( jwt_signing_key_credentials.public_key_pem ))
        cc:
          client_secret: (( cc_client_credentials.password ))
        admin:
          client_secret: (( admin_client_credentials.password ))
        proxy:
          servers: (( .router.ips ))
        clients:
          opentsdb-firehose-nozzle:
            access-token-validity: 1209600
            authorized-grant-types: authorization_code,client_credentials,refresh_token
            override: true
            secret: (( opentsdb_nozzle_credentials.password ))
            scope: openid,oauth.approvals,doppler.firehose
            authorities: oauth.login,doppler.firehose
          identity:
            id: (( identity_client_credentials.identity ))
            secret: (( identity_client_credentials.password ))
            scope: "cloud_controller.admin,cloud_controller.read,cloud_controller.write,openid,zones.*.*,zones.*.*.*,zones.read,zones.write,scim.read"
            resource_ids: none
            override: true
            authorized-grant-types: "authorization_code,client_credentials,refresh_token"
            autoapprove: true
            authorities: "scim.zones,zones.read,uaa.resource,zones.write,cloud_controller.admin"
            redirect-uri: "https://p-identity.(( .cloud_controller.system_domain.value ))/dashboard/,https://p-identity.(( .cloud_controller.system_domain.value ))/dashboard/**"
          login:
            id: (( login_client_credentials.identity ))
            secret: (( login_client_credentials.password ))
            override: true
            autoapprove: true
            authorities: "oauth.login,scim.write,clients.read,notifications.write,critical_notifications.write,emails.write,scim.userids,password.write"
            authorized-grant-types: "authorization_code,client_credentials,refresh_token"
            scope: "openid,oauth.approvals"
          (( apps_manager_client_credentials.identity )):
            id: (( apps_manager_client_credentials.identity ))
            secret: (( apps_manager_client_credentials.password ))
            override: true
            autoapprove: true
            authorities: "scim.write,scim.read,cloud_controller.read,cloud_controller.write,password.write,uaa.admin,uaa.resource,cloud_controller.admin,emails.write,notifications.write"
            authorized-grant-types: "authorization_code,client_credentials,password,implicit"
            scope: "openid,cloud_controller.read,cloud_controller.write,password.write,console.admin,console.support,cloud_controller.admin"
            access-token-validity: (( apps_manager_access_token_lifetime.value ))
            refresh-token-validity: (( apps_manager_refresh_token_lifetime.value ))
            name: Pivotal Apps Manager
            app-launch-url: "https://apps.(( .cloud_controller.system_domain.value ))"
            show-on-homepage: true
            app-icon: iVBORw0KGgoAAAANSUhEUgAAAGwAAABsCAYAAACPZlfNAAAAAXNSR0IArs4c6QAABYtJREFUeAHtnVtsFFUYx7/d3ruWotUKVIkNaCw02YgJGBRTMd4CokUejD4QH4gxQcIDeHnBmPjkhSghUYLGe3ywPtAHNCo0QgkWwi2tXG2V1kIpLXTbLt1tS9dzlmzSJssZhv32zDk7/2km2znn7Pd9+/vt2Z2dmW0D9Obat4gCiwiLBQQSLflSViAQeN6Can1fYiJBFPQ9BcsAQBiEWUbAsnIxwyDMMgKWlYsZBmGWEbCsXMwwCLOMgGXlYoZBmGUELCsXMwzCLCNgWbmYYRBmGQHLysUMgzDLCFhWLmYYhFlGwLJyMcMgzDIClpWLGQZhlhGwrFzMMAizjIBl5WKGQZhlBCwrV1xbb96y59V1VFJQmLawQNrWa43x8XEaHo1fW+Oj1H8lSqf6eulEbw+dvNhLvcNDinvb0WWksAdm3UWhwiJ2gt2RAWo80UY7jrdSU8cZGrt6lT1HtgMaKSxbD7qqfDq99tAjyTUSG6FP9v1BH+3dTUPxeLZSssf17U5HeXEJbXr8aerY+A6tf7iOxFeu2OFmI6BvhaVgVoRCtHl5PTW8/AoV5xekmo299b2wlJn6+WFqWrOWKkpDqSYjbyFskpZFs++hL1e9NKnFvF+t3OmQOwzdkcgUmnnBABXm5Ys1j8qKisVadFPvS8tramn1goX09eEDU+KbsmGlsMbjbbT6x++UDOVORGXoFppXOYMerLqbVsyrpcWzqykYdH5R+fjZlcnd/8sjV5Q5vOh0rt6LqhhyJsQ3uC+ID8ry89aHYtf90W1bKLzlffr19EnH6HIP8oXasOM4LwbkrLB0MP+6cJ6e+eoz+vTP5nTdU9peDC+Ysm3Khq+ESehy5r3e2ECHu7uUDuqq59Id4iXVtMV3wqSACSHt3V2/KF3I97qayjuVY7zo9KUwCfq3M6coNjamZD6zrFzZ70Wnb4XFxseoK3JZyXzWtGnKfi86fStMwu6LRpXMZ5RBmBKQ7k75XqZa8gLmPZ/Nq0hFkLnvttJSZUT5Oc60xbfC5CGs6lsrlD56hgaV/V50+lbYkuo5VFygPp3SMwxhXjwp0+bcsGRp2vZU48TEBB09153aNObWlzNMHo1/6r4apYTmsx10MTqsHONFp5VH6zMBtWbhYtq6YpVjiJ/ajjmO8WKAL4QFxamWZffPT1678dicex05D4jTKj8cO+Q4zosBOSXs7bonktci5ovjgPIUye3ieo3wzKrk+TC5faPLGz83On6ovtFY3ONySth7Ty67qbPMk6Hu+edv+vzg/slNRv3uy52O6xk40HWW6r/94nrdRrTn1AzLhOju9tP03DfbKTo6mkmYrN/X98L6xQHgTb/vpG0t+5LnybJOPMMEvhXWOXCJvj9yiD7Yu4sGRkYyxKjv7r4RJi+Na+05Rwf/66SG1qO0v/NffZQZM+WUsI07d1BC/MTE144GYzHxJYcYDYq1vb/f8WQlI9OshsopYZubm7IKy4Tg2K03wYKLGiDMBSwThkKYCRZc1ABhLmCZMBTCTLDgogYIcwHLhKEQZoIFFzVAmAtYJgyFMBMsuKgBwlzAMmEohJlgwUUNEOYClglDIcwECy5qgDAXsEwYCmEmWHBRA4S5gGXCUAgzwYKLGow84yyvuyhR/GW19kt9Lh5ibg01UtjS7VtzizLjo8FLIiNMHaEgTAdlxhwQxghTRygI00GZMQeEMcLUEQrCdFBmzAFhjDB1hIIwHZQZc0AYI0wdoSBMB2XGHBDGCFNHKAjTQZkxB4QxwtQRCsJ0UGbMAWGMMHWEgjAdlBlzQBgjTB2hIEwHZcYcEMYIU0coCNNBmTEHhDHC1BEKwnRQZswBYYwwdYSCMB2UGXNAGCNMHaEgTAdlxhziUu1Ei8M/+WFMh1CZEUi0/A+j7hNSB5Wo2wAAAABJRU5ErkJggg==
          apps_manager_js:
            override: true
            autoapprove:
              - cloud_controller.read
              - cloud_controller.write
              - cloud_controller.admin
            scope: cloud_controller.read,cloud_controller.write,cloud_controller.admin
            authorized-grant-types: implicit
            access-token-validity: 28800
          cf:
            id: cf
            override: true
            authorities: "uaa.none"
            authorized-grant-types: "password,refresh_token"
            scope: "cloud_controller.read,cloud_controller.write,openid,password.write,cloud_controller.admin,scim.read,scim.write,doppler.firehose,uaa.user"
            access-token-validity: (( cf_cli_access_token_lifetime.value ))
            refresh-token-validity: (( cf_cli_refresh_token_lifetime.value ))
          (( autoscale_client_credentials.identity )):
            id: (( autoscale_client_credentials.identity ))
            secret: (( autoscale_client_credentials.password ))
            override: true
            autoapprove: true
            authorities: "cloud_controller.write,cloud_controller.read,cloud_controller.admin,notifications.write,critical_notifications.write,emails.write"
            authorized-grant-types: "client_credentials,authorization_code,refresh_token"
            scope: "openid,cloud_controller.permissions,cloud_controller.read,cloud_controller.write"
            access-token-validity: 3600
          system_passwords:
            id: (( system_passwords_client_credentials.identity ))
            secret: (( system_passwords_client_credentials.password ))
            override: true
            autoapprove: true
            authorities: "uaa.admin,scim.read,scim.write,password.write"
            authorized-grant-types: "client_credentials"
          cc-service-dashboards:
            id: (( cc_service_dashboards_credentials.identity ))
            secret: (( cc_service_dashboards_credentials.password ))
            override: true
            authorities: clients.read,clients.write,clients.admin
            authorized-grant-types: client_credentials
            scope: cloud_controller.write,openid,cloud_controller.read,cloud_controller_service_permissions.read
          doppler:
            id: (( doppler_client_credentials.identity ))
            secret: (( doppler_client_credentials.password ))
            authorities: uaa.resource
          gorouter:
            id: (( gorouter_client_credentials.identity ))
            secret: (( gorouter_client_credentials.password ))
            authorities: clients.read,clients.write,clients.admin,routing.routes.write,routing.routes.read
            authorized-grant-types: client_credentials,refresh_token
            scope: openid,cloud_controller_service_permissions.read
          notifications:
            id: notifications
            secret: (( .uaa.notifications_client_credentials.password ))
            authorities: cloud_controller.admin,scim.read,notifications.write,critical_notifications.write,emails.write
            authorized-grant-types: client_credentials
          notifications_template:
            id: (( .uaa.notifications_template_client_credentials.identity ))
            secret: (( .uaa.notifications_template_client_credentials.password ))
            scope: openid,clients.read,clients.write,clients.secret
            authorities: clients.read,clients.write,clients.secret,notification_templates.write,notification_templates.read,notifications.manage
            authorized-grant-types: client_credentials
          notifications_ui_client:
            id: notifications_ui_client
            secret: (( .uaa.notifications_ui_client_credentials.password ))
            scope: notification_preferences.read,notification_preferences.write,openid
            authorized-grant-types: authorization_code,client_credentials,refresh_token
            authorities: notification_preferences.admin
            autoapprove: true
            override: true
            redirect-uri: "https://notifications-ui.(( .cloud_controller.system_domain.value ))/sessions/create"
          cloud_controller_username_lookup:
            id: (( .uaa.cloud_controller_username_lookup_credentials.identity ))
            secret: (( .uaa.cloud_controller_username_lookup_credentials.password ))
            authorized-grant-types: client_credentials
            authorities: scim.userids
          (( cc_routing_credentials.identity )):
            authorities: routing.router_groups.read
            authorized-grant-types: client_credentials
            secret: (( cc_routing_credentials.password ))
          ssh-proxy:
            authorized-grant-types: authorization_code
            autoapprove: true
            override: true
            redirect-uri: /login
            scope: openid,cloud_controller.read,cloud_controller.write
            secret: (( .uaa.ssh_proxy_client_credentials.password ))
          apps_metrics:
            id: (( apps_metrics_credentials.identity ))
            secret: (( apps_metrics_credentials.password ))
            override: true
            authorized-grant-types: authorization_code,refresh_token
            redirect-uri: "https://apm.(( .cloud_controller.system_domain.value )),https://apm.(( .cloud_controller.system_domain.value ))/,https://apm.(( .cloud_controller.system_domain.value ))/*,https://metrics.(( .cloud_controller.system_domain.value )),https://metrics.(( .cloud_controller.system_domain.value ))/,https://metrics.(( .cloud_controller.system_domain.value ))/*"
            scope: cloud_controller.admin,cloud_controller.read,metrics.read
            access-token-validity: 900
            refresh-token-validity: 2628000
          apps_metrics_processing:
            id: (( apps_metrics_processing_credentials.identity ))
            secret: (( apps_metrics_processing_credentials.password ))
            override: true
            authorized-grant-types: authorization_code,client_credentials,refresh_token
            authorities: oauth.login,doppler.firehose,cloud_controller.admin
            scope: openid,oauth.approvals,doppler.firehose,cloud_controller.admin
            access-token-validity: 1209600
        scim:
          user:
            override: true
          userids_enabled: true
          users:
          - (( admin_credentials.identity ))|(( admin_credentials.password ))|scim.write,scim.read,openid,cloud_controller.admin,dashboard.user,console.admin,console.support,doppler.firehose,notification_preferences.read,notification_preferences.write,notifications.manage,notification_templates.read,notification_templates.write,emails.write,notifications.write,zones.read,zones.write
          - (( push_apps_manager_credentials.identity ))|(( push_apps_manager_credentials.password ))|cloud_controller.admin
          - (( run_smoke_tests_credentials.identity ))|(( run_smoke_tests_credentials.password ))|cloud_controller.admin
          - (( system_services_credentials.identity ))|(( system_services_credentials.password ))|cloud_controller.admin
          - (( system_verification_credentials.identity ))|(( system_verification_credentials.password ))|scim.write,scim.read,openid,cloud_controller.admin,dashboard.user,console.admin,console.support

      ccdb: (( .properties.system_database.selected_option.parsed_manifest(ccdb) ))

      domain: (( .cloud_controller.system_domain.value ))

      uaadb: (( .properties.system_database.selected_option.parsed_manifest(uaadb) ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      loggregator:
        etcd:
          machines: (( .etcd_server.ips ))
      route_registrar:
        routes:
        - name: uaa
          port: 8080
          registration_interval: 4s
          uris:
          - "uaa.(( .cloud_controller.system_domain.value ))"
          - "*.uaa.(( .cloud_controller.system_domain.value ))"
          - "login.(( .cloud_controller.system_domain.value ))"
          - "*.login.(( .cloud_controller.system_domain.value ))"
          health_check:
            name: uaa-healthcheck
            script_path: /var/vcap/jobs/uaa/bin/health_check

  - name: diego_brain
    label: Diego Brain
    resource_label: Diego Brain
    description: Diego Brain
    templates:
      - name: auctioneer
        release: diego
      - name: cc_uploader
        release: diego
      - name: converger
        release: diego
      - name: file_server
        release: diego
      - name: nsync
        release: diego
      - name: route_emitter
        release: diego
      - name: ssh_proxy
        release: diego
      - name: stager
        release: diego
      - name: tps
        release: diego
      - name: consul_agent
        release: cf
      - name: metron_agent
        release: cf
      - name: statsd-injector
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 2_048
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 4_096
        constraints:
          min: 4_096

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: true
      default: 1
      constraints:
        min: 1

    property_blueprints:
      - name: ssh_host_key
        type: rsa_pkey_credentials
        configurable: false

    manifest: |
      diego:
        auctioneer:
          bbs:
            api_location: bbs.service.cf.internal:8889
            ca_cert: (( $ops_manager.ca_certificate ))
            server_cert: (( .properties.bbs_server_cert.cert_pem ))
            server_key: (( .properties.bbs_server_cert.private_key_pem ))
            client_cert: (( .properties.bbs_client_cert.cert_pem ))
            client_key: (( .properties.bbs_client_cert.private_key_pem ))
        cc_uploader:
          cc:
            job_polling_interval_in_seconds: 25
            basic_auth_username: (( .cloud_controller.internal_api_user_credentials.identity ))
            basic_auth_password: (( .cloud_controller.internal_api_user_credentials.password ))
            external_port: 9022
            staging_upload_password: (( .cloud_controller.staging_upload_credentials.password ))
            staging_upload_user: (( .cloud_controller.staging_upload_credentials.identity ))
        converger:
          bbs:
            api_location: bbs.service.cf.internal:8889
            ca_cert: (( $ops_manager.ca_certificate ))
            server_cert: (( .properties.bbs_server_cert.cert_pem ))
            server_key: (( .properties.bbs_server_cert.private_key_pem ))
            client_cert: (( .properties.bbs_client_cert.cert_pem ))
            client_key: (( .properties.bbs_client_cert.private_key_pem ))
        file_server:
          cc:
            job_polling_interval_in_seconds: 25
            basic_auth_username: (( .cloud_controller.internal_api_user_credentials.identity ))
            basic_auth_password: (( .cloud_controller.internal_api_user_credentials.password ))
            external_port: 9022
            staging_upload_password: (( .cloud_controller.staging_upload_credentials.password ))
            staging_upload_user: (( .cloud_controller.staging_upload_credentials.identity ))
        nsync:
          bbs:
            api_location: bbs.service.cf.internal:8889
            ca_cert: (( $ops_manager.ca_certificate ))
            server_cert: (( .properties.bbs_server_cert.cert_pem ))
            server_key: (( .properties.bbs_server_cert.private_key_pem ))
            client_cert: (( .properties.bbs_client_cert.cert_pem ))
            client_key: (( .properties.bbs_client_cert.private_key_pem ))
          cc:
            base_url: https://api.(( .cloud_controller.system_domain.value ))
            basic_auth_username: (( .cloud_controller.internal_api_user_credentials.identity ))
            basic_auth_password: (( .cloud_controller.internal_api_user_credentials.password ))
            staging_upload_password: (( .cloud_controller.staging_upload_credentials.password ))
            staging_upload_user: (( .cloud_controller.staging_upload_credentials.identity ))
        route_emitter:
          bbs:
            api_location: bbs.service.cf.internal:8889
            ca_cert: (( $ops_manager.ca_certificate ))
            server_cert: (( .properties.bbs_server_cert.cert_pem ))
            server_key: (( .properties.bbs_server_cert.private_key_pem ))
            client_cert: (( .properties.bbs_client_cert.cert_pem ))
            client_key: (( .properties.bbs_client_cert.private_key_pem ))
          nats:
            user: (( .nats.credentials.identity ))
            password: (( .nats.credentials.password ))
            port: 4222
            machines: (( .nats.ips ))
        ssh_proxy:
          bbs:
            api_location: bbs.service.cf.internal:8889
            ca_cert: (( $ops_manager.ca_certificate ))
            server_cert: (( .properties.bbs_server_cert.cert_pem ))
            server_key: (( .properties.bbs_server_cert.private_key_pem ))
            client_cert: (( .properties.bbs_client_cert.cert_pem ))
            client_key: (( .properties.bbs_client_cert.private_key_pem ))
          host_key: (( ssh_host_key.private_key_pem ))
          enable_cf_auth: true
          enable_diego_auth: false
          diego_credentials: ""
          cc:
            external_port: 9022
          uaa_token_url: "https://uaa.(( .cloud_controller.system_domain.value ))/oauth/token"
          uaa_secret: (( .uaa.ssh_proxy_client_credentials.password ))
        ssl:
          skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
        stager:
          bbs:
            api_location: bbs.service.cf.internal:8889
            ca_cert: (( $ops_manager.ca_certificate ))
            server_cert: (( .properties.bbs_server_cert.cert_pem ))
            server_key: (( .properties.bbs_server_cert.private_key_pem ))
            client_cert: (( .properties.bbs_client_cert.cert_pem ))
            client_key: (( .properties.bbs_client_cert.private_key_pem ))
          cc:
            basic_auth_username: (( .cloud_controller.internal_api_user_credentials.identity ))
            basic_auth_password: (( .cloud_controller.internal_api_user_credentials.password ))
            external_port: 9022
            staging_upload_password: (( .cloud_controller.staging_upload_credentials.password ))
            staging_upload_user: (( .cloud_controller.staging_upload_credentials.identity ))
          insecure_docker_registry_list: (( .diego_cell.insecure_docker_registry_list.parsed_strings ))
        tps:
          traffic_controller_url: wss://doppler.(( .cloud_controller.system_domain.value )):(( .properties.logger_endpoint_port.value || "443" ))
          bbs:
            api_location: bbs.service.cf.internal:8889
            ca_cert: (( $ops_manager.ca_certificate ))
            server_cert: (( .properties.bbs_server_cert.cert_pem ))
            server_key: (( .properties.bbs_server_cert.private_key_pem ))
            client_cert: (( .properties.bbs_client_cert.cert_pem ))
            client_key: (( .properties.bbs_client_cert.private_key_pem ))
          cc:
            basic_auth_username: (( .cloud_controller.internal_api_user_credentials.identity ))
            basic_auth_password: (( .cloud_controller.internal_api_user_credentials.password ))
            external_port: 9022
            staging_upload_password: (( .cloud_controller.staging_upload_credentials.password ))
            staging_upload_user: (( .cloud_controller.staging_upload_credentials.identity ))
      consul:
        encrypt_keys:
        - (( .properties.consul_encrypt_key.value ))
        ca_cert: (( $ops_manager.ca_certificate ))
        agent_cert: (( .properties.consul_agent_cert.cert_pem ))
        agent_key: (( .properties.consul_agent_cert.private_key_pem ))
        server_cert: (( .properties.consul_server_cert.cert_pem ))
        server_key: (( .properties.consul_server_cert.private_key_pem ))
        agent:
          domain: cf.internal
          servers:
            lan: (( .consul_server.ips ))
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      loggregator:
        etcd:
          machines: (( .etcd_server.ips ))

  - name: diego_cell
    label: Diego Cell
    resource_label: Diego Cell
    description: Diego Cell
    templates:
      - name: rep
        release: diego
      - name: consul_agent
        release: cf
      - name: garden
        release: garden-linux
      - name: cflinuxfs2-rootfs-setup
        release: cflinuxfs2-rootfs
      - name: metron_agent
        release: cf
      - name: statsd-injector
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 16_384
        constraints:
          min: 16_384

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 65_536
        constraints:
          min: 65_536

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 2
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: true
      default: 3
      constraints:
        min: 1

    property_blueprints:
      - name: executor_disk_capacity
        type: integer
        label: Cell Disk Capacity (in MB)
        configurable: true
        optional: true
        constraints:
          min: 1
      - name: executor_memory_capacity
        type: integer
        label: Cell Memory Capacity (in MB)
        configurable: true
        optional: true
        constraints:
          min: 1
      - name: garden_network_pool
        type: string
        default: 10.254.0.0/22
        configurable: true
        optional: false
      - name: insecure_docker_registry_list
        type: string_list
        configurable: true
        optional: true

      - name: garden_network_mtu
        type: integer
        configurable: true
        optional: false
        default: 1454

    manifest: |
      diego:
        executor:
          disk_capacity_mb: (( executor_disk_capacity.value ))
          memory_capacity_mb: (( executor_memory_capacity.value ))
          post_setup_hook: sh -c "rm -f /home/vcap/app/.java-buildpack.log /home/vcap/app/**/.java-buildpack.log"
          post_setup_user: "root"
        rep:
          bbs:
            api_location: bbs.service.cf.internal:8889
            ca_cert: (( $ops_manager.ca_certificate ))
            server_cert: (( .properties.bbs_server_cert.cert_pem ))
            server_key: (( .properties.bbs_server_cert.private_key_pem ))
            client_cert: (( .properties.bbs_client_cert.cert_pem ))
            client_key: (( .properties.bbs_client_cert.private_key_pem ))
          preloaded_rootfses:
          - cflinuxfs2:/var/vcap/packages/cflinuxfs2/rootfs
          zone: (( availability_zone ))
      cflinuxfs2-rootfs:
        trusted_certs: (( $ops_manager.trusted_certificates ))
      consul:
        encrypt_keys:
        - (( .properties.consul_encrypt_key.value ))
        ca_cert: (( $ops_manager.ca_certificate ))
        agent_cert: (( .properties.consul_agent_cert.cert_pem ))
        agent_key: (( .properties.consul_agent_cert.private_key_pem ))
        server_cert: (( .properties.consul_server_cert.cert_pem ))
        server_key: (( .properties.consul_server_cert.private_key_pem ))
        agent:
          domain: cf.internal
          servers:
            lan: (( .consul_server.ips ))
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      loggregator:
        etcd:
          machines: (( .etcd_server.ips ))
      garden:
        persistent_image_list:
          - "/var/vcap/packages/rootfs_cflinuxfs2/rootfs"
        graph_cleanup_threshold_in_mb: (( .properties.garden_disk_cleanup.selected_option.parsed_manifest(graph_cleanup_threshold_in_mb) ))
        network_pool: (( garden_network_pool.value ))
        deny_networks: ["0.0.0.0/0"]
        network_mtu: (( garden_network_mtu.value ))
        insecure_docker_registry_list: (( insecure_docker_registry_list.parsed_strings ))

  - name: doppler
    label: Doppler Server
    resource_label: Doppler Server
    description: Doppler server collects application logs
    templates:
      - name: doppler
        release: cf
      - name: metron_agent
        release: cf
      - name: syslog_drain_binder
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: true
      default: 1
      constraints:
        min: 1

    property_blueprints:
      - name: shared_secret_credentials
        type: simple_credentials

      - name: message_drain_buffer_size
        type: integer
        default: 10000
        configurable: true

    manifest: |
      doppler:
        zone: (( availability_zone ))
        message_drain_buffer_size: (( message_drain_buffer_size.value ))

      uaa:
        jwt:
          verification_key: (( .uaa.jwt_signing_key_credentials.public_key_pem ))

      doppler_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))

      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      loggregator:
        etcd:
          machines: (( .etcd_server.ips ))

      system_domain: (( .cloud_controller.system_domain.value ))
      cc:
        bulk_api_password: (( .cloud_controller.bulk_api_credentials.password ))
        srv_api_uri: "https://api.(( .cloud_controller.system_domain.value ))"

  - name: loggregator_trafficcontroller
    label: Loggregator Trafficcontroller
    resource_label: Loggregator Trafficcontroller
    description: Loggregator trafficcontroller distributes requests to Loggregator servers
    templates:
      - name: loggregator_trafficcontroller
        release: cf
      - name: metron_agent
        release: cf
      - name: route_registrar
        release: cf
      - name: statsd-injector
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      default: 1
      configurable: true
      constraints:
        min: 1

    property_blueprints:
      - name: status_credentials
        type: simple_credentials

    manifest: |
      loggregator:
        doppler_port: 8081

      cc:
        srv_api_uri: "https://api.(( .cloud_controller.system_domain.value ))"

      system_domain: (( .cloud_controller.system_domain.value ))

      traffic_controller:
        zone: (( availability_zone ))

      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      loggregator:
        etcd:
          machines: (( .etcd_server.ips ))
      doppler:
        uaa_client_id: (( .uaa.doppler_client_credentials.identity ))
      uaa:
        clients:
          doppler:
            secret: (( .uaa.doppler_client_credentials.password ))

      route_registrar:
        routes:
        - name: doppler
          port: 8081
          registration_interval: 20s
          uris:
          - "doppler.(( .cloud_controller.system_domain.value ))"
        - name: loggregator
          port: 8080
          registration_interval: 20s
          uris:
          - "loggregator.(( .cloud_controller.system_domain.value ))"

  - name: push-apps-manager
    label: Push Apps Manager
    resource_label: Push Apps Manager
    description: Pushes the Pivotal Apps Manager application to your Elastic Runtime installation
    templates:
      - name: push-apps-manager
        release: push-apps-manager-release
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: false
      default: 1

    property_blueprints:
      - name: secret_token
        type: secret
        configurable: false

      - name: company_name
        type: string
        configurable: true
        optional: true

      - name: accent_color
        type: string
        configurable: true
        optional: true

      - name: global_wrapper_bg_color
        type: string
        configurable: true
        optional: true

      - name: global_wrapper_text_color
        type: string
        configurable: true
        optional: true

      - name: global_wrapper_header_content
        type: text
        configurable: true
        optional: true

      - name: global_wrapper_footer_content
        type: text
        configurable: true
        optional: true

      - name: logo
        type: string
        configurable: true
        optional: true

      - name: square_logo
        type: string
        configurable: true
        optional: true

      - name: footer_text
        type: string
        configurable: true
        optional: true

      - name: footer_links
        type: collection
        configurable: true
        optional: true
        property_blueprints:
          - name: name
            type: string
          - name: href
            type: string

      - name: nav_links
        type: collection
        configurable: true
        property_blueprints:
          - name: name
            type: string
          - name: href
            type: string
        default:
          - name: Marketplace
            href: /marketplace
          - name: Docs
            href: http://docs.pivotal.io/pivotalcf/getstarted/pcf-docs.html
          - name: Tools
            href: /tools

      - name: product_name
        type: string
        configurable: true
        optional: true

      - name: marketplace_name
        type: string
        configurable: true
        optional: true

      - name: enable_internal_user_store
        type: boolean
        configurable: true
        default: false

      - name: enable_non_admin_role_management
        type: boolean
        configurable: true
        default: false

    manifest: |
      cf:
        api_url: "https://api.(( .cloud_controller.system_domain.value ))"
        admin_username: (( .uaa.push_apps_manager_credentials.identity ))
        admin_password: (( .uaa.push_apps_manager_credentials.password ))
        system_domain: (( .cloud_controller.system_domain.value ))
      services:
        authentication:
          CF_CLIENT_ID: (( .uaa.apps_manager_client_credentials.identity ))
          CF_CLIENT_SECRET: (( .uaa.apps_manager_client_credentials.password ))
          CF_LOGIN_SERVER_URL: "https://login.(( .cloud_controller.system_domain.value ))"
          CF_UAA_SERVER_URL: "https://uaa.(( .cloud_controller.system_domain.value ))"
      env:
        secret_token: (( secret_token.value ))
        cf_cc_api_url: "https://api.(( .cloud_controller.system_domain.value ))"
        cf_loggregator_http_url: http://loggregator.(( .cloud_controller.system_domain.value )) # this property is not yet used, so this value may be wrong when the time comes
        cf_console_url: "https://apps.(( .cloud_controller.system_domain.value ))"
        cf_notifications_service_url: "https://notifications.(( .cloud_controller.system_domain.value ))"
        default_from: (( .properties.smtp_from.value ))
        usage_service_host: "https://app-usage.(( .cloud_controller.system_domain.value ))"
        bundle_without: test development hosted_only
        apps_manager_version: (( .properties.product_version.value ))
        enable_internal_user_store: (( enable_internal_user_store.value ))
        enable_non_admin_role_management: (( enable_non_admin_role_management.value ))
        generic_white_label_config_json:
          company_name: (( company_name.value || "Pivotal" ))
          accent_color: (( accent_color.value ))
          logo: data:image/png;base64,(( logo.value || "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" ))
          square_logo: data:image/png;base64,(( square_logo.value || "iVBORw0KGgoAAAANSUhEUgAAAGwAAABsCAYAAACPZlfNAAAAAXNSR0IArs4c6QAABYtJREFUeAHtnVtsFFUYx7/d3ruWotUKVIkNaCw02YgJGBRTMd4CokUejD4QH4gxQcIDeHnBmPjkhSghUYLGe3ywPtAHNCo0QgkWwi2tXG2V1kIpLXTbLt1tS9dzlmzSJssZhv32zDk7/2km2znn7Pd9+/vt2Z2dmW0D9Obat4gCiwiLBQQSLflSViAQeN6Can1fYiJBFPQ9BcsAQBiEWUbAsnIxwyDMMgKWlYsZBmGWEbCsXMwwCLOMgGXlYoZBmGUELCsXMwzCLCNgWbmYYRBmGQHLysUMgzDLCFhWLmYYhFlGwLJyMcMgzDIClpWLGQZhlhGwrFzMMAizjIBl5WKGQZhlBCwrV1xbb96y59V1VFJQmLawQNrWa43x8XEaHo1fW+Oj1H8lSqf6eulEbw+dvNhLvcNDinvb0WWksAdm3UWhwiJ2gt2RAWo80UY7jrdSU8cZGrt6lT1HtgMaKSxbD7qqfDq99tAjyTUSG6FP9v1BH+3dTUPxeLZSssf17U5HeXEJbXr8aerY+A6tf7iOxFeu2OFmI6BvhaVgVoRCtHl5PTW8/AoV5xekmo299b2wlJn6+WFqWrOWKkpDqSYjbyFskpZFs++hL1e9NKnFvF+t3OmQOwzdkcgUmnnBABXm5Ys1j8qKisVadFPvS8tramn1goX09eEDU+KbsmGlsMbjbbT6x++UDOVORGXoFppXOYMerLqbVsyrpcWzqykYdH5R+fjZlcnd/8sjV5Q5vOh0rt6LqhhyJsQ3uC+ID8ry89aHYtf90W1bKLzlffr19EnH6HIP8oXasOM4LwbkrLB0MP+6cJ6e+eoz+vTP5nTdU9peDC+Ysm3Khq+ESehy5r3e2ECHu7uUDuqq59Id4iXVtMV3wqSACSHt3V2/KF3I97qayjuVY7zo9KUwCfq3M6coNjamZD6zrFzZ70Wnb4XFxseoK3JZyXzWtGnKfi86fStMwu6LRpXMZ5RBmBKQ7k75XqZa8gLmPZ/Nq0hFkLnvttJSZUT5Oc60xbfC5CGs6lsrlD56hgaV/V50+lbYkuo5VFygPp3SMwxhXjwp0+bcsGRp2vZU48TEBB09153aNObWlzNMHo1/6r4apYTmsx10MTqsHONFp5VH6zMBtWbhYtq6YpVjiJ/ajjmO8WKAL4QFxamWZffPT1678dicex05D4jTKj8cO+Q4zosBOSXs7bonktci5ovjgPIUye3ieo3wzKrk+TC5faPLGz83On6ovtFY3ONySth7Ty67qbPMk6Hu+edv+vzg/slNRv3uy52O6xk40HWW6r/94nrdRrTn1AzLhOju9tP03DfbKTo6mkmYrN/X98L6xQHgTb/vpG0t+5LnybJOPMMEvhXWOXCJvj9yiD7Yu4sGRkYyxKjv7r4RJi+Na+05Rwf/66SG1qO0v/NffZQZM+WUsI07d1BC/MTE144GYzHxJYcYDYq1vb/f8WQlI9OshsopYZubm7IKy4Tg2K03wYKLGiDMBSwThkKYCRZc1ABhLmCZMBTCTLDgogYIcwHLhKEQZoIFFzVAmAtYJgyFMBMsuKgBwlzAMmEohJlgwUUNEOYClglDIcwECy5qgDAXsEwYCmEmWHBRA4S5gGXCUAgzwYKLGow84yyvuyhR/GW19kt9Lh5ibg01UtjS7VtzizLjo8FLIiNMHaEgTAdlxhwQxghTRygI00GZMQeEMcLUEQrCdFBmzAFhjDB1hIIwHZQZc0AYI0wdoSBMB2XGHBDGCFNHKAjTQZkxB4QxwtQRCsJ0UGbMAWGMMHWEgjAdlBlzQBgjTB2hIEwHZcYcEMYIU0coCNNBmTEHhDHC1BEKwnRQZswBYYwwdYSCMB2UGXNAGCNMHaEgTAdlxhziUu1Ei8M/+WFMh1CZEUi0/A+j7hNSB5Wo2wAAAABJRU5ErkJggg==" ))
          footer_text: (( footer_text.value || "©2016 Pivotal Software, Inc. All Rights Reserved." ))
          footer_links: (( footer_links.value ))
          global_wrapper_bg_color: (( global_wrapper_bg_color.value ))
          global_wrapper_text_color: (( global_wrapper_text_color.value ))
          global_wrapper_header_content: (( global_wrapper_header_content.value ))
          global_wrapper_footer_content: (( global_wrapper_footer_content.value ))
        apps_manager_config_json:
          product_name: (( product_name.value ))
          marketplace_name: (( marketplace_name.value ))
          nav_links: (( nav_links.value ))
      databases:
        console: (( .properties.system_database.selected_option.parsed_manifest(console) ))
        app_usage_service: (( .properties.system_database.selected_option.parsed_manifest(push-app-usage-service) ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
        https_only_mode: true

  - name: smoke-tests
    label: Run Smoke Tests
    resource_label: Run Smoke Tests
    description: Runs Smoke Tests against your Elastic Runtime installation
    templates:
      - name: smoke-tests
        release: cf
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: false
      default: 1

    property_blueprints:

    manifest: |
      smoke_tests: (( .properties.smoke_tests.selected_option.parsed_manifest(smoke_tests) ))

  - name: notifications
    label: Notifications
    resource_label: Notifications
    description: Notifications release for PCF
    templates:
      - name: deploy-notifications
        release: notifications
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: false
      default: 1

    property_blueprints:
      - name: encryption_credentials
        type: simple_credentials

    manifest: |
      domain: (( .cloud_controller.system_domain.value ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
      notifications:
        app_domain: (( .cloud_controller.system_domain.value ))
        network: notifications
        sender: (( .properties.smtp_from.value ))
        encryption_key: (( encryption_credentials.password ))
        enable_diego: true
        instance_count: 3
        syslog_url: (( .properties.syslog_protocol.value "://" .properties.syslog_host.value ":" .properties.syslog_port.value ))
        organization: system
        space: notifications-with-ui
        error_on_misconfiguration: false
        cf:
          admin_user: (( .uaa.admin_credentials.identity ))
          admin_password: (( .uaa.admin_credentials.password ))
        smtp:
          host: (( .properties.smtp_address.value ))
          pass: (( .properties.smtp_credentials.password ))
          port: (( .properties.smtp_port.value ))
          user: (( .properties.smtp_credentials.identity ))
          tls: (( .properties.smtp_enable_starttls_auto.value ))
          auth_mechanism: (( .properties.smtp_auth_mechanism.value ))
          crammd5_secret: (( .properties.smtp_crammd5_secret.value ))
        uaa:
          admin_client_id: (( .uaa.admin_client_credentials.identity ))
          admin_client_secret: (( .uaa.admin_client_credentials.password ))
          client_id: (( .uaa.notifications_client_credentials.identity ))
          client_secret: (( .uaa.notifications_client_credentials.password ))
        database: (( .properties.system_database.selected_option.parsed_manifest(notifications) ))
        default_template: |
          {
            "name": "Default Template",
            "subject": "CF Notification: {{.Subject}}",
            "html": "\u003ctable width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"border-collapse:collapse;font-family: Helvetica, Arial,sans-serif\"\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd width=\"100%\" align=\"center\" bgcolor=\"#F8f8f8\" style=\"padding-right:10px;padding-left:10px\"\u003e\n                \u003ctable width=\"600\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"border-collapse:collapse\"\u003e\n                    \u003ctbody\u003e\n                        \u003ctr\u003e\n                            \u003ctd align=\"left\" valign=\"top\" style=\"padding-bottom:30px;padding-top:30px\"\u003e\n                              \u003cimg src=\"http://notifications-ui.{{.Domain}}/assets/pivotal_logo.png\"\n                                alt=\"Pivotal CF\" border=\"0\" style=\"display:block\" class=\"CToWUd\"\n                                width=\"166px\" height=\"35px\"\u003e\n                            \u003c/td\u003e\n                        \u003c/tr\u003e\n                    \u003c/tbody\u003e\n                \u003c/table\u003e\n                \u003ctable width=\"600\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"border-collapse:collapse\"\u003e\n                    \u003ctbody\u003e\n                        \u003ctr\u003e\n                            \u003ctd align=\"left\" valign=\"top\" bgcolor=\"#FFFFFF\"\u003e\n                                \u003ctable width=\"600\" cellpadding=\"40\" cellspacing=\"0\" border=\"0\" style=\"border-collapse:collapse;border:1px solid #e0e4e5\"\u003e\n                                    \u003ctbody\u003e\n                                        \u003ctr\u003e\n                                            \u003ctd style=\"color:#666666;font-size:16px;line-height:22px\"\u003e\n                                                \u003cdiv\u003e\n                                                    {{.HTML}}\n                                                \u003c/div\u003e\n                                            \u003c/td\u003e\n                                        \u003c/tr\u003e\n                                    \u003c/tbody\u003e\n                                \u003c/table\u003e\n                            \u003c/td\u003e\n                        \u003c/tr\u003e\n                    \u003c/tbody\u003e\n                \u003c/table\u003e\n                \u003ctable width=\"600\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"border-collapse:collapse;font-size:12px;color:#b4b4b4\"\u003e\n                    \u003ctbody\u003e\n                        \u003ctr\u003e\n                          \u003ctd align=\"left\" valign=\"middle\" style=\"padding-top:20px;padding-bottom:20px\"\u003eManage your \u003ca href=\"https://notifications-ui.{{.Domain}}/preferences\"\n                                target=\"_blank\"\u003enotification preferences\u003c/a\u003e or\n                              \u003ca href=\"https://notifications-ui.{{.Domain}}/unsubscribe/{{.UnsubscribeID}}\"\n                                target=\"_blank\"\u003eunsubscribe\u003c/a\u003e\n                            \u003c/td\u003e\n                        \u003c/tr\u003e\n                        \u003ctr\u003e\n                            \u003ctd align=\"left\" valign=\"middle\" style=\"padding-bottom:20px\"\u003ePivotal Cloud Foundry, and the Pivotal Cloud Foundry logo are registered\n                                trademarks or trademarks of Pivotal Software, Inc.\n                                in the United States and other countries. All other\n                                trademarks used herein are the property of their\n                                respective owners.\n                                \u003ca\u003e\n                            \u003c/td\u003e\n                        \u003c/tr\u003e\n                        \u003ctr\u003e\n                            \u003ctd align=\"left\" valign=\"middle\" style=\"padding-bottom:20px\"\u003e\u00A9 2015 Pivotal Software, Inc. All rights reserved.\n                                Published in the USA.\n                                \u003ca\u003e\n                            \u003c/td\u003e\n                        \u003c/tr\u003e\n                    \u003c/tbody\u003e\n                \u003c/table\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n",
            "text": "_____\n\n\nPivotal CF\n\n{{.Text}}\n\nManage your notification preferences:\nhttps://notifications-ui.{{.Domain}}/preferences\n\nUnsubscribe from Pivotal emails:\nhttps://notifications-ui.{{.Domain}}/unsubscribe/{{.UnsubscribeID}}\n\nPivotal Cloud Foundry, and the Pivotal Cloud Foundry logo are registered trademarks or trademarks of Pivotal Software, Inc. in the United States and other countries. All other trademarks used herein are the property of their respective owners.\n\n\u00A9 2015 Pivotal Software, Inc. All rights reserved. Published in the USA.\n\n______\n",
            "metadata": {}
          }

  - name: notifications-tests
    label: Run Notifications Tests
    resource_label: Run Notifications Tests
    description: Runs the Notifications tests against your Elastic Runtime installation
    templates:
      - name: test-notifications
        release: notifications
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: false
      default: 1

    property_blueprints:

    manifest: |
      domain: (( .cloud_controller.system_domain.value ))
      notifications:
        cf:
          admin_user: (( .uaa.admin_credentials.identity ))
          admin_password: (( .uaa.admin_credentials.password ))
        app_domain: (( .cloud_controller.system_domain.value ))
        uaa:
          admin_client_id: (( .uaa.admin_client_credentials.identity ))
          admin_client_secret: (( .uaa.admin_client_credentials.password ))
        organization: system
        space: notifications-with-ui

  - name: notifications-ui
    label: Notifications-UI
    resource_label: Notifications-UI
    description: Notifications UI Component for PCF
    templates:
      - name: deploy-notifications-ui
        release: notifications-ui
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: false
      default: 1

    property_blueprints:

    manifest: |
      domain: (( .cloud_controller.system_domain.value ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
      notifications_ui:
        organization: system
        space: notifications-with-ui
        app_domain: (( .cloud_controller.system_domain.value ))
        network: notifications
        syslog_url: (( .properties.syslog_protocol.value "://" .properties.syslog_host.value ":" .properties.syslog_port.value ))
        encryption_key: (( .notifications.encryption_credentials.password ))
        enable_diego: true
        instance_count: 1
        cf:
          admin_user: (( .uaa.admin_credentials.identity ))
          admin_password: (( .uaa.admin_credentials.password ))
        uaa:
          admin_client: (( .uaa.admin_client_credentials.identity ))
          admin_secret: (( .uaa.admin_client_credentials.password ))
          client_id: (( .uaa.notifications_ui_client_credentials.identity ))
          client_secret: (( .uaa.notifications_ui_client_credentials.password ))

  - name: notifications-ui-tests
    label: Run Notifications-UI tests
    resource_label: Run Notifications-UI tests
    description: Runs the Notifications UI tests against your Elastic Runtime installation
    templates:
      - name: test-notifications-ui
        release: notifications-ui
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: false
      default: 1

    property_blueprints:

    manifest: |
      domain: (( .cloud_controller.system_domain.value ))
      notifications_ui:
        cf:
          admin_user: (( .uaa.admin_credentials.identity ))
          admin_password: (( .uaa.admin_credentials.password ))
        app_domain: (( .cloud_controller.system_domain.value ))
        uaa:
          admin_client_id: (( .uaa.admin_client_credentials.identity ))
          admin_client_secret: (( .uaa.admin_client_credentials.password ))
        organization: system
        space: notifications-with-ui

  - name: autoscaling
    label: Deploy CF Autoscaling App
    resource_label: Deploy CF Autoscaling App
    description: Deploys the CF Autoscaling App
    templates:
      - name: deploy-autoscaling
        release: cf-autoscaling
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 512
        constraints:
          min: 512

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: false
      default: 1

    property_blueprints:
      - name: broker_credentials
        type: salted_credentials

      - name: encryption_key
        type: salted_credentials

    manifest: |
      app_domains:
        - (( .cloud_controller.system_domain.value ))
      autoscale:
        broker:
          user: (( broker_credentials.identity ))
          password: (( broker_credentials.password ))
        cf:
          admin_user: (( .uaa.admin_credentials.identity ))
          admin_password: (( .uaa.admin_credentials.password ))
        instance_count: 1
        database: (( .properties.system_database.selected_option.parsed_manifest(autoscaling) ))
        encryption_key: (( encryption_key.password ))
        enable_diego: true
        notifications_host: "https://notifications.(( .cloud_controller.system_domain.value ))"
        organization: system
        space: autoscaling
      domain: (( .cloud_controller.system_domain.value ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
      uaa:
        clients:
          autoscaling_service:
            secret: (( .uaa.autoscale_client_credentials.password ))

  - name: autoscaling-register-broker
    label: Register Autoscaling Service Broker
    resource_label: Register Autoscaling Service Broker
    description: Register Autoscaling Service Broker
    templates:
      - name: register-broker
        release: cf-autoscaling
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 512
        constraints:
          min: 512

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: false
      default: 1

    property_blueprints:

    manifest: |
      app_domains:
        - (( .cloud_controller.system_domain.value ))
      autoscale:
        broker:
          user: (( .autoscaling.broker_credentials.identity ))
          password: (( .autoscaling.broker_credentials.password ))
        cf:
          admin_user: (( .uaa.admin_credentials.identity ))
          admin_password: (( .uaa.admin_credentials.password ))
        organization: system
        space: autoscaling
      domain: (( .cloud_controller.system_domain.value ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

  - name: autoscaling-destroy-broker
    label: Destroy autoscaling service broker
    resource_label: Destroy autoscaling service broker
    description: Destroy autoscaling service broker
    templates:
      - name: destroy-broker
        release: cf-autoscaling
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 512
        constraints:
          min: 512

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: false
      default: 1

    property_blueprints:

    manifest: |
      autoscale:
        broker:
          user: (( .autoscaling.broker_credentials.identity ))
          password: (( .autoscaling.broker_credentials.password ))
        cf:
          admin_user: (( .uaa.admin_credentials.identity ))
          admin_password: (( .uaa.admin_credentials.password ))
        organization: system
        space: autoscaling
      domain: (( .cloud_controller.system_domain.value ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

  - name: autoscaling-tests
    label: Run Autoscaling Tests
    resource_label: Run Autoscaling Tests
    description: Run the Autoscaling tests against your Elastic Runtime installation
    templates:
      - name: test-autoscaling
        release: cf-autoscaling
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 512
        constraints:
          min: 512

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: false
      default: 1

    property_blueprints:
      - name: broker_credentials
        type: salted_credentials

    manifest: |
      domain: (( .cloud_controller.system_domain.value ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
      autoscale:
        cf:
          admin_user: (( .uaa.admin_credentials.identity ))
          admin_password: (( .uaa.admin_credentials.password ))

  - name: acceptance-tests
    label: Run CF Acceptance Tests
    resource_label: Run CF Acceptance Tests
    description: Runs CF Acceptance Tests against your Elastic Runtime installation
    templates:
      - name: acceptance-tests
        release: cf
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: false
      default: 1

    property_blueprints:

    manifest: |
      acceptance_tests:
        api: "https://api.(( .cloud_controller.system_domain.value ))"
        apps_domain: (( .cloud_controller.apps_domain.value ))
        admin_user: (( .uaa.admin_credentials.identity ))
        admin_password: (( .uaa.admin_credentials.password ))
        include_logging: true
        include_internet_dependent: true
        include_operator: true
        include_services: true
        include_security_groups: false
        skip_ssl_validation: (( .ha_proxy.skip_cert_verify.value ))
        skip_regex: lucid64
        skip_diego_unsupported_tests: true
        java_buildpack_name: java_buildpack_offline
        include_diego_ssh: true
        include_route_services: true
        include_sso: true

  - name: acceptance-tests-internetless
    label: Run CF Acceptance Tests without internet
    resource_label: Run CF Acceptance Tests without internet
    description: Runs CF Acceptance Tests against your Elastic Runtime installation without internet
    templates:
      - name: acceptance-tests
        release: cf
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: false
      default: 1

    property_blueprints:

    manifest: |
      acceptance_tests:
        api: "https://api.(( .cloud_controller.system_domain.value ))"
        apps_domain: (( .cloud_controller.apps_domain.value ))
        admin_user: (( .uaa.admin_credentials.identity ))
        admin_password: (( .uaa.admin_credentials.password ))
        include_logging: true
        include_internet_dependent: false
        include_operator: true
        include_services: true
        include_security_groups: false
        skip_ssl_validation: (( .ha_proxy.skip_cert_verify.value ))
        skip_regex: lucid64
        skip_diego_unsupported_tests: true
        java_buildpack_name: java_buildpack_offline

  - name: bootstrap
    label: Bootstrap
    resource_label: Bootstrap
    description: Errand for bootstrapping the MySQL cluster
    templates:
    - name: bootstrap
      release: cf-mysql
    errand: true
    max_in_flight: 1
    resource_definitions:
    - name: ram
      type: integer
      label: RAM
      configurable: true
      default: 2048
      constraints:
        min: 1024
    - name: ephemeral_disk
      type: integer
      label: Ephemeral Disk
      configurable: true
      default: 2048
      constraints:
        min: 1024
    - name: persistent_disk
      type: integer
      label: Persistent Disk
      configurable: false
      default: 0
    - name: cpu
      type: integer
      label: CPU
      configurable: true
      default: 1
      constraints:
        min: 1
        power_of_two: true
    static_ip: 0
    dynamic_ip: 1
    single_az_only: false
    instance_definition:
      name: instances
      type: integer
      label: Instances
      configurable: false
      default: 1
    property_blueprints:
    manifest: |
      cluster_ips: (( .mysql.ips ))
      database_startup_timeout: (( .mysql.database_startup_timeout.value ))
      bootstrap_endpoint:
        username: (( .mysql.mysql_bootstrap_credentials.identity ))
        password: (( .mysql.mysql_bootstrap_credentials.password ))

  - name: compilation
    label: Compilation
    resource_label: Compilation
    description: Compilation

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 20_480
        constraints:
          min: 20_480

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 2
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    single_az_only: false

    instance_definition:
      name: instances
      type: integer
      label: Instances
      default: 1
      configurable: true
      constraints:
        min: 1

property_blueprints:
  - name: product_version
    type: string
    configurable: false
    default: *product_version

  - name: syslog_host
    type: network_address
    configurable: true
    optional: true

  - name: syslog_port
    type: port
    configurable: true
    optional: true

  - name: syslog_protocol
    type: dropdown_select
    configurable: true
    optional: true
    options:
      - name: tcp
        label: TCP protocol
      - name: relp
        label: RELP protocol
      - name: udp
        label: UDP protocol

  - name: smtp_from
    type: email
    configurable: true
    optional: true

  - name: smtp_address
    type: network_address
    configurable: true
    optional: true

  - name: smtp_port
    type: port
    configurable: true
    optional: true

  - name: smtp_credentials
    type: simple_credentials
    configurable: true
    optional: true

  - name: smtp_enable_starttls_auto
    type: boolean
    configurable: true
    default: false

  - name: smtp_auth_mechanism
    type: dropdown_select
    configurable: true
    default: plain
    options:
      - name: none
        label: None
      - name: plain
        label: Plain
      - name: cram-md5
        label: CRAMMD5

  - name: smtp_crammd5_secret
    type: string
    configurable: true
    optional: true

  - name: logger_endpoint_port
    type: port
    configurable: true
    optional: true

  - name: app_usage_service_database
    type: string
    configurable: false
    default: app_usage_service
  - name: autoscale_database
    type: string
    configurable: false
    default: autoscale
  - name: ccdb_database
    type: string
    configurable: false
    default: ccdb
  - name: console_database
    type: string
    configurable: false
    default: console
  - name: notifications_database
    type: string
    configurable: false
    default: notifications
  - name: uaa_database
    type: string
    configurable: false
    default: uaa

  - name: consul_encrypt_key
    type: secret
    configurable: false

  - name: consul_agent_cert
    type: rsa_cert_credentials
    configurable: false

  - name: consul_server_cert
    type: rsa_cert_credentials
    configurable: false
    default:
      domains:
      - server.dc1.cf.internal

  - name: etcd_peer_cert
    type: rsa_cert_credentials
    configurable: false
    default:
      domains:
      - etcd.service.cf.internal
      - "*.etcd.service.cf.internal"

  - name: etcd_client_cert
    type: rsa_cert_credentials
    configurable: false

  - name: etcd_server_cert
    type: rsa_cert_credentials
    configurable: false
    default:
      domains:
      - etcd.service.cf.internal
      - "*.etcd.service.cf.internal"

  - name: bbs_client_cert
    type: rsa_cert_credentials
    configurable: false

  - name: bbs_server_cert
    type: rsa_cert_credentials
    configurable: false
    default:
      domains:
      - bbs.service.cf.internal
      - "*.bbs.service.cf.internal"

  - name: uaa
    type: selector
    configurable: true
    default: internal
    option_templates:
      - name: internal
        select_value: internal
        named_manifests:
        - name: saml_provider
          manifest: |

        - name: self_service_links_enabled
          manifest: |
            true
        property_blueprints:
          - name: password_min_length
            type: integer
            configurable: true
            default: 0
          - name: password_min_uppercase
            type: integer
            configurable: true
            default: 0
          - name: password_min_lowercase
            type: integer
            configurable: true
            default: 0
          - name: password_min_numeric
            type: integer
            configurable: true
            default: 0
          - name: password_min_special
            type: integer
            configurable: true
            default: 0
          - name: password_expires_after_months
            type: integer
            configurable: true
            default: 0
          - name: password_max_retry
            type: integer
            configurable: true
            default: 5
      - name: saml
        select_value: saml
        named_manifests:
        - name: saml_provider
          manifest: |
            (( .properties.uaa.saml.sso_name.value )):
              metadataTrustCheck: false
              idpMetadata: "(( .properties.uaa.saml.sso_url.value_present? ? .properties.uaa.saml.sso_url.value : .properties.uaa.saml.sso_xml.value ))"
              nameID: (( .properties.uaa.saml.name_id_format.value ))
              showSamlLoginLink: true
              linkText: (( .properties.uaa.saml.display_name.value ))
        - name: self_service_links_enabled
          manifest: |
            false
        property_blueprints:
          - name: sso_name
            type: string
            configurable: true
          - name: display_name
            type: string
            configurable: true
          - name: sso_url
            type: http_url
            configurable: true
            optional: true
          - name: name_id_format
            type: dropdown_select
            configurable: true
            optional: false
            default: "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"
            options:
            - name: "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"
              label: Email Address
            - name: "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"
              label: Unspecified
            - name: "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent"
              label: Persistent
          - name: sso_xml
            type: text
            configurable: true
            optional: true
          - name: sign_auth_requests
            type: boolean
            configurable: true
            default: true
          - name: require_signed_assertions
            type: boolean
            configurable: true
      - name: ldap
        select_value: ldap
        named_manifests:
        - name: saml_provider
          manifest: |

        - name: self_service_links_enabled
          manifest: |
            false
        property_blueprints:
          - name: url
            type: ldap_url
            configurable: true
          - name: credentials
            type: simple_credentials
            configurable: true
          - name: search_base
            type: string
            configurable: true
          - name: search_filter
            type: string
            configurable: true
            default: "cn={0}"
          - name: group_search_base
            type: string
            configurable: true
            optional: true
          - name: group_search_filter
            type: string
            configurable: true
            default: "member={0}"
          - name: server_ssl_cert
            type: text
            configurable: true
            optional: true
          - name: server_ssl_cert_alias
            type: string
            configurable: true
            optional: true
          - name: mail_attribute_name
            type: string
            configurable: true
            default: 'mail'

  - name: networking_point_of_entry
    type: selector
    configurable: true
    default: haproxy
    option_templates:
      - name: external_ssl
        select_value: external_ssl
        property_blueprints:
          - name: ssl_rsa_certificate
            type: rsa_cert_credentials
            configurable: true
          - name: ssl_ciphers
            type: text
            configurable: true
            optional: true
      - name: external_non_ssl
        select_value: external_non_ssl
      - name: haproxy
        select_value: haproxy
        property_blueprints:
          - name: ssl_rsa_certificate
            type: rsa_cert_credentials
            configurable: true
          - name: disable_http
            type: boolean
            configurable: true
            default: false
          - name: ssl_ciphers
            type: text
            configurable: true
            optional: true

  - name: route_services
    type: selector
    configurable: true
    default: enable
    option_templates:
      - name: enable
        select_value: enable
        named_manifests:
          - name: secret
            manifest: |
              (( .router.route_services_secret.value ))
        property_blueprints:
          - name: ignore_ssl_cert_verification
            type: boolean
            configurable: true
            default: false
      - name: disable
        select_value: disable
        named_manifests:
          - name: secret
            manifest: |

  - name: system_database
    type: selector
    configurable: true
    default: internal_mysql
    option_templates:
      - name: internal
        select_value: internal
        named_manifests:
          - name: ccdb
            manifest: |
              address: (( .ccdb.first_ip ))
              port: 2544
              db_scheme: "postgres"
              roles:
              - tag: admin
                name: (( .ccdb.credentials.identity ))
                password: (( .ccdb.credentials.password ))
              databases:
              - tag: cc
                name: ccdb
                citext: true
          - name: uaadb
            manifest: |
              address: (( .uaadb.first_ip ))
              port: 2544
              db_scheme: postgresql
              roles:
              - tag: admin
                name: (( .uaadb.credentials.identity ))
                password: (( .uaadb.credentials.password ))
              databases:
              - tag: uaa
                name: uaa
          - name: notifications
            manifest: |
              url: mysql://(( .mysql.notifications_credentials.identity )):(( .mysql.notifications_credentials.password ))@(( .mysql_proxy.service_hostname.value || .mysql_proxy.first_ip || .mysql.first_ip )):3306/notifications
              max_open_connections: 10
          - name: autoscaling
            manifest: |
              url: mysql://(( .mysql.autoscale_credentials.identity )):(( .mysql.autoscale_credentials.password ))@(( .mysql_proxy.service_hostname.value || .mysql_proxy.first_ip || .mysql.first_ip )):3306/autoscale
          - name: console
            manifest: |
              ip: (( .consoledb.first_ip ))
              username: (( .consoledb.credentials.identity ))
              password: (( .consoledb.credentials.password ))
              adapter: postgres
          - name: push-app-usage-service
            manifest: |
              name: app_usage_service
              port: 3306
              ip: (( .mysql_proxy.first_ip || .mysql.first_ip ))
              username: (( .mysql.app_usage_credentials.identity ))
              password: (( .mysql.app_usage_credentials.password ))

      - name: internal_mysql
        select_value: internal_mysql
        named_manifests:
        - name: ccdb
          manifest: |
            address: (( .mysql_proxy.service_hostname.value || .mysql_proxy.first_ip || .mysql.first_ip ))
            port: 3306
            db_scheme: mysql
            roles:
            - tag: admin
              name: (( .mysql.ccdb_credentials.identity ))
              password: (( .mysql.ccdb_credentials.password ))
            databases:
            - tag: cc
              name: ccdb
              citext: true
        - name: uaadb
          manifest: |
            address: (( .mysql_proxy.service_hostname.value || .mysql_proxy.first_ip || .mysql.first_ip ))
            port: 3306
            db_scheme: mysql
            roles:
            - tag: admin
              name: (( .mysql.uaadb_credentials.identity ))
              password: (( .mysql.uaadb_credentials.password ))
            databases:
            - tag: uaa
              name: uaa
        - name: notifications
          manifest: |
            url: mysql://(( .mysql.notifications_credentials.identity )):(( .mysql.notifications_credentials.password ))@(( .mysql_proxy.service_hostname.value || .mysql_proxy.first_ip || .mysql.first_ip )):3306/notifications
            max_open_connections: 10
        - name: autoscaling
          manifest: |
            url: mysql://(( .mysql.autoscale_credentials.identity )):(( .mysql.autoscale_credentials.password ))@(( .mysql_proxy.service_hostname.value || .mysql_proxy.first_ip || .mysql.first_ip )):3306/autoscale
        - name: console
          manifest: |
            ip: (( .mysql_proxy.service_hostname.value || .mysql_proxy.first_ip || .mysql.first_ip ))
            port: 3306
            username: (( .mysql.consoledb_credentials.identity ))
            password: (( .mysql.consoledb_credentials.password ))
            adapter: mysql
        - name: push-app-usage-service
          manifest: |
            name: app_usage_service
            port: 3306
            ip: (( .mysql_proxy.first_ip || .mysql.first_ip ))
            username: (( .mysql.app_usage_credentials.identity ))
            password: (( .mysql.app_usage_credentials.password ))

      - name: external
        named_manifests:
          - name: ccdb
            manifest: |
              address: (( .properties.system_database.external.host.value ))
              port: (( .properties.system_database.external.port.value ))
              db_scheme: "mysql"
              roles:
              - tag: admin
                name: (( .properties.system_database.external.username.value ))
                password: (( .properties.system_database.external.password.value ))
              databases:
              - tag: cc
                name: ccdb
          - name: uaadb
            manifest: |
              address: (( .properties.system_database.external.host.value ))
              port: (( .properties.system_database.external.port.value ))
              db_scheme: "mysql"
              roles:
              - tag: admin
                name: (( .properties.system_database.external.username.value ))
                password: (( .properties.system_database.external.password.value ))
              databases:
              - tag: uaa
                name: uaa
          - name: notifications
            manifest: |
              url: mysql://(( .properties.system_database.external.username.value )):(( .properties.system_database.external.password.value ))@(( .properties.system_database.external.host.value )):(( .properties.system_database.external.port.value ))/notifications
              max_open_connections: 10
          - name: autoscaling
            manifest: |
              url: mysql://(( .properties.system_database.external.username.value )):(( .properties.system_database.external.password.value ))@(( .properties.system_database.external.host.value )):(( .properties.system_database.external.port.value ))/autoscale
          - name: console
            manifest: |
              ip: (( .properties.system_database.external.host.value ))
              port: (( .properties.system_database.external.port.value ))
              username: (( .properties.system_database.external.username.value ))
              password: (( .properties.system_database.external.password.value ))
              adapter: mysql
          - name: push-app-usage-service
            manifest: |
              name: app_usage_service
              port: (( .properties.system_database.external.port.value ))
              ip: (( .properties.system_database.external.host.value ))
              username: (( .properties.system_database.external.username.value ))
              password: (( .properties.system_database.external.password.value ))
        select_value: external
        property_blueprints:
          - name: port
            type: port
            configurable: true
          - name: host
            type: string
            configurable: true
          - name: username
            type: string
            configurable: true
          - name: password
            type: secret
            configurable: true

  - name: system_blobstore
    type: selector
    configurable: true
    default: internal
    option_templates:
      - name: internal
        select_value: internal
        named_manifests:
          - name: ccbuildpack
            manifest: |
              blobstore_type: fog
              fog_connection:
                provider: Local
                local_root: /var/vcap/nfs/shared
          - name: ccdroplet
            manifest: |
              blobstore_type: fog
              fog_connection:
                provider: Local
                local_root: /var/vcap/nfs/shared
          - name: ccpackage
            manifest: |
              blobstore_type: fog
              fog_connection:
                provider: Local
                local_root: /var/vcap/nfs/shared
          - name: ccresource
            manifest: |
              blobstore_type: fog
              fog_connection:
                provider: Local
                local_root: /var/vcap/nfs/shared
      - name: external
        named_manifests:
          - name: ccbuildpack
            manifest: |
              buildpack_directory_key: (( .properties.system_blobstore.external.buildpacks_bucket.value ))
              fog_connection:
                provider: AWS
                aws_access_key_id: (( .properties.system_blobstore.external.access_key.value ))
                aws_secret_access_key: (( .properties.system_blobstore.external.secret_key.value ))
                aws_signature_version: (( .properties.system_blobstore.external.signature_version.value ))
                region:  (( .properties.system_blobstore.external.region.value ))
                path_style: true
                endpoint: (( .properties.system_blobstore.external.endpoint.value ))
          - name: ccdroplet
            manifest: |
              droplet_directory_key: (( .properties.system_blobstore.external.droplets_bucket.value ))
              fog_connection:
                provider: AWS
                aws_access_key_id: (( .properties.system_blobstore.external.access_key.value ))
                aws_secret_access_key: (( .properties.system_blobstore.external.secret_key.value ))
                aws_signature_version: (( .properties.system_blobstore.external.signature_version.value ))
                region:  (( .properties.system_blobstore.external.region.value ))
                path_style: true
                endpoint: (( .properties.system_blobstore.external.endpoint.value ))
          - name: ccpackage
            manifest: |
              app_package_directory_key: (( .properties.system_blobstore.external.packages_bucket.value ))
              fog_connection:
                provider: AWS
                aws_access_key_id: (( .properties.system_blobstore.external.access_key.value ))
                aws_secret_access_key: (( .properties.system_blobstore.external.secret_key.value ))
                aws_signature_version: (( .properties.system_blobstore.external.signature_version.value ))
                region:  (( .properties.system_blobstore.external.region.value ))
                path_style: true
                endpoint: (( .properties.system_blobstore.external.endpoint.value ))
          - name: ccresource
            manifest: |
              resource_directory_key: (( .properties.system_blobstore.external.resources_bucket.value ))
              fog_connection:
                provider: AWS
                aws_access_key_id: (( .properties.system_blobstore.external.access_key.value ))
                aws_secret_access_key: (( .properties.system_blobstore.external.secret_key.value ))
                aws_signature_version: (( .properties.system_blobstore.external.signature_version.value ))
                region:  (( .properties.system_blobstore.external.region.value ))
                path_style: true
                endpoint: (( .properties.system_blobstore.external.endpoint.value ))
        select_value: external
        property_blueprints:
          - name: endpoint
            type: string
            configurable: true
            default: "https://s3.amazonaws.com"
          - name: buildpacks_bucket
            type: string
            configurable: true
          - name: droplets_bucket
            type: string
            configurable: true
          - name: packages_bucket
            type: string
            configurable: true
          - name: resources_bucket
            type: string
            configurable: true
          - name: access_key
            type: string
            configurable: true
          - name: secret_key
            type: secret
            configurable: true
          - name: signature_version
            type: dropdown_select
            configurable: true
            optional: false
            default: 2
            options:
            - name: 2
              label: V2 Signature
            - name: 4
              label: V4 Signature
          - name: region
            type: dropdown_select
            configurable: true
            optional: false
            default: "''"
            options:
            - name: "''"
              label: "V2 Signature - N/A"
            - name: "eu-central-1"
              label: "V4 Signature - EU Region (Frankfurt)"
            - name: "cn-north-1"
              label: "V4 Signature - China Region (Beijing)"

  - name: mysql_backups
    type: selector
    configurable: true
    default: disable
    option_templates:
    - name: disable
      select_value: disable
    - name: enable
      select_value: enable
      property_blueprints:
      - name: bucket_name
        type: string
        configurable: true
      - name: bucket_path
        type: string
        configurable: true
      - name: access_key_id
        type: string
        configurable: true
      - name: secret_access_key
        type: secret
        configurable: true
      - name: cron_schedule
        type: string
        configurable: true

  - name: smoke_tests
    type: selector
    configurable: true
    default: on_demand
    option_templates:
      - name: on_demand
        select_value: on_demand
        named_manifests:
          - name: smoke_tests
            manifest: |
              api: "https://api.(( .cloud_controller.system_domain.value ))"
              apps_domain: (( .cloud_controller.apps_domain.value ))
              user: (( .uaa.run_smoke_tests_credentials.identity ))
              password: (( .uaa.run_smoke_tests_credentials.password ))
              org: CF_SMOKE_TEST_ORG
              space: CF_SMOKE_TEST_SPACE
              skip_ssl_validation: (( .ha_proxy.skip_cert_verify.value ))
              use_existing_org: false
              use_existing_space: false

      - name: specified
        select_value: specified
        named_manifests:
          - name: smoke_tests
            manifest: |
              api: "https://api.(( .cloud_controller.system_domain.value ))"
              apps_domain: (( .properties.smoke_tests.specified.apps_domain.value ))
              user: (( .uaa.run_smoke_tests_credentials.identity ))
              password: (( .uaa.run_smoke_tests_credentials.password ))
              org: (( .properties.smoke_tests.specified.org_name.value ))
              space: (( .properties.smoke_tests.specified.space_name.value ))
              skip_ssl_validation: (( .ha_proxy.skip_cert_verify.value ))
              use_existing_org: true
              use_existing_space: true
        property_blueprints:
          - name: org_name
            type: string
            configurable: true
          - name: space_name
            type: string
            configurable: true
          - name: apps_domain
            type: string
            configurable: true

  - name: garden_disk_cleanup
    type: selector
    configurable: true
    default: routine
    option_templates:
      - name: never
        named_manifests:
        - name: graph_cleanup_threshold_in_mb
          manifest: |
            -1
        select_value: never
      - name: routine
        named_manifests:
        - name: graph_cleanup_threshold_in_mb
          manifest: |
            0
        select_value: routine
      - name: threshold
        named_manifests:
        - name: graph_cleanup_threshold_in_mb
          manifest: |
            (( .properties.garden_disk_cleanup.threshold.cleanup_threshold_in_mb.value ))
        select_value: threshold
        property_blueprints:
          - name: cleanup_threshold_in_mb
            type: integer
            constraints:
              min: 1
