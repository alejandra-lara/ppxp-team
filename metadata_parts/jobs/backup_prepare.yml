---
name: backup-prepare
label: Backup Prepare Node
resource_label: Backup Prepare Node
description: Streams backups from MySQL Cluster
templates:
- name: streaming-mysql-backup-client
  release: mysql-backup
- name: service-backup
  release: service-backup
max_in_flight: 1
single_az_only: true
resource_definitions:
- name: ram
  type: integer
  label: RAM
  configurable: true
  default: 1024
  constraints:
    min: 1024
- name: ephemeral_disk
  type: integer
  label: Ephemeral Disk
  configurable: true
  default: 4000
  constraints:
    min: 2000
- name: persistent_disk
  type: integer
  label: Persistent Disk
  configurable: false
  default: 200000
  constraints:
    min: 10000
- name: cpu
  type: integer
  label: CPU
  configurable: true
  default: 1
  constraints:
    min: 1
    power_of_two: true
static_ip: 1
dynamic_ip: 0
instance_definition:
  name: instances
  type: integer
  label: Instances
  configurable: true
  default: 1
  constraints:
    min: 0
    max: 1
  zero_if:
    property_reference: .properties.mysql_backups
    property_values:
    - disable
property_blueprints:
- name: backup_encryption_key
  type: secret
  label: Backup Symmetric Encryption Key
manifest: |
  service-backup:
    destination: (( .properties.mysql_backups.selected_option.parsed_manifest(destination) ))
    source_folder: /var/vcap/store/mysql-backups
    source_executable: /var/vcap/jobs/streaming-mysql-backup-client/bin/client
    cleanup_executable: /bin/bash -c /var/vcap/jobs/streaming-mysql-backup-client/bin/cleanup-directories
    cron_schedule: (( .properties.mysql_backups.selected_option.parsed_manifest(cron_schedule) ))
    exit_if_in_progress: true
  cf-mysql-backup:
    symmetric_key: (( backup_encryption_key.value ))
    endpoint_credentials:
      username: (( .mysql.mysql_backup_server_credentials.identity ))
      password: (( .mysql.mysql_backup_server_credentials.password ))
    backup-all-masters: (( .properties.mysql_backups.selected_option.parsed_manifest(backup_all_masters) ))
  cf_mysql:
    mysql:
      cluster_ips: (( .mysql.ips ))
