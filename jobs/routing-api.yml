---
name: routing-api
release: routing
provides: |
  routing_api: {as: routing_api, shared: true}
manifest: |
  release_level_backup: true
  uaa:
    tls_port: 8443
    ca_cert: (( $ops_manager.ca_certificate ))
  routing_api:
    log_level: debug
    enabled_api_endpoints: "both"
    mtls_ca: (( $ops_manager.ca_certificate ))
    mtls_server_cert: (( .properties.routing_api_server_cert.cert_pem ))
    mtls_server_key: (( .properties.routing_api_server_cert.private_key_pem ))
    mtls_client_cert: (( .properties.routing_api_client_cert.cert_pem ))
    mtls_client_key: (( .properties.routing_api_client_cert.private_key_pem ))
    router_groups: (( .properties.tcp_routing.selected_option.parsed_manifest(default_router_group) ))
    skip_consul_lock: true
    system_domain: (( .cloud_controller.system_domain.value ))
    sqldb: (( .properties.system_database.selected_option.parsed_manifest(routingdb) ))
    debug_address: "127.0.0.1:17003"
    locket:
      api_location: locket.service.cf.internal:8891
      ca_cert: (( $ops_manager.ca_certificate ))
      client_cert: (( .cloud_controller.locket_client_cert.cert_pem ))
      client_key: (( .cloud_controller.locket_client_cert.private_key_pem ))
