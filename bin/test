#!/bin/bash

set -eu

: "${RENDERER:=ops-manifest}"

info_color='\033[0;34m'
success_color='\033[0;32m'
no_color='\033[0m'

function build_docker_image() {
  if [ ! -f ./vendor/ops-manifest.gem ]; then
    github_username="${GITHUB_USERNAME:?}"
    github_api_token="${GITHUB_API_TOKEN:?}"
    gem_url=$(curl -u "${github_username}:${github_api_token}"  https://api.github.com/repos/pivotal-cf/ops-manifest/releases/latest | jq -r .assets[0].url)
    echo -e "${info_color}Grabbing latest ops-manifest release (ask PAS RelEng team for read access if it fails)...${no_color}"
    curl -u "${github_username}:${github_api_token}" -H "Accept: application/octet-stream" -L -o vendor/ops-manifest.gem "${gem_url}"
  fi

  echo -e "${info_color}Building docker image...${no_color}"
  docker build -t ops-manifest-do-not-push .
}

function run_manifest_tests() {
  local go_path ginkgo_args
  go_path=/go/src/github.com/pivotal-cf/p-runtime

  ginkgo_args="-p -r -slowSpecThreshold 15 'test/manifest'"
  if [ "$#" -gt 0 ]; then
    ginkgo_args="$( printf "'%s' " "$@") ${ginkgo_args}"
  fi

  echo -e "${info_color}Running manifest tests for PAS...${no_color}"
  docker run \
    -e "PRODUCT=ert" -e "RENDERER=${RENDERER}" \
    -v "$PWD:${go_path}" -w "${go_path}" \
    -it ops-manifest-do-not-push \
    /bin/bash -c "ginkgo ${ginkgo_args}"

  echo -e "${info_color}Running manifest tests for Small Footprint PAS...${no_color}"
  docker run \
    -e "PRODUCT=srt" -e "RENDERER=${RENDERER}" \
    -v "$PWD:${go_path}" -w "${go_path}" \
    -it ops-manifest-do-not-push \
    /bin/bash -c "ginkgo ${ginkgo_args}"
}

function run_migration_tests() {
  pushd migrations > /dev/null
    echo -e "${info_color}Installing NPM deps...${no_color}"
    npm install
    echo -e "${info_color}Running migration tests...${no_color}"
    npm test
  popd > /dev/null
}

function main() {
  local tile_repo
  tile_repo=$( cd "$( dirname "$( dirname "$0" )")" && pwd )

  pushd "${tile_repo}" > /dev/null
    build_docker_image
    run_manifest_tests "$@"
    run_migration_tests
  popd > /dev/null

  echo -e "\n${success_color}SUCCESS!${no_color}"
}

main "$@"
