---
name: windows_diego_cell
label: Windows Diego Cell
resource_label: Windows Diego Cell
templates:
  - name: consul_agent_windows
    release: consul
    consumes: |
      consul_common: {from: consul_common_link, deployment: (( ..cf.deployment_name ))}
      consul_client: nil
      consul_server: nil
  - name: rep_windows
    release: diego
  - name: route_emitter_windows
    release: diego
    consumes: |
      nats: {from: nats, deployment: ((  ..cf.deployment_name  )) }
  - name: event_log_forwarder
    release: event_log
  - name: garden-windows
    release: garden-runc
  - name: winc
    release: winc
  - name: winc-image
    release: winc
  - name: winc-network
    release: winc
  - name: metron_agent_windows
    release: loggregator
  - name: enable_rdp
    release: windows-utilities
  - name: enable_ssh
    release: windows-utilities
  - name: set_kms_host
    release: windows-utilities
  - name: set_password
    release: windows-utilities
  - name: randomize_password
    release: windows-utilities

resource_definitions:
  - name: ram
    type: integer
    label: RAM
    configurable: true
    default: 16_384
    constraints:
      min: 2_048

  - name: ephemeral_disk
    type: integer
    label: Ephemeral Disk
    configurable: true
    default: 65_536
    constraints:
      min: 4_096

  - name: persistent_disk
    type: integer
    label: Persistent Disk
    configurable: false
    default: 0

  - name: cpu
    type: integer
    label: CPU
    configurable: true
    default: 2
    constraints:
      min: 1
      power_of_two: true

static_ip: 0
dynamic_ip: 1
max_in_flight: "4%"
single_az_only: false

instance_definition:
  name: instances
  type: integer
  label: Instances
  configurable: true
  default: 3
  constraints:
    min: 1

property_blueprints:

# We pass placement tags as a list to CF but don't explain the option to configure multiple tags in the UI
  - name: placement_tags
    type: string_list
    configurable: true
    optional: true

  - name: windows_consul_agent_cert
    type: rsa_cert_credentials
    configurable: false
    default:
      domains:
      - 127.0.0.1

manifest: |
  garden:
    listen_address: "127.0.0.1:9241"
    image_plugin: "/var/vcap/packages/winc-image/winc-image.exe"
    network_plugin: "/var/vcap/packages/winc-network/winc-network.exe"
    network_plugin_extra_args:
    - "--configFile=/var/vcap/jobs/winc-network/config/interface.json"
    runtime_plugin: "/var/vcap/packages/winc/winc.exe"
    nstar_bin: "/var/vcap/packages/nstar/nstar.exe"
    destroy_containers_on_start: true
  diego:
    route_emitter:
      local_mode: true
      bbs:
        ca_cert: (( $ops_manager.ca_certificate ))
        client_cert: (( .properties.bbs_client_cert.cert_pem ))
        client_key: (( .properties.bbs_client_cert.private_key_pem ))
    executor:
      ca_certs_for_downloads: (( $ops_manager.ca_certificate ))
      instance_identity_ca_cert: ((( /cf/diego-instance-identity-intermediate-ca.certificate )))
      instance_identity_key: ((( /cf/diego-instance-identity-intermediate-ca.private_key )))
    rep:
      enable_legacy_api_endpoints: false
      ca_cert: (( $ops_manager.ca_certificate ))
      server_cert: (( .properties.rep_server_cert.cert_pem ))
      server_key: (( .properties.rep_server_cert.private_key_pem ))
      use_azure_fault_domains: true
      open_bindmounts_acl: true
      bbs:
        ca_cert: (( $ops_manager.ca_certificate ))
        client_cert: (( .properties.bbs_client_cert.cert_pem ))
        client_key: (( .properties.bbs_client_cert.private_key_pem ))
      consul:
        require_tls: true
        ca_cert: (( $ops_manager.ca_certificate ))
        client_cert: (( windows_consul_agent_cert.cert_pem ))
        client_key: (( windows_consul_agent_cert.private_key_pem ))
      locket:
        api_location: "locket.service.cf.internal:8891"
      preloaded_rootfses:
      - windows2016:/var/vcap/packages/windows2016fs/rootfs
      placement_tags: (( placement_tags.parsed_strings ))
  consul:
    agent_cert: (( windows_consul_agent_cert.cert_pem ))
    agent_key: (( windows_consul_agent_cert.private_key_pem ))
    agent:
      require_ssl: true
  syslog: (( .properties.system_logging.selected_option.parsed_manifest(syslog) ))
  metron_agent:
    deployment: cf
  loggregator:
    ca_cert: (( $ops_manager.ca_certificate ))
    cert: (( .properties.loggregator_client_cert.cert_pem ))
    key: (( .properties.loggregator_client_cert.private_key_pem ))
    tls:
      ca_cert: (( $ops_manager.ca_certificate ))
      metron:
        cert: (( .properties.metron_tls_cert.cert_pem ))
        key: (( .properties.metron_tls_cert.private_key_pem ))
    use_v2_api: true
  tcp:
    enabled: true
  tls:
    ca_cert: (( $ops_manager.ca_certificate ))
    cert: (( .properties.rep_server_cert.cert_pem ))
    key: (( .properties.rep_server_cert.private_key_pem ))
  uaa:
    ca_cert: (( $ops_manager.ca_certificate ))
    client_name: (( ..cf.uaa.tcp_emitter_credentials.identity ))
    client_secret: (( ..cf.uaa.tcp_emitter_credentials.password ))
  enable_rdp:
    enabled: (( .properties.rdp_enabled.value ))
  enable_ssh:
    enabled: (( .properties.bosh_ssh_enabled.value ))
  randomize_password: (( .properties.windows_admin_password.selected_option.parsed_manifest(randomize_password) ))
  set_kms_host: (( .properties.kms.selected_option.parsed_manifest(set_kms_host) ))
  set_password: (( .properties.windows_admin_password.selected_option.parsed_manifest(set_password) ))
  winc_network:
    mtu: 1460
