---
requires_product_versions:
  - name: microbosh
    version: "~> 1.3"
label: Pivotal Elastic Runtime
description:
  Gives developers the ability to push apps on a dynamically-configured software stack
image: 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
rank: 90
target_installer_version: 1.3.0.0

install_time_verifiers:
  - name: Verifiers::SsoUrlVerifier
    properties:
      - login.sso_url
  - name: Verifiers::WildcardDomainVerifier
    properties:
    - cloud_controller.system_domain
    - cloud_controller.apps_domain

post_deploy_errands:
  - name: push-console
  - name: smoke-tests
  - name: push-app-usage-service
  - name: notifications
  - name: autoscaling
  - name: autoscaling-register-broker

pre_delete_errands:
  - name: destroy-notifications

form_types:
  - name: ha_proxy
    label: HAProxy
    description: |
      HAProxy is the default load balancer for SSL termination. Alternatively,
      you can use your own load balancer and forward traffic to the Cloud
      Foundry router IP. Self-signed certificates will function properly.
    verifiers:
      - name: Verifiers::StaticIpsVerifier
    property_inputs:
      - reference: ha_proxy.static_ips
        label: HAProxy IPs
        description: "Enter the IP address(es) for HAProxy. You must point your DNS to this IP unless you are using your own load balancer. HAProxy's IP must be in your subnet."
      - reference: ha_proxy.ssl_rsa_certificate
        label: SSL Certificate
      - reference: ha_proxy.skip_cert_verify
        label: Trust Self-Signed Certificates

  - name: router
    label: Router IPs
    description: "Enter the IP address(es) for the Pivotal CF Elastic Runtime Router. This IP must be in your subnet."
    verifiers:
      - name: Verifiers::StaticIpsVerifier
    property_inputs:
      - reference: router.static_ips
        label: Router IPs
        description: "Enter the IP address(es) for the Pivotal CF Elastic Runtime Router. This IP must be in your subnet."

  - name: mysql_proxy
    label: MySQL Proxy Config
    description: MySQL Proxy configuration
    property_inputs:
      - reference: mysql_proxy.static_ips
        label: MySQL Proxy IPs
        description: "Enter the IP address(es) for the MySQL proxy instances configured on your external load balancer. The external load balancer IP will need to have been defined in the Router tab."

  - name: cloud_controller
    verifiers:
      - name: Verifiers::WildcardDomainVerifier
        properties:
        - system_domain
        - apps_domain
    label: Cloud Controller
    description: Coordinates Pivotal CF Elastic Runtime application lifecycles
    property_inputs:
      - reference: cloud_controller.system_domain
        label: System Domain
        description: "This domain is used to target and push apps to Pivotal CF Elastic Runtime (ex: api.my-cf.com). You must set up a wildcard DNS record for this domain that points to the router static IP(s) or a load balancer."
      - reference: cloud_controller.apps_domain
        label: Apps Domain
        description: This field specifies a default apps domain for Pivotal CF Elastic Runtime. Use the command line interface to delete domains.
      - reference: cloud_controller.encrypt_key
        label: Cloud Controller DB Encryption Key
        description: "Leave blank unless restoring a Cloud Controller Database exported from a previous installation."
      - reference: cloud_controller.max_file_size
        label: Maximum File Upload Size (MB)
        description: This value limits the size of an application upload.
      - reference: cloud_controller.disable_custom_buildpacks
        label: Disable Custom Buildpacks
      - reference: cloud_controller.default_quota_memory_limit_mb
        label: Default Quota App Memory (MB)
        description: Memory limit for all apps in an org using the default quota. For initial install only. Use the CLI to manage quotas.
      - reference: cloud_controller.default_quota_max_number_services
        label: Default Quota Service Instances
        description: Maximum allowed number of service instances in an org using the default quota. For initial install only. Use the CLI to manage quotas.

  - name: syslog_aggregator
    label: External Endpoints
    description: Forwards syslog messages to an external server. Leave these options blank unless you are providing a syslogd server.
    property_inputs:
      - reference: .syslog_host
        label: IP Address of Syslog Aggregator Host
        description: The host must be reachable from the Elastic Runtime network, accept TCP, UDP or RELP connections, and use the RELP protocol (e.g. rsyslogd).
      - reference: .syslog_port
        label: Syslog Aggregator Port
        description: The typical syslogd port is 514. Ensure syslogd is listening on external interfaces.
      - reference: .syslog_protocol
        label: Networking Protocol
        description: Transport to be used when forwarding logs

  - name: login_sso
    label: SSO Config
    description: Configure Identity Provider
    verifiers:
      - name: Verifiers::SsoUrlVerifier
        properties:
          - sso_url
    property_inputs:
      - reference: login.sso_name
        label: Provider Name
        description: "Name of Identity Provider. Allowed characters are alphanumeric, _, and -."
      - reference: login.sso_xml
        label: Provider Metadata
        description: "Metadata XML content for the Identity Provider"
      - reference: login.sso_url
        label: "(OR) Provider Metadata URL"
        description: "Enter an SSO endpoint. This address will be used by the User Account and Authentication server. Note: Your SSO endpoint must provide metadata."

  - name: login_ldap
    label: LDAP Config
    description: Configure an LDAP endpoint for the UAA
    verifiers:
      - name: Verifiers::LDAPBindVerifier
        properties:
          - ldap_url
          - credentials
    property_inputs:
      - reference: uaa.ldap_url
        label: LDAP Server URL
        description: 'Required for LDAP. The LDAP server url.  Must start with ldap:// or ldaps://'
      - reference: uaa.credentials
        label: LDAP Credentials
        description: Required for LDAP. This is the unique name and password for binding to the LDAP Server.
      - reference: uaa.ldap_search_base
        label: LDAP Search Base
        description: 'Required for LDAP. Example: ou=cloud,dc=example,dc=com'
      - reference: uaa.ldap_search_filter
        label: LDAP Search Filter
        description: 'Required for LDAP. Use {0} where the username should be inserted. If unsure, use cn={0}'
      - reference: uaa.ldap_group_search_base
        label: LDAP Group Search Base
        description: 'Required for LDAP groups. Example: ou=cloud,dc=example,dc=com'
      - reference: uaa.ldap_group_search_filter
        label: LDAP Group Search Filter
        description: 'Required for LDAP groups. Use {0} where the group should be inserted. If unsure, use cn={0}'
      - reference: uaa.ldap_server_ssl_cert
        label: LDAP Server SSL Cert
        description: 'Required only for ldaps://. This is the server certificate to trust for self-signed certificates'
      - reference: uaa.ldap_server_ssl_cert_alias
        label: LDAP Server SSL Cert AltName
        description: "Required only for ldaps:// + self-signed Cert. The SSL certificate's AltNames"
      - reference: uaa.ldap_mail_attribute_name
        label: Email Attribute
        description: "The name of the attribute that contains the user's email address, default value is mail."
      - reference: login.signups_enabled
        label: Enable sign ups
        description: "If checked, will allow users to create an account from the log in page."

  - name: smtp_config
    label: SMTP Config
    description: Configuration for Simple Mail Transfer Protocol
    property_inputs:
      - reference: .smtp_from
        label: From Email
        description: The email address from which emails are sent.
      - reference: .smtp_address
        label: Address of SMTP Server
        description: The SMTP address of the server that will send emails.
      - reference: .smtp_port
        label: Port of SMTP Server
        description: The port of the SMTP server that will send emails.
      - reference: .smtp_credentials
        label: SMTP Server Credentials
        description: The credentials for the SMTP server that will send emails.
      - reference: .smtp_enable_starttls_auto
        label: SMTP Enable Automatic STARTTLS
      - reference: .smtp_auth_mechanism
        label: SMTP Authentication Mechanism
      - reference: .smtp_crammd5_secret
        label: SMTP CRAMMD5 secret

job_types:
  - name: ha_proxy
    label: HAProxy
    resource_label: HAProxy
    description: HAProxy is the default load balancer for SSL termination. Alternatively, you can use your own load balancer and forward traffic to the Pivotal CF Elastic Runtime router IP. Self signed certificates will function properly.
    template:
      - haproxy
    release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          min: 0

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

      - name: static_ips
        type: ip_ranges
        configurable: true
        optional: true

      - name: ssl_rsa_certificate
        type: rsa_cert_credentials
        configurable: true

      - name: skip_cert_verify
        type: boolean
        configurable: true

    manifest: |
      networks:
        apps: default
      ha_proxy:
        ssl_pem: (( ssl_rsa_certificate.cert_and_private_key_pems ))
      router:
        servers:
          z1: (( .router.ips ))
          z2: []
      syslog_aggregator:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))

  - name: nats
    label: NATS
    resource_label: NATS
    description: Acts as the Pivotal CF Elastic Runtime message bus
    template:
      - nats
    release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024
          max: 3_000 # monit will restart when > 3000

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

      - name: credentials
        type: simple_credentials
        label: NATS credentials
        default:
          identity: nats

    manifest: |
      networks:
        apps: default
      nats:
        user: (( credentials.identity ))
        password: (( credentials.password ))
        address: (( first_ip ))
        machines: (( ips ))
        port: 4222
      syslog_aggregator:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))

  - name: etcd_server
    label: etcd
    resource_label: etcd
    description: An etcd cluster node, which maintains the state of applications, and its metrics server
    template:
    - etcd
    - etcd_metrics_server
    release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

    manifest: |
      networks:
        apps: default
      syslog_aggregator:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      etcd:
        machines: (( ips ))
      etcd_metrics_server:
        nats:
          username: (( .nats.credentials.identity ))
          password: (( .nats.credentials.password ))
          machines: (( .nats.ips ))

  - name: health_manager
    label: Health Manager
    resource_label: Health Manager
    description: Reports app health to the Cloud Controller
    template:
      - hm9000
    release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

      - name: internal_api_user_credentials
        type: simple_credentials
        label: Credentials for hm9000 API

    manifest: |
      cc:
        srv_api_uri: (( $runtime.system_api_url ))
        bulk_api_user: (( .cloud_controller.bulk_api_credentials.identity ))
        bulk_api_password: (( .cloud_controller.bulk_api_credentials.password ))
        internal_api_user: (( internal_api_user_credentials.identity ))
        internal_api_password: (( internal_api_user_credentials.password ))

      domain: (( $runtime.system_domain ))

      dea_next:
        heartbeat_interval_in_seconds: 10

      networks:
        apps: default

      etcd:
        machines: (( .etcd_server.ips ))

      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        address: (( .nats.first_ip ))
        port: 4222
        machines:  (( .nats.ips ))
      syslog_aggregator:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))

  - name: nfs_server
    label: NFS Server
    resource_label: NFS Server
    description: Stores droplets and app packages on behalf of Cloud Controller
    template:
      - debian_nfs_server
    release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 102_400
        constraints:
          min: 10_240

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

    manifest: |
      nfs_server:
        allow_from_entries:
        - (( ..cf.cloud_controller.first_network_deprecated ))

  - name: ccdb
    label: Cloud Controller Database
    resource_label: Cloud Controller Database
    description: Stores Cloud Controller information
    template:
      - postgres
    release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

      - name: credentials
        type: simple_credentials
        label: Database credentials
        default:
          identity: admin

    manifest: |
      databases:
        address: (( first_ip ))
        port: 2544
        db_scheme: "postgres"
        roles:
        - tag: admin
          name: (( credentials.identity ))
          password: (( credentials.password ))
        databases:
        - tag: cc
          name: ccdb
          citext: true

  - name: cloud_controller
    label: Cloud Controller
    resource_label: Cloud Controller
    description: Coordinates Pivotal CF Elastic Runtime application lifecycles
    template:
      - cloud_controller_ng
      - metron_agent
      - nfs_mounter
    release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 4_096
        constraints:
          min: 4_096

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 10_240
        constraints:
          min: 10_240

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          min: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

      - name: staging_upload_credentials
        type: simple_credentials
        label: Application staging upload credentials
        default:
          identity: staging_upload_user

      - name: bulk_api_credentials
        type: simple_credentials
        label: Bulk api credentials
        default:
          identity: bulk_api

      - name: db_encryption_credentials
        type: simple_credentials
        label: Cloud Controller DB encryption credentials
        default:
          identity: db_encryption

      - name: encrypt_key
        type: secret
        configurable: true
        optional: true

      - name: max_file_size
        type: integer
        configurable: true
        optional: false
        default: 1024
        constraints:
          min: 1024
          max: 2048

      - name: disable_custom_buildpacks
        type: boolean
        configurable: true
        optional: false

      - name: system_domain
        type: wildcard_domain
        configurable: true

      - name: apps_domain
        type: wildcard_domain
        configurable: true

      - name: default_quota_memory_limit_mb
        type: integer
        configurable: true
        default: 10240
        constraints:
          min: 10240
          max: 102400

      - name: default_quota_max_number_services
        type: integer
        configurable: true
        default: 100
        constraints:
          min: 0
          max: 1000

    manifest: |
      domain: (( $runtime.system_domain ))
      system_domain: (( $runtime.system_domain ))
      system_domain_organization: system
      app_domains: ["(( $runtime.apps_domain ))"]

      cc:
        bootstrap_admin_email: admin
        bulk_api_password: (( bulk_api_credentials.password ))
        client_max_body_size: (( max_file_size.value ))M
        db_encryption_key: (( encrypt_key.secret || db_encryption_credentials.password ))
        default_running_security_groups:
          - all_open
        default_staging_security_groups:
          - all_open
        disable_custom_buildpacks: (( disable_custom_buildpacks.value ))
        external_host: api
        install_buildpacks:
          - name: java_buildpack_offline
            package: buildpack_java_offline
          - name: ruby_buildpack
            package: buildpack_ruby
          - name: nodejs_buildpack
            package: buildpack_nodejs
          - name: go_buildpack
            package: buildpack_go
          - name: python_buildpack
            package: buildpack_python
          - name: php_buildpack
            package: buildpack_php
        internal_api_user: (( .health_manager.internal_api_user_credentials.identity ))
        internal_api_password: (( .health_manager.internal_api_user_credentials.password ))
        logging_level: debug
        quota_definitions:
          default:
            memory_limit: (( default_quota_memory_limit_mb.value ))
            total_services: (( default_quota_max_number_services.value ))
            non_basic_services_allowed: true
            total_routes: 1000
            trial_db_allowed: true
          runaway:
            memory_limit: 102400
            total_services: -1
            total_routes: 1000
            non_basic_services_allowed: true
        security_group_definitions:
          - name: all_open
            rules:
              - protocol: all
                destination: 0.0.0.0-255.255.255.255
        stacks:
          - name: windows2012
            description: "Microsoft Windows / .Net 64 bit"
        staging_upload_user: (( staging_upload_credentials.identity ))
        staging_upload_password: (( staging_upload_credentials.password ))
        tasks_disabled: true
        uaa_resource_id: cloud_controller,cloud_controller_service_permissions

      ccdb:
        address: (( .ccdb.first_ip ))
        port: 2544
        db_scheme: "postgres"
        roles:
        - tag: admin
          name: (( .ccdb.credentials.identity ))
          password: (( .ccdb.credentials.password ))
        databases:
        - tag: cc
          name: ccdb
          citext: true

      dea_next:
        advertise_interval_in_seconds: 5

      networks:
        apps: default
      nfs_server:
        address: (( .nfs_server.first_ip ))

      uaa:
        url: (( $runtime.uaa_url ))
        jwt:
          verification_key: (( .uaa.jwt_signing_key_credentials.public_key_pem ))
        clients:
          cc_service_broker_client:
            scope: cloud_controller.write,openid,cloud_controller.read,cloud_controller_service_permissions.read
            secret: (( .uaa.cc_service_broker_client_credentials.password ))
          cloud_controller_username_lookup:
            secret: (( .uaa.cloud_controller_username_lookup_credentials.password ))
      login:
        url: (( $runtime.login_url ))

      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

      etcd:
        machines: (( .etcd_server.ips ))

      metron_agent:
        zone: z1
      metron_endpoint:
        zone: z1
        shared_secret:  (( .doppler.shared_secret_credentials.password ))
      loggregator_endpoint:
        shared_secret:  (( .doppler.shared_secret_credentials.password ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_aggregator:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))

  - name: clock_global
    label: Clock Global
    resource_label: Clock Global
    description: Schedules asynchronous tasks for cloud controller
    template:
      - cloud_controller_clock
      - metron_agent
      - nfs_mounter
    release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1
        constraints:
          min: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

    manifest: |
      domain: (( $runtime.system_domain ))
      system_domain: (( $runtime.system_domain ))
      system_domain_organization: system
      app_domains: ["(( $runtime.apps_domain ))"]

      cc:
        logging_level: debug
        staging_upload_user: (( .cloud_controller.staging_upload_credentials.identity ))
        staging_upload_password: (( .cloud_controller.staging_upload_credentials.password ))
        bulk_api_password: (( .cloud_controller.bulk_api_credentials.password ))
        db_encryption_key: (( .cloud_controller.encrypt_key.secret || .cloud_controller.db_encryption_credentials.password ))
        internal_api_user: (( .health_manager.internal_api_user_credentials.identity ))
        internal_api_password: (( .health_manager.internal_api_user_credentials.password ))
        quota_definitions:
          default:
            memory_limit: (( .cloud_controller.default_quota_memory_limit_mb.value ))
            total_services: (( .cloud_controller.default_quota_max_number_services.value ))
            non_basic_services_allowed: true
            total_routes: 1000
            trial_db_allowed: true
          runaway:
            memory_limit: 102400
            total_services: -1
            total_routes: 1000
            non_basic_services_allowed: true

        security_group_definitions:
          - name: all_open
            rules:
              - protocol: all
                destination: 0.0.0.0-255.255.255.255
        default_running_security_groups:
          - all_open
        default_staging_security_groups:
          - all_open

      ccdb:
        address: (( .ccdb.first_ip ))
        port: 2544
        db_scheme: "postgres"
        roles:
        - tag: admin
          name: (( .ccdb.credentials.identity ))
          password: (( .ccdb.credentials.password ))
        databases:
        - tag: cc
          name: ccdb
          citext: true

      networks:
        apps: default
      nfs_server:
        address: (( .nfs_server.first_ip ))

      uaa:
        url: (( $runtime.uaa_url ))
        jwt:
          verification_key: (( .uaa.jwt_signing_key_credentials.public_key_pem ))
        clients:
          cc_service_broker_client:
            secret: (( .uaa.cc_service_broker_client_credentials.password ))
      login:
        url: (( $runtime.login_url ))

      etcd:
        machines: (( .etcd_server.ips ))

      metron_agent:
        zone: z1
      metron_endpoint:
        zone: z1
        shared_secret:  (( .doppler.shared_secret_credentials.password ))
      loggregator_endpoint:
        shared_secret:  (( .doppler.shared_secret_credentials.password ))

      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_aggregator:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))

  - name: cloud_controller_worker
    label: Cloud Controller Worker
    resource_label: Cloud Controller Worker
    description: Worker for cloud controller asynchronous tasks
    template:
      - cloud_controller_worker
      - metron_agent
      - nfs_mounter
    release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          min: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

    manifest: |
      domain: (( $runtime.system_domain ))
      system_domain: (( $runtime.system_domain ))
      system_domain_organization: system
      app_domains: ["(( $runtime.apps_domain ))"]

      cc:
        logging_level: debug
        staging_upload_user: (( .cloud_controller.staging_upload_credentials.identity ))
        staging_upload_password: (( .cloud_controller.staging_upload_credentials.password ))
        bulk_api_password: (( .cloud_controller.bulk_api_credentials.password ))
        db_encryption_key: (( .cloud_controller.encrypt_key.secret || .cloud_controller.db_encryption_credentials.password ))
        internal_api_user: (( .health_manager.internal_api_user_credentials.identity ))
        internal_api_password: (( .health_manager.internal_api_user_credentials.password ))
        quota_definitions:
          default:
            memory_limit: (( .cloud_controller.default_quota_memory_limit_mb.value ))
            total_services: (( .cloud_controller.default_quota_max_number_services.value ))
            non_basic_services_allowed: true
            total_routes: 1000
            trial_db_allowed: true
          runaway:
            memory_limit: 102400
            total_services: -1
            total_routes: 1000
            non_basic_services_allowed: true

        security_group_definitions:
          - name: all_open
            rules:
              - protocol: all
                destination: 0.0.0.0-255.255.255.255
        default_running_security_groups:
          - all_open
        default_staging_security_groups:
          - all_open

      ccdb:
        address: (( .ccdb.first_ip ))
        port: 2544
        db_scheme: "postgres"
        roles:
        - tag: admin
          name: (( .ccdb.credentials.identity ))
          password: (( .ccdb.credentials.password ))
        databases:
        - tag: cc
          name: ccdb
          citext: true

      networks:
        apps: default
      nfs_server:
        address: (( .nfs_server.first_ip ))

      uaa:
        url: (( $runtime.uaa_url ))
        jwt:
          verification_key: (( .uaa.jwt_signing_key_credentials.public_key_pem ))
        clients:
          cc_service_broker_client:
            secret: (( .uaa.cc_service_broker_client_credentials.password ))
      login:
        url: (( $runtime.login_url ))

      etcd:
        machines: (( .etcd_server.ips ))

      metron_agent:
        zone: z1
      metron_endpoint:
        zone: z1
        shared_secret:  (( .doppler.shared_secret_credentials.password ))
      loggregator_endpoint:
        shared_secret:  (( .doppler.shared_secret_credentials.password ))

      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_aggregator:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))

  - name: router
    label: Router
    resource_label: Router
    description: Routers route Internet traffic to applications and between Pivotal CF Elastic Runtime components.
    template:
      - gorouter
      - metron_agent
    release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          min: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

      - name: status_credentials
        type: simple_credentials
        label: Status credentials
        default:
          identity: router_status

      - name: static_ips
        type: ip_ranges
        configurable: true
        optional: true

    manifest: |
      networks:
        apps: default
      router:
        endpoint_timeout: 300
        status:
          user: router_status
          password: (( status_credentials.password ))

      etcd:
        machines: (( .etcd_server.ips ))

      metron_agent:
        zone: z1
      metron_endpoint:
        zone: z1
        shared_secret:  (( .doppler.shared_secret_credentials.password ))
      loggregator_endpoint:
        shared_secret:  (( .doppler.shared_secret_credentials.password ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_aggregator:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))

  - name: collector
    label: Collector
    resource_label: Collector
    description: Collects system information in order to provide health and status metrics
    template:
      - collector
    release: cf

    requires_product_versions:
      - name: p-metrics
        version: ~> 1.2

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 0

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

    manifest: |
      networks:
        apps: default
      collector:
        use_tsdb: true
        opentsdb:
          address: (( ..p-metrics.maximus.first_ip ))
          port: 13321

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        address: (( .nats.first_ip ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_aggregator:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))

  - name: uaadb
    label: UAA Database
    resource_label: UAA Database
    description: Stores user information for the UAA
    template:
      - postgres
    release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 8_192
        constraints:
          min: 8_192

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

      - name: credentials
        type: simple_credentials
        label: Database credentials
        default:
          identity: root

    manifest: |
      databases:
        address: (( first_ip ))
        port: 2544
        db_scheme: postgresql
        roles:
        - tag: admin
          name: (( credentials.identity ))
          password: (( credentials.password ))
        databases:
        - tag: uaa
          name: uaa
      networks:
        services: default

  - name: uaa
    label: UAA
    resource_label: UAA
    description: Pivotal CF Elastic Runtime's Authentication and Authorization server
    template:
      - uaa
    release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        default: 1
        configurable: true
        constraints:
          min: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

      - name: admin_credentials
        type: simple_credentials
        label: Administrator user credentials
        default:
          identity: admin

      - name: push_console_credentials
        type: simple_credentials
        default:
          identity: push_console

      - name: run_smoke_tests_credentials
        type: simple_credentials
        default:
          identity: smoke_tests

      - name: system_services_credentials
        type: simple_credentials
        label: System services user credentials
        default:
          identity: system_services

      - name: system_verification_credentials
        type: simple_credentials
        label: System verification user credentials
        default:
          identity: system_verification

      - name: system_passwords_client_credentials
        type: simple_credentials
        label: System passwords client credentials
        default:
          identity: system_passwords

      - name: login_client_credentials
        type: simple_credentials
        label: Login client credentials
        default:
          identity: login

      - name: doppler_client_credentials
        type: simple_credentials
        label: "Doppler's client secret to connect to UAA"
        default:
          identity: doppler

      - name: console_client_credentials
        type: simple_credentials
        label: Console client credentials
        default:
          identity: portal

      - name: autoscale_client_credentials
        type: simple_credentials
        label: Autoscaling Service client credentials
        default:
          identity: autoscaling_service

      - name: cc_service_broker_client_credentials
        type: simple_credentials
        label: Cloud Controller Service Broker client credentials
        default:
          identity: cc_service_broker_client

      - name: cc_client_credentials
        type: simple_credentials
        label: Cloud Controller client credentials
        default:
          identity: cloud_controller

      - name: admin_client_credentials
        type: simple_credentials
        label: Administrator client credentials
        default:
          identity: admin

      - name: jwt_signing_key_credentials
        type: rsa_pkey_credentials
        label: Access token signing RSA key

      - name: notifications_client_credentials
        type: simple_credentials
        label: Notifications client credentials
        default:
          identity: notifications

      - name: notifications_template_client_credentials
        type: simple_credentials
        label: Notifications client for modifying templates
        default:
          identity: notifications_template

      - name: notifications_ui_client_credentials
        type: simple_credentials
        label: Notifications UI client credentials
        default:
          identity: notifications_ui_client

      - name: cloud_controller_username_lookup_credentials
        type: simple_credentials
        label: Cloud Controller Username Lookup credentials
        default:
          identity: cloud_controller_username_lookup

      - name: ldap_url
        type: ldap_url
        configurable: true
        optional: true

      - name: credentials
        type: simple_credentials
        configurable: true
        optional: true

      - name: ldap_search_base
        type: string
        configurable: true
        optional: true

      - name: ldap_search_filter
        type: string
        configurable: true
        optional: true

      - name: ldap_server_ssl_cert
        type: text
        configurable: true
        optional: true

      - name: ldap_server_ssl_cert_alias
        type: string
        configurable: true
        optional: true

      - name: ldap_mail_attribute_name
        type: string
        configurable: true
        default: 'mail'

      - name: ldap_group_search_base
        type: string
        configurable: true
        optional: true

      - name: ldap_group_search_filter
        type: string
        configurable: true
        optional: true

    manifest: |
      uaa:
        ldap:
          profile_type: search-and-bind
          url: (( ldap_url.value ))
          userDN: (( credentials.identity ))
          userPassword: (( credentials.password ))
          searchBase: (( ldap_search_base.value ))
          searchFilter: (( ldap_search_filter.value ))
          sslCertificate: (( ldap_server_ssl_cert.value ))
          sslCertificateAlias: (( ldap_server_ssl_cert_alias.value ))
          mailAttributeName: (( ldap_mail_attribute_name.value ))
          enabled: (( ldap_url.value_present? ))
          groups:
            profile_type: groups-map-to-scopes
            searchBase: (( ldap_group_search_base.value ))
            groupSearchFilter: (( ldap_group_search_filter.value ))
        login:
          addnew: false
        catalina_opts: "-Xmx768m -XX:MaxPermSize=256m"
        url: (( $runtime.uaa_url ))
        jwt:
          signing_key: (( jwt_signing_key_credentials.private_key_pem ))
          verification_key: (( jwt_signing_key_credentials.public_key_pem ))
        cc:
          client_secret: (( cc_client_credentials.password ))
        admin:
          client_secret: (( admin_client_credentials.password ))
        clients:
          login:
            id: (( login_client_credentials.identity ))
            secret: (( login_client_credentials.password ))
            override: true
            autoapprove: true
            authorities: "oauth.login,scim.write,clients.read,notifications.write,critical_notifications.write,emails.write,scim.userids,password.write"
            authorized-grant-types: "authorization_code,client_credentials,refresh_token"
            scope: "openid,oauth.approvals"
          (( console_client_credentials.identity )):
            id: (( console_client_credentials.identity ))
            secret: (( console_client_credentials.password ))
            override: true
            autoapprove: true
            authorities: "scim.write,scim.read,cloud_controller.read,cloud_controller.write,password.write,uaa.admin,uaa.resource,cloud_controller.admin,emails.write,notifications.write"
            authorized-grant-types: "authorization_code,client_credentials,password,implicit"
            scope: "openid,cloud_controller.read,cloud_controller.write,password.write,console.admin,console.support,cloud_controller.admin"
            access-token-validity: 1209600
            refresh-token-validity: 1209600
          cf:
            id: cf
            override: true
            autoapprove: true
            authorities: "uaa.none"
            authorized-grant-types: "implicit,password,refresh_token"
            scope: "cloud_controller.read,cloud_controller.write,openid,password.write,cloud_controller.admin,scim.read,scim.write,doppler.firehose"
            access-token-validity: 7200
            refresh-token-validity: 1209600
          (( autoscale_client_credentials.identity )):
            id: (( autoscale_client_credentials.identity ))
            secret: (( autoscale_client_credentials.password ))
            override: true
            autoapprove: true
            authorities: "cloud_controller.write,cloud_controller.read,cloud_controller.admin,notifications.write,critical_notifications.write,emails.write"
            authorized-grant-types: "client_credentials,authorization_code,refresh_token"
            scope: "openid,cloud_controller.permissions,cloud_controller.read,cloud_controller.write"
            access-token-validity: 3600
          system_passwords:
            id: (( system_passwords_client_credentials.identity ))
            secret: (( system_passwords_client_credentials.password ))
            override: true
            autoapprove: true
            authorities: "uaa.admin,scim.read,scim.write,password.write"
            authorized-grant-types: "client_credentials"
          cc_service_broker_client:
            id: cc_service_broker_client
            secret: (( cc_service_broker_client_credentials.password ))
            override: true
            authorities: clients.read,clients.write,clients.admin
            authorized-grant-types: client_credentials
            scope: cloud_controller.write,openid,cloud_controller.read,cloud_controller_service_permissions.read
          doppler:
            id: (( doppler_client_credentials.identity ))
            secret: (( doppler_client_credentials.password ))
            authorities: uaa.resource
          notifications:
            id: notifications
            secret: (( .uaa.notifications_client_credentials.password ))
            authorities: cloud_controller.admin,scim.read,notifications.write,critical_notifications.write,emails.write
            authorized-grant-types: client_credentials
          notifications_template:
            id: (( .uaa.notifications_template_client_credentials.identity ))
            secret: (( .uaa.notifications_template_client_credentials.password ))
            scope: clients.read,clients.write,clients.secret
            authorities: clients.read,clients.write,clients.secret,notification_templates.write,notification_templates.read,notifications.manage
            authorized-grant-types: client_credentials
          notifications_ui_client:
            id: notifications_ui_client
            secret: (( .uaa.notifications_ui_client_credentials.password ))
            scope: uaa.none notification_preferences.read notification_preferences.write openid
            authorized-grant-types: authorization_code client_credentials refresh_token
            authorities: notifications.write critical_notifications.write emails.write notification_preferences.admin
            autoapprove: true
            override: true
            redirect-uri: "https://notifications-ui.(( $runtime.system_domain ))/sessions/create"
          cloud_controller_username_lookup:
            id: (( .uaa.cloud_controller_username_lookup_credentials.identity ))
            secret: (( .uaa.cloud_controller_username_lookup_credentials.password ))
        scim:
          user:
            override: true
          users:
          - (( admin_credentials.identity ))|(( admin_credentials.password ))|scim.write,scim.read,openid,cloud_controller.admin,dashboard.user,console.admin,console.support,doppler.firehose,notification_preferences.read,notification_preferences.write,notifications.manage,notification_templates.read,notification_templates.write,emails.write,notifications.write
          - (( push_console_credentials.identity ))|(( push_console_credentials.password ))|cloud_controller.admin
          - (( run_smoke_tests_credentials.identity ))|(( run_smoke_tests_credentials.password ))|cloud_controller.admin
          - (( system_services_credentials.identity ))|(( system_services_credentials.password ))|cloud_controller.admin
          - (( system_verification_credentials.identity ))|(( system_verification_credentials.password ))|scim.write,scim.read,openid,cloud_controller.admin,dashboard.user,console.admin,console.support

      ccdb:
        address: (( .ccdb.first_ip ))
        port: 2544
        db_scheme: "postgres"
        roles:
        - tag: admin
          name: (( .ccdb.credentials.identity ))
          password: (( .ccdb.credentials.password ))
        databases:
        - tag: cc
          name: ccdb
          citext: true

      domain: (( $runtime.system_domain ))

      uaadb:
        address: (( .uaadb.first_ip ))
        port: 2544
        db_scheme: postgresql
        roles:
        - tag: admin
          name: (( .uaadb.credentials.identity ))
          password: (( .uaadb.credentials.password ))
        databases:
        - tag: uaa
          name: uaa
      networks:
        apps: default

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        address: (( .nats.first_ip ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_aggregator:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))

  - name: login
    label: Login
    resource_label: Login
    description: Communicates between SAML endpoints and the UAA
    template:
      - login
    release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          min: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

      - name: service_provider_key_credentials
        type: rsa_cert_credentials
        label: Service provider RSA certificate

      - name: sso_url
        type: http_url
        configurable: true
        optional: true

      - name: signups_enabled
        type: boolean
        configurable: true
        default: true

      - name: sso_xml
        type: text
        configurable: true
        optional: true

      - name: sso_name
        type: string
        configurable: true
        optional: true

    manifest: |
      domain: (( $runtime.system_domain ))

      login:
        asset_base_url: '/resources/pivotal'
        tiles:
          - name: Pivotal Dev Console
            login-link:  (( $runtime.console_url ))
            image: "/resources/pivotal/images/dev-console-logo-gray.png"
            image-hover: "/resources/pivotal/images/dev-console-logo-teal.png"

        brand: pivotal
        links:
          home: "https://console.(( $runtime.system_domain ))"
          passwd: "https://console.(( $runtime.system_domain ))/password_resets/new"
          signup: "https://console.(( $runtime.system_domain ))/register"
        uaa_base: (( $runtime.uaa_url ))
        uaa_certificate: (( .ha_proxy.ssl_rsa_certificate.cert_pem ))
        serviceProviderKey: (( service_provider_key_credentials.private_key_pem ))
        serviceProviderCertificate: (( service_provider_key_credentials.cert_pem ))
        spring_profiles: saml,ldap
        idp_entity_alias: sso-sp
        signups_enabled: (( signups_enabled.value ))
        notifications:
          url: "https://notifications.(( $runtime.system_domain ))"
        saml:
          providers:
            (( sso_name.value )):
              nameID: "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"
              idpMetadataXML: (( sso_xml.value ))
              idpMetadataURL: (( sso_url.value ))
              showSamlLoginLink: true
              linkText: (( sso_name.value ))

      uaa:
        clients:
          login:
            secret: (( .uaa.login_client_credentials.password ))

      networks:
        apps: default

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        address: (( .nats.first_ip ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_aggregator:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))

  - name: consoledb
    label: Web Console
    resource_label: Console Database
    description: A Web application will be deployed to Pivotal CF Elastic Runtime at console.your-app-domain for managing applications. These fields are for the console to send invitations and other emails.
    template:
      - postgres
    release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

      - name: credentials
        type: simple_credentials
        label: Database credentials
        default:
          identity: root

    manifest: |
      databases:
        address: (( first_ip ))
        port: 2544
        db_scheme: postgresql
        roles:
        - tag: admin
          name: (( credentials.identity ))
          password: (( credentials.password ))
        databases:
        - tag: console
          name: console
      networks:
        services: default

  - name: mysql_proxy
    label: MySQL Proxy
    resource_label: MySQL Proxy
    description: MySQL Proxy
    template:
      - proxy
    release: cf-mysql

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          min: 0

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

      - name: static_ips
        type: ip_ranges
        configurable: true
        optional: true

      - name: skip_cert_verify
        type: boolean
        configurable: true

      - name: dashboard_credentials
        type: simple_credentials
        label: Proxy Dashboard Credentials
        default:
          identity: admin

    manifest: |
      networks:
        apps: default
      network_name: default
      external_domain: (( .cloud_controller.system_domain.value ))
      haproxy_stats_password: (( dashboard_credentials.password ))
      ha_proxy:
        ssl_pem: (( .ha_proxy.ssl_rsa_certificate.cert_and_private_key_pems ))
      mysql_proxy:
        static_ips: (( static_ips.value ))
      mysql_ips: (( .mysql.ips ))
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        address: (( .nats.first_ip ))
        machines: (( .nats.ips ))
        port: 4222
      syslog_aggregator:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))


  - name: mysql
    label: MySQL Server
    resource_label: MySQL Server
    description: Multi-tenant MySQL server.
    template:
      - mysql
    release: cf-mysql
    max_in_flight: 1
    resource_definitions:
    - name: ram
      type: integer
      label: RAM
      configurable: true
      default: 8192
      constraints:
        min: 4096
    - name: ephemeral_disk
      type: integer
      label: Ephemeral Disk
      configurable: true
      default: 30000
      constraints:
        min: 10000
    - name: persistent_disk
      type: integer
      label: Persistent Disk
      configurable: true
      default: 100000
      constraints:
        min: 10000
    - name: cpu
      type: integer
      label: CPU
      configurable: true
      default: 2
      constraints:
        min: 1
        power_of_two: true
    static_ip: 1
    dynamic_ip: 0
    instance_definitions:
    - name: instances
      type: integer
      label: Instances
      configurable: false
      default: 3
    property_blueprints:
    - name: vm_credentials
      type: salted_credentials
      label: VM credentials
      default:
        identity: vcap
    - name: mysql_admin_credentials
      type: simple_credentials
      label: MySQL root credentials
      default:
        identity: root
    - name: app_usage_credentials
      type: simple_credentials
      label: MySQL App Usage Service Credentials
      default:
        identity: app_usage
    - name: notifications_credentials
      type: simple_credentials
      label: MySQL Notifications Credentials
    - name: autoscale_credentials
      type: simple_credentials
      label: MySQL Notifications Credentials
    - name: max_user_connections
      type: integer
      default: 40
      configurable: true
    manifest: |
        admin_password: (( mysql_admin_credentials.password ))
        cluster_ips: (( .mysql.ips ))
        proxy_ips: []
        innodb_buffer_pool_size: 2147483648
        max_connections: 1500
        max_user_connections: (( max_user_connections.value ))
        network_name: default
        persistent_disk: (( .mysql.persistent_disk ))
        seeded_databases:
          - name: app_usage_service
            username: (( app_usage_credentials.identity ))
            password: (( app_usage_credentials.password ))
          - name: notifications
            username: (( notifications_credentials.identity ))
            password: (( notifications_credentials.password ))
          - name: autoscale
            username: (( autoscale_credentials.identity ))
            password: (( autoscale_credentials.password ))
        syslog_aggregator:
          address: (( ..cf.properties.syslog_host.value ))
          port: (( ..cf.properties.syslog_port.value ))
          transport: (( .properties.syslog_protocol.value ))

  - name: dea
    label: DEA
    resource_label: DEA
    description: Droplet Execution Agents run the applications pushed to Pivotal CF Elastic Runtime
    template:
      - dea_next
      - dea_logging_agent
      - metron_agent
    release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 16_384
        constraints:
          min: 4_096

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 32_768
        constraints:
          min: 10_240

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 2
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 2
        constraints:
          min: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

      - name: loggregator_agent_status_credentials
        type: simple_credentials
        label: Loggregator Agent status credentials

    manifest: |
      networks:
        apps: default
      domain: (( $runtime.system_domain ))

      dea_next:
        directory_server_protocol: https
        memory_mb: (( ram ))
        memory_overcommit_factor: 1
        disk_mb: (( ephemeral_disk ))
        disk_overcommit_factor: 1
        num_instances: 10
        stacks: ["lucid64"]
        evacuation_bail_out_time_in_seconds: 600
        zone: (( availability_zone ))

      etcd:
        machines: (( .etcd_server.ips ))

      metron_agent:
        zone: z1
      metron_endpoint:
        zone: z1
        shared_secret:  (( .doppler.shared_secret_credentials.password ))
      loggregator_endpoint:
        shared_secret:  (( .doppler.shared_secret_credentials.password ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_aggregator:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))

  - name: doppler
    label: Doppler Server
    resource_label: Doppler Server
    description: Doppler server collects application logs
    template:
      - doppler
    release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

      - name: status_credentials
        type: simple_credentials
        label: Loggregator status credentials

      - name: shared_secret_credentials
        type: simple_credentials
        label: Shared secret

    manifest: |
      networks:
        apps: default
      doppler:
        incoming_port: 3456
        outgoing_port: 8081
        maxRetainedLogMessages: 100
        zone: z1
        status:
          user: (( status_credentials.identity ))
          password: (( status_credentials.password ))
          port: 5768

      etcd:
        machines: (( .etcd_server.ips ))

      uaa:
        jwt:
          verification_key: (( .uaa.jwt_signing_key_credentials.public_key_pem ))

      doppler_endpoint:
        shared_secret:  (( .doppler.shared_secret_credentials.password ))

      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

      etcd:
        machines: (( .etcd_server.ips ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        address: (( .nats.first_ip ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_aggregator:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))

  - name: loggregator_trafficcontroller
    label: Loggregator Trafficcontroller
    resource_label: Loggregator Trafficcontroller
    description: Loggregator trafficcontroller distributes requests to Loggregator servers
    template:
      - loggregator_trafficcontroller
    release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

      - name: status_credentials
        type: simple_credentials
        label: Loggregator status credentials

    manifest: |
      networks:
        apps: default
      loggregator:
        doppler_port: 8081

      cc:
        srv_api_uri: (( $runtime.system_api_url ))

      system_domain: (( $runtime.system_domain ))

      loggregator_endpoint:
        shared_secret:  (( .doppler.shared_secret_credentials.password ))
      traffic_controller:
        zone: z1

      etcd:
        machines: (( .etcd_server.ips ))

      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        address: (( .nats.first_ip ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_aggregator:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      doppler:
        uaa_client_id: (( .uaa.doppler_client_credentials.identity ))
      uaa:
        clients:
          doppler:
            secret: (( .uaa.doppler_client_credentials.password ))

  - name: push-console
    label: Push Console
    resource_label: Push Console
    description: Pushes the Pivotal Dev Console application to your Elastic Runtime installation
    template:
      - push-console
    release: push-console-release
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

      - name: secret_token
        type: secret
        label: Secret Token
        configurable: false

    manifest: |
      cf:
        console_subdomain: console
        api_url: (( $runtime.system_api_url ))
        admin_username: (( .uaa.push_console_credentials.identity ))
        admin_password: (( .uaa.push_console_credentials.password ))
        system_domain: (( .cloud_controller.system_domain.value ))
      services:
        authentication:
          CF_CLIENT_ID: (( .uaa.console_client_credentials.identity ))
          CF_CLIENT_SECRET: (( .uaa.console_client_credentials.password ))
          CF_LOGIN_SERVER_URL: (( $runtime.login_url ))
          CF_UAA_SERVER_URL: (( $runtime.uaa_url ))
        smtp:
          address: (( .properties.smtp_address.value ))
          port: (( .properties.smtp_port.value ))
          user_name: (( .properties.smtp_credentials.identity ))
          password: (( .properties.smtp_credentials.password ))
          enable_starttls_auto: (( .properties.smtp_enable_starttls_auto.value ))
      env:
        secret_token: (( secret_token.secret ))
        cf_cc_api_url: (( $runtime.system_api_url ))
        cf_loggregator_http_url: http://loggregator.(( .cloud_controller.system_domain.value )) # this property is not yet used, so this value may be wrong when the time comes
        cf_console_url: (( $runtime.console_url ))
        default_from: (( .properties.smtp_from.value ))
        usage_service_host: app-usage.(( $runtime.system_domain ))
        bundle_without: test development hosted_only
        rack_env: production
        rails_env: production
        show_app_events: true
        on_premise: true
        include_app_statuses_on_org_dashboard: true
      console:
        web_instances: 1
        web_memory: 2G
        workers_memory: 1536MB
        scheduler_memory: 1536MB
      databases:
        console:
          ip: (( .consoledb.first_ip ))
          username: (( .consoledb.credentials.identity ))
          password: (( .consoledb.credentials.password ))

      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
  - name: push-app-usage-service
    label: Push App Usage Service
    resource_label: Push App Usage Service
    description: Monitors usage of an application pushed to your Elastic Runtime installation
    template:
      - push-app-usage-service
    release: push-console-release
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

      - name: secret_token
        type: secret
        label: Secret Token
        configurable: false

      - name: reply_to
        type: email
        configurable: true
        optional: true

      - name: from
        type: email
        configurable: true
        optional: true

      - name: smtp_address
        type: network_address
        configurable: true
        optional: true

      - name: smtp_port
        type: port
        configurable: true
        optional: true

      - name: smtp_credentials
        type: simple_credentials
        configurable: true
        optional: true

      - name: smtp_enable_starttls_auto
        type: boolean
        configurable: true
        default: false

    manifest: |
      cf:
        console_subdomain: console
        api_url: (( $runtime.system_api_url ))
        admin_username: (( .uaa.push_console_credentials.identity ))
        admin_password: (( .uaa.push_console_credentials.password ))
        system_domain: (( .cloud_controller.system_domain.value ))
      services:
        authentication:
          CF_CLIENT_ID: (( .uaa.console_client_credentials.identity ))
          CF_CLIENT_SECRET: (( .uaa.console_client_credentials.password ))
          CF_LOGIN_SERVER_URL: (( $runtime.login_url ))
          CF_UAA_SERVER_URL: (( $runtime.uaa_url ))
        smtp:
          address: (( smtp_address.value ))
          port: (( smtp_port.value ))
          user_name: (( smtp_credentials.identity ))
          password: (( smtp_credentials.password ))
          enable_starttls_auto: (( smtp_enable_starttls_auto.value ))
      env:
        secret_token: (( secret_token.secret ))
        cf_cc_api_url: (( $runtime.system_api_url ))
        cf_loggregator_http_url: http://loggregator.(( .cloud_controller.system_domain.value )) # this property is not yet used, so this value may be wrong when the time comes
        cf_console_url: (( $runtime.console_url ))
        default_reply_to: (( reply_to.value ))
        default_from: (( .properties.smtp_from.value ))
        usage_service_host: app-usage.(( $runtime.system_domain ))
        bundle_without: test development hosted_only
        rack_env: production
        rails_env: production
        show_app_events: true
        on_premise: true
        include_app_statuses_on_org_dashboard: true
      app_usage_service:
        event_fetching_offset: 60
        allow_test_data_creation: false
        allow_viewing_logs: false
      databases:
        app_usage_service:
          name: app_usage_service
          port: 3306
          ip: (( .mysql_proxy.first_ip || .mysql.first_ip ))
          username: (( .mysql.app_usage_credentials.identity ))
          password: (( .mysql.app_usage_credentials.password ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

  - name: smoke-tests
    label: Run Smoke Tests
    resource_label: Run Smoke Tests
    description: Runs Smoke Tests against your Elastic Runtime installation
    template:
      - smoke-tests
    release: cf
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

    manifest: |
      networks:
        apps: default
      smoke_tests:
        api: (( $runtime.system_api_url ))
        apps_domain: (( .cloud_controller.apps_domain.value ))
        user: (( .uaa.run_smoke_tests_credentials.identity ))
        password: (( .uaa.run_smoke_tests_credentials.password ))
        org: CF_SMOKE_TEST_ORG
        space: CF_SMOKE_TEST_SPACE
        skip_ssl_validation: (( .ha_proxy.skip_cert_verify.value ))
        use_existing_org: false
        use_existing_space: false

  - name: notifications
    label: Notifications
    resource_label: Notifications With UI
    description: Notifications release for PCF
    template:
      - deploy-notifications-with-ui
    release: notifications-with-ui
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

      - name: encryption_credentials
        type: simple_credentials

    manifest: |
      domain: (( $runtime.system_domain ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
      notifications_with_ui:
        cf:
          admin_user: (( .uaa.admin_credentials.identity ))
          admin_password: (( .uaa.admin_credentials.password ))
        app_domain: (( .cloud_controller.apps_domain.value ))
        app_subdomain: notifications-ui
        database_url: mysql://(( .mysql.notifications_credentials.identity )):(( .mysql.notifications_credentials.password ))@(( .mysql_proxy.first_ip || .mysql.first_ip )):3306/notifications
        notifications_instance_count: 1
        notifications_ui_instance_count: 1
        network: default
        organization: system
        space: notifications-with-ui
        sender: (( .properties.smtp_from.value ))
        uaa:
          admin_client: (( .uaa.notifications_template_client_credentials.identity ))
          admin_secret: (( .uaa.notifications_template_client_credentials.password ))
          notifications_client_id: notifications
          notifications_client_secret: (( .uaa.notifications_client_credentials.password ))
          notifications_ui_client_id: notifications_ui_client
          notifications_ui_client_secret: (( .uaa.notifications_ui_client_credentials.password ))
        smtp:
          host: (( .properties.smtp_address.value ))
          pass: (( .properties.smtp_credentials.password ))
          port: (( .properties.smtp_port.value ))
          user: (( .properties.smtp_credentials.identity ))
          tls: (( .properties.smtp_enable_starttls_auto.value ))
          auth_mechanism: (( .properties.smtp_auth_mechanism.value ))
          crammd5_secret: (( .properties.smtp_crammd5_secret.value ))
        encryption_key: (( encryption_credentials.password ))

  - name: destroy-notifications
    label: Destroy Notifications
    resource_label: Destroy Notifications With UI
    description: Destroy Notifications release for PCF
    template:
      - destroy-notifications-with-ui
    release: notifications-with-ui
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

    manifest: |
      domain: (( $runtime.system_domain ))
      notifications_with_ui:
        cf:
          admin_user: (( .uaa.admin_credentials.identity ))
          admin_password: (( .uaa.admin_credentials.password ))
        organization: system
        space: notifications-with-ui
        app_domain: (( .cloud_controller.apps_domain.value ))
        app_subdomain: notifications-ui
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

  - name: autoscaling
    label: Deploy CF Autoscaling App
    resource_label: Deploy CF Autoscaling App
    description: Deploys the CF Autoscaling AP
    template:
      - deploy-autoscaling
    release: cf-autoscaling
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 512
        constraints:
          min: 512

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

      - name: broker_credentials
        type: salted_credentials
        label: Broker credentials

      - name: encryption_key
        type: salted_credentials
        label: Autoscaling encryption key

    manifest: |
      app_domains:
        - (( .cloud_controller.apps_domain.value ))
      autoscale:
        broker:
          user: (( broker_credentials.identity ))
          password: (( broker_credentials.password ))
        cf:
          admin_user: (( .uaa.admin_credentials.identity ))
          admin_password: (( .uaa.admin_credentials.password ))
        database_url: mysql://(( .mysql.autoscale_credentials.identity )):(( .mysql.autoscale_credentials.password ))@(( .mysql_proxy.first_ip || .mysql.first_ip )):3306/autoscale
        encryption_key: (( encryption_key.password ))
        notifications_host: "https://notifications.(( $runtime.system_domain ))"
        organization: system
        space: autoscaling
      domain: (( .cloud_controller.system_domain.value ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
      uaa:
        clients:
          autoscaling_service:
            secret: (( .uaa.autoscale_client_credentials.password ))
  - name: autoscaling-register-broker
    label: Register autoscaling service broker
    resource_label: Register autoscaling service broker
    description: Register autoscaling service broker
    template:
      - register-broker
    release: cf-autoscaling
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 512
        constraints:
          min: 512

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

    manifest: |
      app_domains:
        - (( .cloud_controller.apps_domain.value ))
      autoscale:
        broker:
          user: (( .autoscaling.broker_credentials.identity ))
          password: (( .autoscaling.broker_credentials.password ))
        cf:
          admin_user: (( .uaa.admin_credentials.identity ))
          admin_password: (( .uaa.admin_credentials.password ))
        organization: system
        space: autoscaling
      domain: (( .cloud_controller.system_domain.value ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
  - name: autoscaling-destroy-broker
    label: Destroy autoscaling service broker
    resource_label: Destroy autoscaling service broker
    description: Destroy autoscaling service broker
    template:
      - destroy-broker
    release: cf-autoscaling
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 512
        constraints:
          min: 512

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

    manifest: |
      autoscale:
        broker:
          user: (( .autoscaling.broker_credentials.identity ))
          password: (( .autoscaling.broker_credentials.password ))
        cf:
          admin_user: (( .uaa.admin_credentials.identity ))
          admin_password: (( .uaa.admin_credentials.password ))
        organization: system
        space: autoscaling
      domain: (( .cloud_controller.system_domain.value ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

  - name: acceptance-tests
    label: Run CF Acceptance Tests
    resource_label: Run CF Acceptance Tests
    description: Runs CF Acceptance Tests against your Elastic Runtime installation
    template:
      - acceptance-tests
    release: cf
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        label: VM credentials
        default:
          identity: vcap

    manifest: |
      acceptance_tests:
        api: (( $runtime.system_api_url ))
        apps_domain: (( .cloud_controller.apps_domain.value ))
        admin_user: (( .uaa.admin_credentials.identity ))
        admin_password: (( .uaa.admin_credentials.password ))
        include_logging: true
        include_operator: true
        nodes: 3
        skip_ssl_validation: (( .ha_proxy.skip_cert_verify.value ))

  - name: compilation
    label: Compilation
    resource_label: Compilation
    description: Compilation

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 6_144
        constraints:
          min: 6_144

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 2
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        default: 4
        configurable: true
        constraints:
          min: 1

property_blueprints:
  - name: syslog_host
    type: network_address
    configurable: true
    optional: true

  - name: syslog_port
    type: port
    configurable: true
    optional: true

  - name: syslog_protocol
    type: dropdown_select
    label: Networking Protocol
    configurable: true
    optional: true
    options:
      - name: tcp
        label: TCP protocol
      - name: relp
        label: RELP protocol
      - name: udp
        label: UDP protocol

  - name: smtp_from
    type: email
    configurable: true
    optional: true

  - name: smtp_address
    type: network_address
    configurable: true
    optional: true

  - name: smtp_port
    type: port
    configurable: true
    optional: true

  - name: smtp_credentials
    type: simple_credentials
    configurable: true
    optional: true

  - name: smtp_enable_starttls_auto
    type: boolean
    configurable: true
    default: false

  - name: smtp_auth_mechanism
    type: dropdown_select
    label: SMTP Authentication Mechanism
    configurable: true
    optional: true
    options:
      - name: none
        label: None
      - name: plain
        label: Plain
      - name: cram-md5
        label: CRAMMD5

  - name: smtp_crammd5_secret
    type: string
    label: Secret to use with CRAMMD5 auth mechanism
    configurable: true
    optional: true
