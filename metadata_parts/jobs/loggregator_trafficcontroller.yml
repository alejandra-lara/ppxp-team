---
name: loggregator_trafficcontroller
label: Loggregator Trafficcontroller
resource_label: Loggregator Trafficcontroller
description: Loggregator trafficcontroller distributes requests to Loggregator servers
templates:
  - name: consul_agent
    release: consul
  - name: loggregator_trafficcontroller
    release: loggregator
  - name: metron_agent
    release: loggregator
  - name: route_registrar
    release: routing

resource_definitions:
  - name: ram
    type: integer
    label: RAM
    configurable: true
    default: 1_024
    constraints:
      min: 1_024

  - name: ephemeral_disk
    type: integer
    label: Ephemeral Disk
    configurable: true
    default: 2_048
    constraints:
      min: 2_048

  - name: persistent_disk
    type: integer
    label: Persistent Disk
    configurable: false
    default: 0

  - name: cpu
    type: integer
    label: CPU
    configurable: true
    default: 1
    constraints:
      min: 1
      power_of_two: true

static_ip: 0
dynamic_ip: 1
max_in_flight: 1
single_az_only: false

instance_definition:
  name: instances
  type: integer
  label: Instances
  default: 1
  configurable: true
  constraints:
    min: 1

property_blueprints:
  - name: status_credentials
    type: simple_credentials

manifest: |
  loggregator:
    doppler_port: 8081
    etcd:
      client_cert: (( .properties.cf_etcd_client_cert.cert_pem ))
      client_key: (( .properties.cf_etcd_client_cert.private_key_pem ))
  traffic_controller:
    etcd:
      client_cert: (( .properties.cf_etcd_client_cert.cert_pem ))
      client_key: (( .properties.cf_etcd_client_cert.private_key_pem ))
  cc:
    srv_api_uri: "https://api.(( .cloud_controller.system_domain.value ))"
  system_domain: (( .cloud_controller.system_domain.value ))
  ssl:
    skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
  nats:
    user: (( .nats.credentials.identity ))
    password: (( .nats.credentials.password ))
    port: 4222
    machines: (( .nats.ips ))
  syslog_daemon_config:
    address: (( .properties.syslog_host.value ))
    port: (( .properties.syslog_port.value ))
    transport: (( .properties.syslog_protocol.value ))
  metron_agent:
    deployment: cf
    etcd:
      client_cert: (( .properties.cf_etcd_client_cert.cert_pem ))
      client_key: (( .properties.cf_etcd_client_cert.private_key_pem ))
  metron_endpoint:
    shared_secret: (( .doppler.shared_secret_credentials.password ))
  loggregator:
    etcd:
      require_ssl: true
      machines: ['cf-etcd.service.cf.internal']
      ca_cert: (( $ops_manager.ca_certificate ))
  doppler:
    uaa_client_id: (( .uaa.doppler_client_credentials.identity ))
  uaa:
    clients:
      doppler:
        secret: (( .uaa.doppler_client_credentials.password ))
  route_registrar:
    routes:
    - name: doppler
      port: 8081
      registration_interval: 20s
      uris:
      - "doppler.(( .cloud_controller.system_domain.value ))"
    - name: loggregator
      port: 8080
      registration_interval: 20s
      uris:
      - "loggregator.(( .cloud_controller.system_domain.value ))"
  consul:
    encrypt_keys:
    - (( .properties.consul_encrypt_key.value ))
    ca_cert: (( $ops_manager.ca_certificate ))
    agent_cert: (( .properties.consul_agent_cert.cert_pem ))
    agent_key: (( .properties.consul_agent_cert.private_key_pem ))
    server_cert: (( .properties.consul_server_cert.cert_pem ))
    server_key: (( .properties.consul_server_cert.private_key_pem ))
    agent:
      domain: cf.internal
      servers:
        lan: (( .consul_server.ips ))
