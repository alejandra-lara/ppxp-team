---
name: ccdb
label: Cloud Controller Database
resource_label: Cloud Controller Database (Postgres)
description: Stores Cloud Controller information
templates:
  - name: consul_agent
    release: consul
  - name: postgres
    release: postgres
  - name: metron_agent
    release: loggregator

resource_definitions:
  - name: ram
    type: integer
    label: RAM
    configurable: true
    default: 1_024
    constraints:
      min: 1_024

  - name: ephemeral_disk
    type: integer
    label: Ephemeral Disk
    configurable: true
    default: 2_048
    constraints:
      min: 2_048

  - name: persistent_disk
    type: integer
    label: Persistent Disk
    configurable: true
    default: 2_048
    constraints:
      min: 2_048

  - name: cpu
    type: integer
    label: CPU
    configurable: true
    default: 1
    constraints:
      min: 1
      power_of_two: true

static_ip: 1
dynamic_ip: 0
max_in_flight: 1
single_az_only: true

instance_definition:
  name: instances
  type: integer
  label: Instances
  default: 0
  configurable: true
  constraints:
    max: 1
    min: 0
  zero_if:
    property_reference: .properties.system_database
    property_values:
    - external
property_blueprints:
  - name: credentials
    type: simple_credentials
    default:
      identity: admin

manifest: |
  databases:
    address: (( first_ip ))
    port: 2544
    db_scheme: "postgres"
    roles:
    - tag: admin
      name: (( credentials.identity ))
      password: (( credentials.password ))
    databases:
    - tag: cc
      name: ccdb
      citext: true
  syslog_daemon_config:
    address: (( .properties.syslog_host.value ))
    port: (( .properties.syslog_port.value ))
    transport: (( .properties.syslog_protocol.value ))
  metron_agent:
    deployment: cf
    etcd:
      client_cert: (( .properties.cf_etcd_client_cert.cert_pem ))
      client_key: (( .properties.cf_etcd_client_cert.private_key_pem ))
  metron_endpoint:
    shared_secret: (( .doppler.shared_secret_credentials.password ))
  nats:
    user: (( .nats.credentials.identity ))
    password: (( .nats.credentials.password ))
    port: 4222
    machines: (( .nats.ips ))
  loggregator:
    tls:
      ca_cert: (( $ops_manager.ca_certificate ))
      metron:
        cert: (( .doppler.metron_tls_cert.cert_pem ))
        key: (( .doppler.metron_tls_cert.private_key_pem ))
    etcd:
      require_ssl: true
      machines: ['cf-etcd.service.cf.internal']
      ca_cert: (( $ops_manager.ca_certificate ))
  consul:
    encrypt_keys:
    - (( .properties.consul_encrypt_key.value ))
    ca_cert: (( $ops_manager.ca_certificate ))
    agent_cert: (( .properties.consul_agent_cert.cert_pem ))
    agent_key: (( .properties.consul_agent_cert.private_key_pem ))
    agent:
      domain: cf.internal
      servers:
        lan: (( .consul_server.ips ))
