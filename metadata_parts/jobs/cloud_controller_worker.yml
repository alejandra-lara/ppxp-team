---
name: cloud_controller_worker
label: Cloud Controller Worker
resource_label: Cloud Controller Worker
description: Worker for cloud controller asynchronous tasks
templates:
  - name: consul_agent
    release: consul
  - name: cloud_controller_worker
    release: capi
  - name: metron_agent
    release: loggregator

resource_definitions:
  - name: ram
    type: integer
    label: RAM
    configurable: true
    default: 1_024
    constraints:
      min: 1_024

  - name: ephemeral_disk
    type: integer
    label: Ephemeral Disk
    configurable: true
    default: 2_048
    constraints:
      min: 2_048

  - name: persistent_disk
    type: integer
    label: Persistent Disk
    configurable: false
    default: 0

  - name: cpu
    type: integer
    label: CPU
    configurable: true
    default: 1
    constraints:
      min: 1
      power_of_two: true

static_ip: 0
dynamic_ip: 1
max_in_flight: 1
single_az_only: false

instance_definition:
  name: instances
  type: integer
  label: Instances
  configurable: true
  default: 1
  constraints:
    min: 1

property_blueprints:

manifest: |
  domain: (( .cloud_controller.system_domain.value ))
  system_domain: (( .cloud_controller.system_domain.value ))
  system_domain_organization: system
  app_domains: ["(( .cloud_controller.apps_domain.value ))"]

  cc:
    allow_app_ssh_access: (( .cloud_controller.allow_app_ssh_access.value ))
    default_app_ssh_access: (( .cloud_controller.default_app_ssh_access.value ))
    buildpacks: (( .properties.system_blobstore.selected_option.parsed_manifest(ccbuildpack) ))
    droplets: (( .properties.system_blobstore.selected_option.parsed_manifest(ccdroplet) ))
    packages: (( .properties.system_blobstore.selected_option.parsed_manifest(ccpackage) ))
    resource_pool: (( .properties.system_blobstore.selected_option.parsed_manifest(ccresource) ))
    logging_level: debug
    maximum_health_check_timeout: 600
    mutual_tls:
      ca_cert: (( $ops_manager.ca_certificate ))
      public_cert: (( .properties.cloud_controller_mutual_cert.cert_pem ))
      private_key: (( .properties.cloud_controller_mutual_cert.private_key_pem ))
    staging_upload_user: (( .cloud_controller.staging_upload_credentials.identity ))
    staging_upload_password: (( .cloud_controller.staging_upload_credentials.password ))
    bulk_api_password: (( .cloud_controller.bulk_api_credentials.password ))
    db_encryption_key: (( .cloud_controller.encrypt_key.value || .cloud_controller.db_encryption_credentials.password ))
    internal_api_user: (( .cloud_controller.internal_api_user_credentials.identity ))
    internal_api_password: (( .cloud_controller.internal_api_user_credentials.password ))
    quota_definitions:
      default:
        memory_limit: (( .cloud_controller.default_quota_memory_limit_mb.value ))
        total_services: (( .cloud_controller.default_quota_max_number_services.value ))
        non_basic_services_allowed: true
        total_routes: 1000
        trial_db_allowed: true
      runaway:
        memory_limit: 102400
        total_services: -1
        total_routes: 1000
        non_basic_services_allowed: true

    security_group_definitions:
      - name: default_security_group
        rules:
          - protocol: all
            destination: 0.0.0.0-169.253.255.255
          - protocol: all
            destination: 169.255.0.0-255.255.255.255
    default_running_security_groups:
      - default_security_group
    default_staging_security_groups:
      - default_security_group

  ccdb: (( .properties.system_database.selected_option.parsed_manifest(ccdb) ))

  consul:
    encrypt_keys:
    - (( .properties.consul_encrypt_key.value ))
    ca_cert: (( $ops_manager.ca_certificate ))
    agent_cert: (( .properties.consul_agent_cert.cert_pem ))
    agent_key: (( .properties.consul_agent_cert.private_key_pem ))
    agent:
      domain: cf.internal
      servers:
        lan: (( .consul_server.ips ))

  uaa:
    ssl:
      port: 8443
    url: "https://uaa.(( .cloud_controller.system_domain.value ))"
    clients:
      cc-service-dashboards:
        secret: (( .uaa.cc_service_dashboards_credentials.password ))
  login:
    url: "https://login.(( .cloud_controller.system_domain.value ))"

  logger_endpoint:
    port: (( .properties.logger_endpoint_port.value ))
  ssl:
    skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

  nats:
    user: (( .nats.credentials.identity ))
    password: (( .nats.credentials.password ))
    port: 4222
    machines: (( .nats.ips ))
  syslog_daemon_config:
    address: (( .properties.syslog_host.value ))
    port: (( .properties.syslog_port.value ))
    transport: (( .properties.syslog_protocol.value ))
  metron_agent:
    deployment: cf
  metron_endpoint:
    shared_secret: (( .doppler.shared_secret_credentials.password ))
  loggregator:
    tls:
      ca_cert: (( $ops_manager.ca_certificate ))
      metron:
        cert: (( .doppler.metron_tls_cert.cert_pem ))
        key: (( .doppler.metron_tls_cert.private_key_pem ))
  hm9000:
    port: 12345
