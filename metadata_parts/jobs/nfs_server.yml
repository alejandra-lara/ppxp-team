---
name: nfs_server
label: File Storage
resource_label: File Storage
description: Stores droplets and app packages on behalf of Cloud Controller
templates:
  - name: consul_agent
    release: consul
  - name: metron_agent
    release: loggregator
  - name: blobstore
    release: capi
  - name: route_registrar
    release: routing

resource_definitions:
  - name: ram
    type: integer
    label: RAM
    configurable: true
    default: 4_096
    constraints:
      min: 4_096

  - name: ephemeral_disk
    type: integer
    label: Ephemeral Disk
    configurable: true
    default: 8_192
    constraints:
      min: 8_192

  - name: persistent_disk
    type: integer
    label: Persistent Disk
    configurable: true
    default: 102_400
    constraints:
      min: 10_240

  - name: cpu
    type: integer
    label: CPU
    configurable: true
    default: 1
    constraints:
      min: 1
      power_of_two: true

static_ip: 1
dynamic_ip: 0
max_in_flight: 1
serial: true
single_az_only: true

instance_definition:
  name: instances
  type: integer
  label: Instances
  configurable: true
  default: 1
  constraints:
    max: 1
    min: 0
  zero_if:
    property_reference: .properties.system_blobstore
    property_values:
    - external
    - external_gcs

property_blueprints:
  - name: blobstore_credentials
    type: simple_credentials
    default:
      identity: blobstore
  - name: blobstore_secret
    type: secret
    configurable: false
  - name: blobstore_cert
    type: rsa_cert_credentials
    configurable: false
    default:
      domains:
      - blobstore.service.cf.internal
  - name: blobstore_internal_access_rules
    type: string_list
    configurable: true
    default: "allow 10.0.0.0/8;,allow 172.16.0.0/12;,allow 192.168.0.0/16;"

manifest: |
  system_domain: (( .cloud_controller.system_domain.value ))
  syslog_daemon_config:
    address: (( .properties.syslog_host.value ))
    port: (( .properties.syslog_port.value ))
    transport: (( .properties.syslog_protocol.value ))
  metron_agent:
    deployment: cf
    etcd:
      client_cert: (( .properties.cf_etcd_client_cert.cert_pem ))
      client_key: (( .properties.cf_etcd_client_cert.private_key_pem ))
  metron_endpoint:
    shared_secret: (( .doppler.shared_secret_credentials.password ))
  nats:
    user: (( .nats.credentials.identity ))
    password: (( .nats.credentials.password ))
    port: 4222
    machines: (( .nats.ips ))
  loggregator:
    tls:
      ca_cert: (( $ops_manager.ca_certificate ))
      metron:
        cert: (( .doppler.metron_tls_cert.cert_pem ))
        key: (( .doppler.metron_tls_cert.private_key_pem ))
    etcd:
      require_ssl: true
      machines: ['cf-etcd.service.cf.internal']
      ca_cert: (( $ops_manager.ca_certificate ))
  consul:
    encrypt_keys:
    - (( .properties.consul_encrypt_key.value ))
    ca_cert: (( $ops_manager.ca_certificate ))
    agent_cert: (( .properties.consul_agent_cert.cert_pem ))
    agent_key: (( .properties.consul_agent_cert.private_key_pem ))
    agent:
      domain: cf.internal
      services:
        blobstore: {}
      servers:
        lan: (( .consul_server.ips ))
  route_registrar:
    routes:
      - name: blobstore
        port: 8080
        registration_interval: 20s
        tags:
          component: blobstore
        uris:
        - blobstore.(( .cloud_controller.system_domain.value ))
  blobstore:
    admin_users:
    - username: (( blobstore_credentials.identity ))
      password: (( blobstore_credentials.password ))
    secure_link:
      secret: (( blobstore_secret.value ))
    tls:
      cert: (( blobstore_cert.cert_pem ))
      private_key: (( blobstore_cert.private_key_pem ))
    port: 8080
    internal_access_rules: (( blobstore_internal_access_rules.parsed_strings ))
