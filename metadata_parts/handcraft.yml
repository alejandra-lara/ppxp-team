---
metadata_version: '1.5'
provides_product_versions:
- name: cf
  version: 1.6.0.0
product_version: &product_version "1.6.0.0$PRERELEASE_VERSION$"
label: Pivotal Elastic Runtime
description:
  Gives developers the ability to push apps on a dynamically-configured software stack
icon_image: 
rank: 90
serial: false

install_time_verifiers:
  - name: Verifiers::SsoUrlVerifier
    properties:
      url: .uaa.sso_url
  - name: Verifiers::WildcardDomainVerifier
    ignorable: true
    properties:
      domain: .cloud_controller.system_domain
  - name: Verifiers::WildcardDomainVerifier
    ignorable: true
    properties:
      domain: .cloud_controller.apps_domain
  - name: Verifiers::MysqlDatabaseVerifier
    ignorable: true
    properties:
      host: .properties.system_database.external.host
      port: .properties.system_database.external.port
      username: .properties.system_database.external.username
      password: .properties.system_database.external.password
      database: .properties.app_usage_service_database
  - name: Verifiers::MysqlDatabaseVerifier
    ignorable: true
    properties:
      host: .properties.system_database.external.host
      port: .properties.system_database.external.port
      username: .properties.system_database.external.username
      password: .properties.system_database.external.password
      database: .properties.autoscale_database
  - name: Verifiers::MysqlDatabaseVerifier
    ignorable: true
    properties:
      host: .properties.system_database.external.host
      port: .properties.system_database.external.port
      username: .properties.system_database.external.username
      password: .properties.system_database.external.password
      database: .properties.ccdb_database
  - name: Verifiers::MysqlDatabaseVerifier
    ignorable: true
    properties:
      host: .properties.system_database.external.host
      port: .properties.system_database.external.port
      username: .properties.system_database.external.username
      password: .properties.system_database.external.password
      database: .properties.console_database
  - name: Verifiers::MysqlDatabaseVerifier
    ignorable: true
    properties:
      host: .properties.system_database.external.host
      port: .properties.system_database.external.port
      username: .properties.system_database.external.username
      password: .properties.system_database.external.password
      database: .properties.notifications_database
  - name: Verifiers::MysqlDatabaseVerifier
    ignorable: true
    properties:
      host: .properties.system_database.external.host
      port: .properties.system_database.external.port
      username: .properties.system_database.external.username
      password: .properties.system_database.external.password
      database: .properties.uaa_database
  - name: Verifiers::BlobstoreVerifier
    ignorable: true
    properties:
      endpoint: .properties.system_blobstore.external.endpoint
      access_key_id: .properties.system_blobstore.external.access_key
      secret_access_key: .properties.system_blobstore.external.secret_key
      bucket_name: .properties.system_blobstore.external.buildpacks_bucket
  - name: Verifiers::BlobstoreVerifier
    ignorable: true
    properties:
      endpoint: .properties.system_blobstore.external.endpoint
      access_key_id: .properties.system_blobstore.external.access_key
      secret_access_key: .properties.system_blobstore.external.secret_key
      bucket_name: .properties.system_blobstore.external.droplets_bucket
  - name: Verifiers::BlobstoreVerifier
    ignorable: true
    properties:
      endpoint: .properties.system_blobstore.external.endpoint
      access_key_id: .properties.system_blobstore.external.access_key
      secret_access_key: .properties.system_blobstore.external.secret_key
      bucket_name: .properties.system_blobstore.external.packages_bucket
  - name: Verifiers::BlobstoreVerifier
    ignorable: true
    properties:
      endpoint: .properties.system_blobstore.external.endpoint
      access_key_id: .properties.system_blobstore.external.access_key
      secret_access_key: .properties.system_blobstore.external.secret_key
      bucket_name: .properties.system_blobstore.external.resources_bucket

post_deploy_errands:
  - name: push-apps-manager
  - name: smoke-tests
  - name: push-app-usage-service
  - name: notifications
  - name: notifications-ui
  - name: autoscaling
  - name: autoscaling-register-broker

form_types:
  - name: system_database
    label: System Database Config
    description: Configurations should only be made on the initial installation of Elastic Runtime (do NOT change anything on this section when upgrading). Once Elastic Runtime is installed, a manual data migration is required in order to change this configuration safely. Consult Pivotal Cloud Foundry documentation for details.
    verifiers:
      - name: Verifiers::MysqlDatabaseVerifier
        properties:
          host: .properties.system_database.external.host
          port: .properties.system_database.external.port
          username: .properties.system_database.external.username
          password: .properties.system_database.external.password
          database: .properties.app_usage_service_database
      - name: Verifiers::MysqlDatabaseVerifier
        properties:
          host: .properties.system_database.external.host
          port: .properties.system_database.external.port
          username: .properties.system_database.external.username
          password: .properties.system_database.external.password
          database: .properties.autoscale_database
      - name: Verifiers::MysqlDatabaseVerifier
        properties:
          host: .properties.system_database.external.host
          port: .properties.system_database.external.port
          username: .properties.system_database.external.username
          password: .properties.system_database.external.password
          database: .properties.ccdb_database
      - name: Verifiers::MysqlDatabaseVerifier
        properties:
          host: .properties.system_database.external.host
          port: .properties.system_database.external.port
          username: .properties.system_database.external.username
          password: .properties.system_database.external.password
          database: .properties.console_database
      - name: Verifiers::MysqlDatabaseVerifier
        properties:
          host: .properties.system_database.external.host
          port: .properties.system_database.external.port
          username: .properties.system_database.external.username
          password: .properties.system_database.external.password
          database: .properties.notifications_database
      - name: Verifiers::MysqlDatabaseVerifier
        properties:
          host: .properties.system_database.external.host
          port: .properties.system_database.external.port
          username: .properties.system_database.external.username
          password: .properties.system_database.external.password
          database: .properties.uaa_database
    property_inputs:
    - reference: .properties.system_database
      label: "Configure your system's databases"
      selector_property_inputs:
      - reference: .properties.system_database.internal
        label: Internal Databases - MySQL and Postgres (the Postgres DBs are not highly-available, but this selection is required if you want to keep your system data from a pre-1.6.0 Elastic Runtime that you upgraded)
      - reference: .properties.system_database.internal_mysql
        label: Internal Databases - MySQL (preferred for enabling complete high-availability)
      - reference: .properties.system_database.external
        label: External Databases (preferred if, for example, you can use AWS RDS)
        property_inputs:
          - reference: .properties.system_database.external.host
            label: Hostname DNS Name
          - reference: .properties.system_database.external.port
            label: TCP Port
          - reference: .properties.system_database.external.username
            label: Username
          - reference: .properties.system_database.external.password
            label: Password

  - name: system_blobstore
    label: File Storage Config
    description: "Configurations should only be made on the initial installation of Elastic Runtime (do NOT change anything on this section when upgrading). Once Elastic Runtime is installed, a manual data migration is required in order to change this configuration safely. Consult Pivotal Cloud Foundry documentation for details."
    verifiers:
      - name: Verifiers::BlobstoreVerifier
        properties:
          endpoint: .properties.system_blobstore.external.endpoint
          access_key_id: .properties.system_blobstore.external.access_key
          secret_access_key: .properties.system_blobstore.external.secret_key
          bucket_name: .properties.system_blobstore.external.buildpacks_bucket
      - name: Verifiers::BlobstoreVerifier
        properties:
          endpoint: .properties.system_blobstore.external.endpoint
          access_key_id: .properties.system_blobstore.external.access_key
          secret_access_key: .properties.system_blobstore.external.secret_key
          bucket_name: .properties.system_blobstore.external.droplets_bucket
      - name: Verifiers::BlobstoreVerifier
        properties:
          endpoint: .properties.system_blobstore.external.endpoint
          access_key_id: .properties.system_blobstore.external.access_key
          secret_access_key: .properties.system_blobstore.external.secret_key
          bucket_name: .properties.system_blobstore.external.packages_bucket
      - name: Verifiers::BlobstoreVerifier
        properties:
          endpoint: .properties.system_blobstore.external.endpoint
          access_key_id: .properties.system_blobstore.external.access_key
          secret_access_key: .properties.system_blobstore.external.secret_key
          bucket_name: .properties.system_blobstore.external.resources_bucket
    property_inputs:
    - reference: .properties.system_blobstore
      label: "Configure your Cloud Controller's filesystem"
      selector_property_inputs:
      - reference: .properties.system_blobstore.internal
        label: Internal
        description:
      - reference: .properties.system_blobstore.external
        label: External S3-Compatible Filestore
        description:
        property_inputs:
          - reference: .properties.system_blobstore.external.endpoint
            label: URL Endpoint
            description: URL endpoint of your S3-compatible blobstore
          - reference: .properties.system_blobstore.external.access_key
            label: Access Key
          - reference: .properties.system_blobstore.external.secret_key
            label: Secret Key
          - reference: .properties.system_blobstore.external.buildpacks_bucket
            label: Buildpacks Bucket Name
            description: Bucket where the app buildpacks will be located.
          - reference: .properties.system_blobstore.external.droplets_bucket
            label: Droplets Bucket Name
            description: Bucket where the app droplets will be located. You can re-use the same bucket as above, however it is recommended to use different buckets if this is a new installation of Elastic Runtime.
          - reference: .properties.system_blobstore.external.packages_bucket
            label: Packages Bucket Name
            description: Bucket where the app packages will be located. You can re-use the same bucket as above, however it is recommended to use different buckets if this is a new installation of Elastic Runtime.
          - reference: .properties.system_blobstore.external.resources_bucket
            label: Resources Bucket Name
            description: Bucket where the app resources will be located. You can re-use the same bucket as above, however it is recommended to use different buckets if this is a new installation of Elastic Runtime.

  - name: ha_proxy
    label: IPs and Ports
    description: |
      HAProxy is the default load balancer for SSL termination. Alternatively,
      you can use your own load balancer and forward traffic to the Cloud
      Foundry router IP.
    verifiers:
      - name: Verifiers::StaticIpsVerifier
    property_inputs:
      - reference: .router.static_ips
        label: Router IPs
        description: "Enter the IP address(es) for the Pivotal CF Elastic Runtime Router. This IP must be in your subnet."
      - reference: .ha_proxy.static_ips
        label: HAProxy IPs
        description: "Enter the IP address(es) for HAProxy. You must point your DNS to this IP unless you are using your own load balancer. HAProxy's IP must be in your subnet."
      - reference: .properties.logger_endpoint_port
        label: Loggregator Port
        description: "Default is 443. Enter a new value to override the default"

  - name: security_config
    label: Security Config
    description: Configure security settings
    property_inputs:
      - reference: .ha_proxy.ssl_rsa_certificate
        label: SSL Termination Certificate
        description: "This certificate is used by HAProxy and Router for SSL termination. You can generate a self-signed certificate with your system wildcard domain if you do not have a certificate available. If you use your own external load balancer to terminate SSL instead of HAProxy or the Router, you can enter any certificate and key pair here and scale down the instances of HAProxy to zero in the Resource Config section."
      - reference: .ha_proxy.skip_cert_verify
        label: Trust Self-Signed Certificates
      - reference: .ha_proxy.ssl_ciphers
        label: HAProxy SSL Ciphers
        description: "HAProxy ciphers should use dashes in their names, e.g. ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384"
      - reference: .router.ssl_ciphers
        label: Router SSL Ciphers
        description: Router ciphers are read in Golang and should use underscores instead of dashes in their names e.g. TLS_RSA_WITH_RC4_128_SHA:TLS_RSA_WITH_AES_128_CBC_SHA
      - reference: .ha_proxy.disable_http
        label: Disable HTTP traffic to HAProxy
        description: "Allows only HTTPS traffic to HAProxy and turns on secure flag for cookies generated by Router."
      - reference: .uaa.disable_http
        label: Disable HTTP traffic to UAA
        description: "Allows only HTTPS traffic to UAA"
      - reference: .properties.allow_cross_container_traffic
        label: Enable cross-container traffic
        description: Not recommended for untrusted workloads
      - reference: .router.enable_ssl
        label: Enable TLS on the Router
        description: Disable only if your load-balancer does not send HTTPS traffic to the Router

  - name: mysql_proxy
    label: MySQL Proxy Config
    description: "A proxy tier routes MySQL connections from internal components to healthy cluster nodes. Configure DNS and/or your own load balancer to point to multiple proxy instances for increased availability. TCP healthchecks can be configured against port 1936."
    property_inputs:
      - reference: .mysql_proxy.static_ips
        label: MySQL Proxy IPs
        description: "Enter the IP address(es) for the MySQL proxy instances configured on your external load balancer."
      - reference: .mysql_proxy.service_hostname
        label: MySQL Service Hostname
        description: "In order to remove the proxy as a SPOF, a load balancer should be configured to route application connections to multiple proxy instances. Enter a IP or hostname that resolves to this load balancer; components which use the MySQL service will be configured to use this hostname to reach their databases. If this field is blank, components will be configured with the IP of the first proxy instance."

  - name: cloud_controller
    verifiers:
      - name: Verifiers::WildcardDomainVerifier
        properties:
          domain: .cloud_controller.system_domain
      - name: Verifiers::WildcardDomainVerifier
        properties:
          domain: .cloud_controller.apps_domain
    label: Cloud Controller
    description: Coordinates Pivotal CF Elastic Runtime application lifecycles
    property_inputs:
      - reference: .cloud_controller.system_domain
        label: System Domain
        description: "This domain is used to target and push apps to Pivotal CF Elastic Runtime (ex: api.my-cf.com). You must set up a wildcard DNS record for this domain that points to the router static IP(s) or a load balancer."
      - reference: .cloud_controller.apps_domain
        label: Apps Domain
        description: This field specifies a default apps domain for Pivotal CF Elastic Runtime. Use the command line interface to delete domains.
      - reference: .cloud_controller.encrypt_key
        label: Cloud Controller DB Encryption Key
        description: "Leave blank unless restoring a Cloud Controller Database exported from a previous installation."
      - reference: .cloud_controller.max_file_size
        label: Maximum File Upload Size (MB)
        description: This value limits the size of an application upload.
      - reference: .cloud_controller.disable_custom_buildpacks
        label: Disable Custom Buildpacks
      - reference: .cloud_controller.default_quota_memory_limit_mb
        label: Default Quota App Memory (MB)
        description: Memory limit for all apps in an org using the default quota. For initial install only. Use the CLI to manage quotas.
      - reference: .cloud_controller.default_quota_max_number_services
        label: Default Quota Service Instances
        description: Maximum allowed number of service instances in an org using the default quota. For initial install only. Use the CLI to manage quotas.

  - name: syslog_aggregator
    label: System Logging
    description: Configure system logging. Leave the External Syslog fields blank unless you wish to use an external syslogd server.
    property_inputs:
      - reference: .properties.syslog_host
        label: External Syslog Aggregator Host IP
        description: The host must be reachable from the Elastic Runtime network, accept TCP, UDP or RELP connections, and use the RELP protocol (e.g. rsyslogd).
      - reference: .properties.syslog_port
        label: External Syslog Aggregator Port
        description: The typical syslogd port is 514. Ensure syslogd is listening on external interfaces.
      - reference: .properties.syslog_protocol
        label: External Syslog Network Protocol
        description: Transport to be used when forwarding logs
      - reference: .doppler.message_brain_buffer_size
        label: "Syslog Drain Buffer Size (# of messages)"
        description: "Sets the buffer size on Doppler before dropping log messages. Note that a larger buffer size has the potential to overload the system."

  - name: uaa_sso
    label: SSO Config
    description: Configure Identity Provider
    verifiers:
      - name: Verifiers::SsoUrlVerifier
        properties:
          url: .uaa.sso_url
    property_inputs:
      - reference: .uaa.sso_name
        label: Provider Name
        description: "Name of Identity Provider. Allowed characters are alphanumeric, _, and -."
      - reference: .uaa.sso_xml
        label: Provider Metadata
        description: "Metadata XML content for the Identity Provider"
      - reference: .uaa.sso_url
        label: "(OR) Provider Metadata URL"
        description: "Enter an SSO endpoint. This address will be used by the User Account and Authentication server. Note: Your SSO endpoint must provide metadata."

  - name: login_ldap
    label: LDAP Config
    description: Configure an LDAP endpoint for the UAA
    verifiers:
      - name: Verifiers::LDAPBindVerifier
        properties:
          url: .uaa.ldap_url
          credentials: .uaa.credentials
    property_inputs:
      - reference: .uaa.ldap_url
        label: Server URL
        description: 'Required for LDAP. Must start with ldap:// or ldaps://'
      - reference: .uaa.credentials
        label: LDAP Credentials
        description:  Required for LDAP. This is the unique username and password for binding to the server
      - reference: .uaa.ldap_search_base
        label: User Search Base
        description: 'Required for LDAP. Example ou=Users,dc=example,dc=com'
      - reference: .uaa.ldap_search_filter
        label: User Search Filter
        description: "Required for LDAP. Replace {0} with username."
      - reference: .properties.group_search
        label: Admin Groups
        description:
        selector_property_inputs:
        - reference: .properties.group_search.no_groups
          label: No Groups
        - reference: .properties.group_search.enable_admin_groups
          label: Enable Admin Groups
          property_inputs:
            - reference: .properties.group_search.enable_admin_groups.ldap_group_search_base
              label: Group Search Base
              description: 'Required if mapping LDAP groups to Admin role. Example ou=Groups,dc=example,dc=com'
            - reference: .properties.group_search.enable_admin_groups.ldap_group_search_filter
              label: Group Search Filter
              description: 'Required if mapping LDAP groups to Admin role. Replace {0} with user DN.'
      - reference: .uaa.ldap_server_ssl_cert
        label: Server SSL Cert
        description: 'Required only for ldaps://. This is the server certificate if using a Self Signed Certificate'
      - reference: .uaa.ldap_server_ssl_cert_alias
        label: Server SSL Cert AltName
        description: "Required only for ldaps:// + using a Self Signed Certificate"
      - reference: .uaa.ldap_mail_attribute_name
        label: Email Attribute
        description: "The name of the attribute that contains the user's email address"

  - name: smtp_config
    label: SMTP Config
    description: Configuration for Simple Mail Transfer Protocol
    property_inputs:
      - reference: .properties.smtp_from
        label: From Email
        description: The email address from which emails are sent.
      - reference: .properties.smtp_address
        label: Address of SMTP Server
        description: The SMTP address of the server that will send emails.
      - reference: .properties.smtp_port
        label: Port of SMTP Server
        description: The port of the SMTP server that will send emails.
      - reference: .properties.smtp_credentials
        label: SMTP Server Credentials
        description: The credentials for the SMTP server that will send emails.
      - reference: .properties.smtp_enable_starttls_auto
        label: SMTP Enable Automatic STARTTLS
      - reference: .properties.smtp_auth_mechanism
        label: SMTP Authentication Mechanism
      - reference: .properties.smtp_crammd5_secret
        label: SMTP CRAMMD5 secret

  - name: diego
    label: Diego
    description: Diego is a new replacement for DEAs.
    property_inputs:
      - reference: .cloud_controller.default_to_diego_backend
        label: Use Diego by default instead of DEAs
      - reference: .cloud_controller.allow_app_ssh_access
        label: Allow SSH access to apps
        description: Enables SSH into app containers running on Diego.

  - name: experimental_features
    label: Experimental Features
    description: There are no features currently in experimental state. Check back in future releases for new experimental features.

job_types:
  - name: nats
    label: NATS
    resource_label: NATS
    description: Acts as the Pivotal CF Elastic Runtime message bus
    templates:
      - name: nats
        release: cf
      - name: metron_agent
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024
          max: 3_000 # monit will restart when > 3000

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          min: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

      - name: credentials
        type: simple_credentials
        default:
          identity: nats

    manifest: |
      nats:
        user: (( credentials.identity ))
        password: (( credentials.password ))
        address: (( first_ip ))
        machines: (( ips ))
        port: 4222
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      etcd:
        machines: (( .etcd_server.ips ))

  - name: consul_server
    label: consul
    resource_label: consul
    description:
    templates:
      - name: consul_agent
        release: cf
      - name: metron_agent
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 1024

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          min: 1
          may_only_be_odd_or_zero: true

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

    manifest: |
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      etcd:
        machines: (( .etcd_server.ips ))
      consul:
        require_ssl: false
        agent:
          mode: server
          servers:
            lan: (( .consul_server.ips ))

  - name: etcd_server
    label: etcd
    resource_label: etcd
    description: An etcd cluster node, which maintains the state of applications, and its metrics server
    templates:
      - name: etcd
        release: cf
      - name: etcd_metrics_server
        release: cf
      - name: metron_agent
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          min: 1
          may_only_be_odd_or_zero: true

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

    manifest: |
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      etcd:
        machines: (( ips ))
      etcd_metrics_server:
        nats:
          username: (( .nats.credentials.identity ))
          password: (( .nats.credentials.password ))
          machines: (( .nats.ips ))

  - name: diego_etcd
    label: Diego etcd
    resource_label: Diego etcd
    description: An etcd cluster node for Diego
    templates:
      - name: etcd
        release: diego
      - name: bbs
        release: diego
      - name: consul_agent
        release: cf
      - name: metron_agent
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          min: 1
          may_only_be_odd_or_zero: true

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

    manifest: |
      diego:
        bbs:
          auctioneer:
            api_url: http://auctioneer.service.cf.internal:9016
          etcd:
            machines: ['etcd.service.cf.internal']
            require_ssl: false
            ca_cert: "foo"
            client_cert: "bar"
            client_key: "baz"
        etcd:
          machines: ['etcd.service.cf.internal']
          cluster:
            - name:  (( name ))-partition-(( availability_zone ))
              instances: (( instances ))
          require_ssl: false
          ca_cert: "foo"
          client_cert: "bar"
          client_key: "baz"
          peer_require_ssl: false
          peer_ca_cert: "foo"
          peer_cert: "bar"
          peer_key: "baz"
      consul:
        require_ssl: false
        agent:
          servers:
            lan: (( .consul_server.ips ))
          services:
            bbs: {}
            etcd: {}
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      etcd:
        machines: (( .etcd_server.ips ))

  - name: nfs_server
    label: NFS Server
    resource_label: NFS Server
    description: Stores droplets and app packages on behalf of Cloud Controller
    templates:
      - name: debian_nfs_server
        release: cf
      - name: metron_agent
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 102_400
        constraints:
          min: 10_240

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          max: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

    manifest: |
      nfs_server:
        allow_from_entries:
        - (( .cloud_controller.first_network_deprecated ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      etcd:
        machines: (( .etcd_server.ips ))

  - name: router
    label: Router
    resource_label: Router
    description: Routers route Internet traffic to applications and between Pivotal CF Elastic Runtime components.
    templates:
      - name: gorouter
        release: cf
      - name: metron_agent
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          min: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

      - name: status_credentials
        type: simple_credentials
        default:
          identity: router_status

      - name: static_ips
        type: ip_ranges
        configurable: true
        optional: true

      - name: ssl_ciphers
        type: text
        configurable: true
        optional: true

      - name: enable_ssl
        type: boolean
        configurable: true
        default: true

    manifest: |
      request_timeout_in_seconds: 900
      networks:
        apps: default
      router:
        secure_cookies: (( .ha_proxy.disable_http.value ))
        status:
          user: router_status
          password: (( status_credentials.password ))
        cipher_suites: (( ssl_ciphers.value ))
        enable_ssl: (( enable_ssl.value ))
        ssl_cert: (( .ha_proxy.ssl_rsa_certificate.cert_pem ))
        ssl_key: (( .ha_proxy.ssl_rsa_certificate.private_key_pem ))

      metron_endpoint:
        shared_secret:  (( .doppler.shared_secret_credentials.password ))
      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      etcd:
        machines: (( .etcd_server.ips ))
      uaa:
        clients:
          gorouter:
            secret: (( .uaa.gorouter_client_credentials.password ))

  - name: mysql_proxy
    label: MySQL Proxy
    resource_label: MySQL Proxy
    description: MySQL Proxy
    templates:
      - name: proxy
        release: cf-mysql

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 4_096
        constraints:
          min: 4_096

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          min: 0

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

      - name: static_ips
        type: ip_ranges
        configurable: true
        optional: true

      - name: service_hostname
        type: network_address
        configurable: true
        optional: true

      - name: dashboard_credentials
        type: simple_credentials
        default:
          identity: admin

    manifest: |
      network_name: default
      external_host: "p-mysql.internal.(( .cloud_controller.system_domain.value ))"
      proxy:
        api_password: (( dashboard_credentials.password ))
        api_username: (( dashboard_credentials.identity ))
      cluster_ips: (( .mysql.ips ))
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        machines: (( .nats.ips ))
        port: 4222
      syslog_aggregator:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))

  - name: mysql
    label: MySQL Server
    resource_label: MySQL Server
    description: Multi-tenant MySQL server.
    templates:
      - name: mysql
        release: cf-mysql
    max_in_flight: 1
    resource_definitions:
    - name: ram
      type: integer
      label: RAM
      configurable: true
      default: 8192
      constraints:
        min: 4096
    - name: ephemeral_disk
      type: integer
      label: Ephemeral Disk
      configurable: true
      default: 30000
      constraints:
        min: 10000
    - name: persistent_disk
      type: integer
      label: Persistent Disk
      configurable: true
      default: 100000
      constraints:
        min: 10000
    - name: cpu
      type: integer
      label: CPU
      configurable: true
      default: 2
      constraints:
        min: 1
        power_of_two: true
    static_ip: 1
    dynamic_ip: 0
    instance_definitions:
    - name: instances
      type: integer
      label: Instances
      configurable: true
      default: 1
      constraints:
        may_only_be_odd_or_zero: true
    property_blueprints:
    - name: vm_credentials
      type: salted_credentials
      default:
        identity: vcap
    - name: mysql_admin_credentials
      type: simple_credentials
      default:
        identity: root
    - name: app_usage_credentials
      type: simple_credentials
      default:
        identity: app_usage
    - name: notifications_credentials
      type: simple_credentials
    - name: autoscale_credentials
      type: simple_credentials
    - name: ccdb_credentials
      type: simple_credentials
    - name: uaadb_credentials
      type: simple_credentials
    manifest: |
      admin_password: (( mysql_admin_credentials.password ))
      cluster_ips: (( .mysql.ips ))
      innodb_buffer_pool_size: 2147483648
      max_connections: 1500
      network_name: default
      seeded_databases:
        - name: ccdb
          username: (( ccdb_credentials.identity ))
          password: (( ccdb_credentials.password ))
        - name: uaa
          username: (( uaadb_credentials.identity ))
          password: (( uaadb_credentials.password ))
        - name: app_usage_service
          username: (( app_usage_credentials.identity ))
          password: (( app_usage_credentials.password ))
        - name: notifications
          username: (( notifications_credentials.identity ))
          password: (( notifications_credentials.password ))
        - name: autoscale
          username: (( autoscale_credentials.identity ))
          password: (( autoscale_credentials.password ))
      syslog_aggregator:
        address: (( ..cf.properties.syslog_host.value ))
        port: (( ..cf.properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))

  - name: ccdb
    label: Cloud Controller Database
    resource_label: Cloud Controller Database
    description: Stores Cloud Controller information
    templates:
      - name: postgres
        release: cf
      - name: metron_agent
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        default: 1
        configurable: true
        constraints:
          max: 1
    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

      - name: credentials
        type: simple_credentials
        default:
          identity: admin

    manifest: |
      databases:
        address: (( first_ip ))
        port: 2544
        db_scheme: "postgres"
        roles:
        - tag: admin
          name: (( credentials.identity ))
          password: (( credentials.password ))
        databases:
        - tag: cc
          name: ccdb
          citext: true
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      etcd:
        machines: (( .etcd_server.ips ))

  - name: uaadb
    label: UAA Database
    resource_label: UAA Database
    description: Stores user information for the UAA
    templates:
      - name: postgres
        release: cf
      - name: metron_agent
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 8_192
        constraints:
          min: 8_192

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        constraints:
          max: 1
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

      - name: credentials
        type: simple_credentials
        default:
          identity: root

    manifest: |
      databases:
        address: (( first_ip ))
        port: 2544
        db_scheme: postgresql
        roles:
        - tag: admin
          name: (( credentials.identity ))
          password: (( credentials.password ))
        databases:
        - tag: uaa
          name: uaa
      networks:
        services: default
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      etcd:
        machines: (( .etcd_server.ips ))

  - name: consoledb
    label: Apps Manager Database
    resource_label: Apps Manager Database
    description: Apps Manager Database
    templates:
      - name: postgres
        release: cf
      - name: metron_agent
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        constraints:
          max: 1
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

      - name: credentials
        type: simple_credentials
        default:
          identity: root

    manifest: |
      databases:
        address: (( first_ip ))
        port: 2544
        db_scheme: postgresql
        roles:
        - tag: admin
          name: (( credentials.identity ))
          password: (( credentials.password ))
        databases:
        - tag: console
          name: console
      networks:
        services: default
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      etcd:
        machines: (( .etcd_server.ips ))

  - name: cloud_controller
    label: Cloud Controller
    resource_label: Cloud Controller
    description: Coordinates Pivotal CF Elastic Runtime application lifecycles
    templates:
      - name: cloud_controller_ng
        release: cf
      - name: metron_agent
        release: cf
      - name: consul_agent
        release: cf
      - name: route_registrar
        release: cf
      - name: nfs_mounter
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 4_096
        constraints:
          min: 4_096

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 20_480
        constraints:
          min: 20_480

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1
    serial: true

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          min: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

      - name: staging_upload_credentials
        type: simple_credentials
        default:
          identity: staging_upload_user

      - name: bulk_api_credentials
        type: simple_credentials
        default:
          identity: bulk_api

      - name: db_encryption_credentials
        type: simple_credentials
        default:
          identity: db_encryption

      - name: encrypt_key
        type: secret
        configurable: true
        optional: true

      - name: max_file_size
        type: integer
        configurable: true
        optional: false
        default: 1024
        constraints:
          min: 1024
          max: 2048

      - name: disable_custom_buildpacks
        type: boolean
        configurable: true
        optional: false

      - name: system_domain
        type: wildcard_domain
        configurable: true

      - name: apps_domain
        type: wildcard_domain
        configurable: true

      - name: default_quota_memory_limit_mb
        type: integer
        configurable: true
        default: 10240
        constraints:
          min: 10240
          max: 102400

      - name: default_quota_max_number_services
        type: integer
        configurable: true
        default: 100
        constraints:
          min: 0
          max: 1000

      - name: default_to_diego_backend
        type: boolean
        configurable: true
        default: true

      - name: allow_app_ssh_access
        type: boolean
        configurable: true
        default: true

    manifest: |
      app_ssh:
        host_key_fingerprint: (( .diego_brain.ssh_host_key.public_key_fingerprint ))
      domain: (( .cloud_controller.system_domain.value ))
      system_domain: (( .cloud_controller.system_domain.value ))
      system_domain_organization: system
      app_domains: ["(( .cloud_controller.apps_domain.value ))"]
      support_address: https://support.pivotal.io

      route_registrar:
        routes:
        - name: api
          port: 9022
          uris:
          - "api.(( .cloud_controller.system_domain.value ))"

      cc:
        allow_app_ssh_access: (( .cloud_controller.allow_app_ssh_access.value ))
        default_to_diego_backend: (( default_to_diego_backend.value ))
        buildpacks: (( .properties.system_blobstore.selected_option.parsed_manifest(ccbuildpack) ))
        droplets: (( .properties.system_blobstore.selected_option.parsed_manifest(ccdroplet) ))
        service_name: cloud-controller-ng
        external_protocol: https
        packages: (( .properties.system_blobstore.selected_option.parsed_manifest(ccpackage) ))
        resource_pool: (( .properties.system_blobstore.selected_option.parsed_manifest(ccresource) ))
        bootstrap_admin_email: admin
        bulk_api_password: (( bulk_api_credentials.password ))
        client_max_body_size: (( max_file_size.value ))M
        db_encryption_key: (( encrypt_key.value || db_encryption_credentials.password ))
        default_running_security_groups:
          - all_open
        default_staging_security_groups:
          - all_open
        disable_custom_buildpacks: (( disable_custom_buildpacks.value ))
        external_host: api
        install_buildpacks:
          - name: staticfile_buildpack
            package: buildpack_staticfile
          - name: java_buildpack_offline
            package: buildpack_java_offline
          - name: ruby_buildpack
            package: buildpack_ruby
          - name: nodejs_buildpack
            package: buildpack_nodejs
          - name: go_buildpack
            package: buildpack_go
          - name: python_buildpack
            package: buildpack_python
          - name: php_buildpack
            package: buildpack_php
          - name: binary_buildpack
            package: buildpack_binary
        internal_api_user: (( .health_manager.internal_api_user_credentials.identity ))
        internal_api_password: (( .health_manager.internal_api_user_credentials.password ))
        logging_level: debug
        maximum_health_check_timeout: 600
        quota_definitions:
          default:
            memory_limit: (( default_quota_memory_limit_mb.value ))
            total_services: (( default_quota_max_number_services.value ))
            non_basic_services_allowed: true
            total_routes: 1000
            trial_db_allowed: true
          runaway:
            memory_limit: 102400
            total_services: -1
            total_routes: 1000
            non_basic_services_allowed: true
        security_group_definitions:
          - name: all_open
            rules:
              - protocol: all
                destination: 0.0.0.0-255.255.255.255
        stacks:
          - name: cflinuxfs2
            description: Cloud Foundry Linux-based filesystem
          - name: windows2012R2
            description: "Microsoft Windows / .Net 64 bit"
        staging_upload_user: (( staging_upload_credentials.identity ))
        staging_upload_password: (( staging_upload_credentials.password ))
        tasks_disabled: true
        uaa_resource_id: cloud_controller,cloud_controller_service_permissions
        min_cli_version: 6.7.0
        min_recommended_cli_version: 6.11.2

      ccdb: (( .properties.system_database.selected_option.parsed_manifest(ccdb) ))

      consul:
        require_ssl: false
        agent:
          services:
            cloud_controller_ng: {}
          servers:
            lan: (( .consul_server.ips ))

      nfs_server:
        address: (( .nfs_server.first_ip ))

      uaa:
        url: "https://uaa.(( .cloud_controller.system_domain.value ))"
        jwt:
          verification_key: (( .uaa.jwt_signing_key_credentials.public_key_pem ))
        clients:
          cc-service-dashboards:
            scope: cloud_controller.write,openid,cloud_controller.read,cloud_controller_service_permissions.read
            secret: (( .uaa.cc_service_dashboards_credentials.password ))
          cloud_controller_username_lookup:
            secret: (( .uaa.cloud_controller_username_lookup_credentials.password ))
      login:
        url: "https://login.(( .cloud_controller.system_domain.value ))"

      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

      logger_endpoint:
        port: (( .properties.logger_endpoint_port.value || "443" ))
      doppler:
        port: (( .properties.logger_endpoint_port.value || "443" ))
      metron_endpoint:
        shared_secret:  (( .doppler.shared_secret_credentials.password ))
      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      etcd:
        machines: (( .etcd_server.ips ))

  - name: ha_proxy
    label: HAProxy
    resource_label: HAProxy
    description: HAProxy is the default load balancer for SSL termination. Alternatively, you can use your own load balancer and forward traffic to the Pivotal CF Elastic Runtime router IP. Self signed certificates will function properly.
    templates:
      - name: haproxy
        release: cf
      - name: metron_agent
        release: cf
      - name: consul_agent
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          min: 0

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

      - name: static_ips
        type: ip_ranges
        configurable: true
        optional: true

      - name: ssl_rsa_certificate
        type: rsa_cert_credentials
        configurable: true
        optional: false

      - name: skip_cert_verify
        type: boolean
        configurable: true

      - name: disable_http
        type: boolean
        configurable: true
        default: false

      - name: ssl_ciphers
        type: text
        configurable: true
        optional: true

    manifest: |
      ha_proxy:
        disable_http: (( disable_http.value ))
        ssl_ciphers: (( ssl_ciphers.value ))
        ssl_pem: (( ssl_rsa_certificate.cert_and_private_key_pems ))
      router:
        servers:
          z1: (( .router.ips ))
          z2: []
      cc:
        allow_app_ssh_access: (( .cloud_controller.allow_app_ssh_access.value ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      etcd:
        machines: (( .etcd_server.ips ))
      consul:
        require_ssl: false
        agent:
          servers:
            lan: (( .consul_server.ips ))

  - name: health_manager
    label: Health Manager
    resource_label: Health Manager
    description: Reports app health to the Cloud Controller
    templates:
      - name: hm9000
        release: cf
      - name: metron_agent
        release: cf
      - name: route_registrar
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          min: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

      - name: internal_api_user_credentials
        type: simple_credentials

    manifest: |
      cc:
        srv_api_uri: "https://api.(( .cloud_controller.system_domain.value ))"
        bulk_api_user: (( .cloud_controller.bulk_api_credentials.identity ))
        bulk_api_password: (( .cloud_controller.bulk_api_credentials.password ))
        internal_api_user: (( internal_api_user_credentials.identity ))
        internal_api_password: (( internal_api_user_credentials.password ))

      domain: (( .cloud_controller.system_domain.value ))

      dea_next:
        heartbeat_interval_in_seconds: 10

      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines:  (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      etcd:
        machines: (( .etcd_server.ips ))
      route_registrar:
        routes:
        - name: hm9000
          port: 5155
          uris:
          - "hm9000.(( .cloud_controller.system_domain.value ))"

  - name: clock_global
    label: Clock Global
    resource_label: Clock Global
    description: Schedules asynchronous tasks for cloud controller
    templates:
      - name: cloud_controller_clock
        release: cf
      - name: metron_agent
        release: cf
      - name: nfs_mounter # NOTE: NFS Mounter must be last until #94152506 is resolved
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1
        constraints:
          min: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

    manifest: |
      domain: (( .cloud_controller.system_domain.value ))
      system_domain: (( .cloud_controller.system_domain.value ))
      system_domain_organization: system
      app_domains: ["(( .cloud_controller.apps_domain.value ))"]

      cc:
        allow_app_ssh_access: (( .cloud_controller.allow_app_ssh_access.value ))
        buildpacks: (( .properties.system_blobstore.selected_option.parsed_manifest(ccbuildpack) ))
        droplets: (( .properties.system_blobstore.selected_option.parsed_manifest(ccdroplet) ))
        packages: (( .properties.system_blobstore.selected_option.parsed_manifest(ccpackage) ))
        service_name: cloud-controller-ng
        resource_pool: (( .properties.system_blobstore.selected_option.parsed_manifest(ccresource) ))
        logging_level: debug
        maximum_health_check_timeout: 600
        staging_upload_user: (( .cloud_controller.staging_upload_credentials.identity ))
        staging_upload_password: (( .cloud_controller.staging_upload_credentials.password ))
        bulk_api_password: (( .cloud_controller.bulk_api_credentials.password ))
        db_encryption_key: (( .cloud_controller.encrypt_key.value || .cloud_controller.db_encryption_credentials.password ))
        internal_api_user: (( .health_manager.internal_api_user_credentials.identity ))
        internal_api_password: (( .health_manager.internal_api_user_credentials.password ))
        quota_definitions:
          default:
            memory_limit: (( .cloud_controller.default_quota_memory_limit_mb.value ))
            total_services: (( .cloud_controller.default_quota_max_number_services.value ))
            non_basic_services_allowed: true
            total_routes: 1000
            trial_db_allowed: true
          runaway:
            memory_limit: 102400
            total_services: -1
            total_routes: 1000
            non_basic_services_allowed: true

        security_group_definitions:
          - name: all_open
            rules:
              - protocol: all
                destination: 0.0.0.0-255.255.255.255
        default_running_security_groups:
          - all_open
        default_staging_security_groups:
          - all_open

      ccdb: (( .properties.system_database.selected_option.parsed_manifest(ccdb) ))

      consul:
        require_ssl: false

      nfs_server:
        address: (( .nfs_server.first_ip ))

      uaa:
        url: "https://uaa.(( .cloud_controller.system_domain.value ))"
        jwt:
          verification_key: (( .uaa.jwt_signing_key_credentials.public_key_pem ))
        clients:
          cc-service-dashboards:
            secret: (( .uaa.cc_service_dashboards_credentials.password ))
      login:
        url: "https://login.(( .cloud_controller.system_domain.value ))"

      logger_endpoint:
        port: (( .properties.logger_endpoint_port.value || "443" ))
      metron_endpoint:
        shared_secret:  (( .doppler.shared_secret_credentials.password ))
      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))

      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      etcd:
        machines: (( .etcd_server.ips ))

  - name: cloud_controller_worker
    label: Cloud Controller Worker
    resource_label: Cloud Controller Worker
    description: Worker for cloud controller asynchronous tasks
    templates:
      - name: cloud_controller_worker
        release: cf
      - name: metron_agent
        release: cf
      - name: consul_agent
        release: cf
      - name: nfs_mounter # NOTE: NFS Mounter must be last until #94152506 is resolved
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          min: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

    manifest: |
      domain: (( .cloud_controller.system_domain.value ))
      system_domain: (( .cloud_controller.system_domain.value ))
      system_domain_organization: system
      app_domains: ["(( .cloud_controller.apps_domain.value ))"]

      cc:
        allow_app_ssh_access: (( .cloud_controller.allow_app_ssh_access.value ))
        buildpacks: (( .properties.system_blobstore.selected_option.parsed_manifest(ccbuildpack) ))
        droplets: (( .properties.system_blobstore.selected_option.parsed_manifest(ccdroplet) ))
        packages: (( .properties.system_blobstore.selected_option.parsed_manifest(ccpackage) ))
        resource_pool: (( .properties.system_blobstore.selected_option.parsed_manifest(ccresource) ))
        service_name: cloud-controller-ng
        logging_level: debug
        maximum_health_check_timeout: 600
        staging_upload_user: (( .cloud_controller.staging_upload_credentials.identity ))
        staging_upload_password: (( .cloud_controller.staging_upload_credentials.password ))
        bulk_api_password: (( .cloud_controller.bulk_api_credentials.password ))
        db_encryption_key: (( .cloud_controller.encrypt_key.value || .cloud_controller.db_encryption_credentials.password ))
        internal_api_user: (( .health_manager.internal_api_user_credentials.identity ))
        internal_api_password: (( .health_manager.internal_api_user_credentials.password ))
        quota_definitions:
          default:
            memory_limit: (( .cloud_controller.default_quota_memory_limit_mb.value ))
            total_services: (( .cloud_controller.default_quota_max_number_services.value ))
            non_basic_services_allowed: true
            total_routes: 1000
            trial_db_allowed: true
          runaway:
            memory_limit: 102400
            total_services: -1
            total_routes: 1000
            non_basic_services_allowed: true

        security_group_definitions:
          - name: all_open
            rules:
              - protocol: all
                destination: 0.0.0.0-255.255.255.255
        default_running_security_groups:
          - all_open
        default_staging_security_groups:
          - all_open

      ccdb: (( .properties.system_database.selected_option.parsed_manifest(ccdb) ))

      consul:
        require_ssl: false
        agent:
          servers:
            lan: (( .consul_server.ips ))

      nfs_server:
        address: (( .nfs_server.first_ip ))

      uaa:
        url: "https://uaa.(( .cloud_controller.system_domain.value ))"
        jwt:
          verification_key: (( .uaa.jwt_signing_key_credentials.public_key_pem ))
        clients:
          cc-service-dashboards:
            secret: (( .uaa.cc_service_dashboards_credentials.password ))
      login:
        url: "https://login.(( .cloud_controller.system_domain.value ))"

      logger_endpoint:
        port: (( .properties.logger_endpoint_port.value || "443" ))
      metron_endpoint:
        shared_secret:  (( .doppler.shared_secret_credentials.password ))
      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))

      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      etcd:
        machines: (( .etcd_server.ips ))

  - name: collector
    label: Collector
    resource_label: Collector
    description: Collects system information in order to provide health and status metrics
    templates:
      - name: collector
        release: cf
      - name: metron_agent
        release: cf

    requires_product_versions:
      - name: p-metrics
        version: ~> 1.2

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 0

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

    manifest: |
      collector:
        use_tsdb: true
        opentsdb:
          address: (( ..p-metrics.maximus.first_ip ))
          port: 13321

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      etcd:
        machines: (( .etcd_server.ips ))

  - name: uaa
    label: UAA
    resource_label: UAA
    description: Pivotal CF Elastic Runtime's Authentication and Authorization server
    templates:
      - name: uaa
        release: cf
      - name: metron_agent
        release: cf
      - name: consul_agent
        release: cf
      - name: route_registrar
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        default: 1
        configurable: true
        constraints:
          min: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

      - name: admin_credentials
        type: simple_credentials
        default:
          identity: admin

      - name: push_apps_manager_credentials
        type: simple_credentials
        default:
          identity: push_apps_manager

      - name: run_smoke_tests_credentials
        type: simple_credentials
        default:
          identity: smoke_tests

      - name: system_services_credentials
        type: simple_credentials
        default:
          identity: system_services

      - name: system_verification_credentials
        type: simple_credentials
        default:
          identity: system_verification

      - name: system_passwords_client_credentials
        type: simple_credentials
        default:
          identity: system_passwords

      - name: login_client_credentials
        type: simple_credentials
        default:
          identity: login

      - name: identity_client_credentials
        type: simple_credentials
        label: Identity client credentials
        default:
          identity: identity

      - name: gorouter_client_credentials
        type: simple_credentials
        default:
          identity: gorouter

      - name: doppler_client_credentials
        type: simple_credentials
        default:
          identity: doppler

      - name: opentsdb_nozzle_credentials
        type: simple_credentials
        default:
          identity: opentsdb-firehose-nozzle

      - name: apps_manager_client_credentials
        type: simple_credentials
        default:
          identity: portal

      - name: autoscale_client_credentials
        type: simple_credentials
        default:
          identity: autoscaling_service

      - name: cc_service_dashboards_credentials
        type: simple_credentials
        default:
          identity: cc-service-dashboards

      - name: cc_client_credentials
        type: simple_credentials
        default:
          identity: cloud_controller

      - name: admin_client_credentials
        type: simple_credentials
        default:
          identity: admin

      - name: jwt_signing_key_credentials
        type: rsa_pkey_credentials

      - name: notifications_client_credentials
        type: simple_credentials
        default:
          identity: notifications

      - name: notifications_template_client_credentials
        type: simple_credentials
        default:
          identity: notifications_template

      - name: notifications_ui_client_credentials
        type: simple_credentials
        default:
          identity: notifications_ui_client

      - name: cloud_controller_username_lookup_credentials
        type: simple_credentials
        default:
          identity: cloud_controller_username_lookup

      - name: ldap_url
        type: ldap_url
        configurable: true
        optional: true

      - name: credentials
        type: simple_credentials
        configurable: true
        optional: true

      - name: ldap_search_base
        type: string
        configurable: true
        optional: true

      - name: ldap_search_filter
        type: string
        configurable: true
        default: "cn={0}"

      - name: ldap_server_ssl_cert
        type: text
        configurable: true
        optional: true

      - name: ldap_server_ssl_cert_alias
        type: string
        configurable: true
        optional: true

      - name: ldap_mail_attribute_name
        type: string
        configurable: true
        default: 'mail'

      - name: service_provider_key_credentials
        type: rsa_cert_credentials

      - name: sso_url
        type: http_url
        configurable: true
        optional: true

      - name: sso_xml
        type: text
        configurable: true
        optional: true

      - name: sso_name
        type: string
        configurable: true
        optional: true

      - name: disable_http
        type: boolean
        configurable: true
        default: false

    manifest: |
      consul:
        require_ssl: false
        agent:
          servers:
            lan: (( .consul_server.ips ))
          services:
            uaa: {}
      login:
        asset_base_url: '/resources/pivotal'
        protocol: https
        tiles:
          - name: Pivotal Apps Manager
            login-link: "https://apps.(( .cloud_controller.system_domain.value ))"
            image: "/resources/pivotal/images/dev-console-logo-gray.png"
            image-hover: "/resources/pivotal/images/dev-console-logo-teal.png"

        brand: pivotal
        links:
          home: "https://apps.(( .cloud_controller.system_domain.value ))"
          passwd: "https://login.(( .cloud_controller.system_domain.value ))/forgot_password"
          signup: "https://apps.(( .cloud_controller.system_domain.value ))/register"
        uaa_base: "https://uaa.(( .cloud_controller.system_domain.value ))"
        notifications:
          url: "https://notifications.(( .cloud_controller.system_domain.value ))"
        saml:
          entityid: "http://login.(( .cloud_controller.system_domain.value ))"
          serviceProviderKey: (( service_provider_key_credentials.private_key_pem ))
          serviceProviderCertificate: (( service_provider_key_credentials.cert_pem ))
          providers:
            (( sso_name.value )):
              nameID: "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"
              idpMetadataXML: (( sso_xml.value ))
              idpMetadataURL: (( sso_url.value ))
              showSamlLoginLink: true
              linkText: (( sso_name.value ))
              metadataTrustCheck: false
        logout:
          redirect:
            parameter:
              disable: false
              whitelist:
              - https://console.(( .cloud_controller.system_domain.value ))/
              - https://apps.(( .cloud_controller.system_domain.value ))/
            url: "/login"
      uaa:
        require_https: (( disable_http.value ))
        ldap:
          profile_type: search-and-bind
          url: (( ldap_url.value ))
          userDN: (( credentials.identity ))
          userPassword: (( credentials.password ))
          searchBase: (( ldap_search_base.value ))
          searchFilter: (( ldap_search_filter.value ))
          sslCertificate: (( ldap_server_ssl_cert.value ))
          sslCertificateAlias: (( ldap_server_ssl_cert_alias.value ))
          mailAttributeName: (( ldap_mail_attribute_name.value ))
          enabled: (( ldap_url.value_present? ))
          groups: (( .properties.group_search.selected_option.parsed_manifest(ldap_group_profile) ))
        login:
          addnew: false
        catalina_opts: "-Xmx768m -XX:MaxPermSize=256m"
        url: "https://uaa.(( .cloud_controller.system_domain.value ))"
        jwt:
          signing_key: (( jwt_signing_key_credentials.private_key_pem ))
          verification_key: (( jwt_signing_key_credentials.public_key_pem ))
        cc:
          client_secret: (( cc_client_credentials.password ))
        admin:
          client_secret: (( admin_client_credentials.password ))
        clients:
          opentsdb-firehose-nozzle:
            access-token-validity: 1209600
            authorized-grant-types: authorization_code,client_credentials,refresh_token
            override: true
            secret: (( opentsdb_nozzle_credentials.password ))
            scope: openid,oauth.approvals,doppler.firehose
            authorities: oauth.login,doppler.firehose
          identity:
            id: (( identity_client_credentials.identity ))
            secret: (( identity_client_credentials.password ))
            scope: "cloud_controller.admin,cloud_controller.read,cloud_controller.write,openid,zones.*.*,zones.*.*.*,zones.read,zones.write"
            resource_ids: none
            override: true
            authorized-grant-types: "authorization_code,client_credentials,refresh_token"
            autoapprove: true
            authorities: "scim.zones,zones.read,uaa.resource,zones.write,cloud_controller.admin"
          login:
            id: (( login_client_credentials.identity ))
            secret: (( login_client_credentials.password ))
            override: true
            autoapprove: true
            authorities: "oauth.login,scim.write,clients.read,notifications.write,critical_notifications.write,emails.write,scim.userids,password.write"
            authorized-grant-types: "authorization_code,client_credentials,refresh_token"
            scope: "openid,oauth.approvals"
          (( apps_manager_client_credentials.identity )):
            id: (( apps_manager_client_credentials.identity ))
            secret: (( apps_manager_client_credentials.password ))
            override: true
            autoapprove: true
            authorities: "scim.write,scim.read,cloud_controller.read,cloud_controller.write,password.write,uaa.admin,uaa.resource,cloud_controller.admin,emails.write,notifications.write"
            authorized-grant-types: "authorization_code,client_credentials,password,implicit"
            scope: "openid,cloud_controller.read,cloud_controller.write,password.write,console.admin,console.support,cloud_controller.admin"
            access-token-validity: 1209600
            refresh-token-validity: 1209600
          cf:
            id: cf
            override: true
            autoapprove: true
            authorities: "uaa.none"
            authorized-grant-types: "implicit,password,refresh_token"
            scope: "cloud_controller.read,cloud_controller.write,openid,password.write,cloud_controller.admin,scim.read,scim.write,doppler.firehose"
            access-token-validity: 7200
            refresh-token-validity: 1209600
          (( autoscale_client_credentials.identity )):
            id: (( autoscale_client_credentials.identity ))
            secret: (( autoscale_client_credentials.password ))
            override: true
            autoapprove: true
            authorities: "cloud_controller.write,cloud_controller.read,cloud_controller.admin,notifications.write,critical_notifications.write,emails.write"
            authorized-grant-types: "client_credentials,authorization_code,refresh_token"
            scope: "openid,cloud_controller.permissions,cloud_controller.read,cloud_controller.write"
            access-token-validity: 3600
          system_passwords:
            id: (( system_passwords_client_credentials.identity ))
            secret: (( system_passwords_client_credentials.password ))
            override: true
            autoapprove: true
            authorities: "uaa.admin,scim.read,scim.write,password.write"
            authorized-grant-types: "client_credentials"
          cc-service-dashboards:
            id: (( cc_service_dashboards_credentials.identity ))
            secret: (( cc_service_dashboards_credentials.password ))
            override: true
            authorities: clients.read,clients.write,clients.admin
            authorized-grant-types: client_credentials
            scope: cloud_controller.write,openid,cloud_controller.read,cloud_controller_service_permissions.read
          doppler:
            id: (( doppler_client_credentials.identity ))
            secret: (( doppler_client_credentials.password ))
            authorities: uaa.resource
          gorouter:
            id: (( gorouter_client_credentials.identity ))
            secret: (( gorouter_client_credentials.password ))
            authorities: clients.read,clients.write,clients.admin,route.admin,route.advertise
            authorized-grant-types: client_credentials,refresh_token
            scope: openid,cloud_controller_service_permissions.read
          notifications:
            id: notifications
            secret: (( .uaa.notifications_client_credentials.password ))
            authorities: cloud_controller.admin,scim.read,notifications.write,critical_notifications.write,emails.write
            authorized-grant-types: client_credentials
          notifications_template:
            id: (( .uaa.notifications_template_client_credentials.identity ))
            secret: (( .uaa.notifications_template_client_credentials.password ))
            scope: openid,clients.read,clients.write,clients.secret
            authorities: clients.read,clients.write,clients.secret,notification_templates.write,notification_templates.read,notifications.manage
            authorized-grant-types: client_credentials
          notifications_ui_client:
            id: notifications_ui_client
            secret: (( .uaa.notifications_ui_client_credentials.password ))
            scope: notification_preferences.read,notification_preferences.write,openid
            authorized-grant-types: authorization_code,client_credentials,refresh_token
            authorities: notification_preferences.admin
            autoapprove: true
            override: true
            redirect-uri: "https://notifications-ui.(( .cloud_controller.system_domain.value ))/sessions/create"
          cloud_controller_username_lookup:
            id: (( .uaa.cloud_controller_username_lookup_credentials.identity ))
            secret: (( .uaa.cloud_controller_username_lookup_credentials.password ))
            authorized-grant-types: client_credentials
            authorities: scim.userids
        scim:
          user:
            override: true
          userids_enabled: true
          users:
          - (( admin_credentials.identity ))|(( admin_credentials.password ))|scim.write,scim.read,openid,cloud_controller.admin,dashboard.user,console.admin,console.support,doppler.firehose,notification_preferences.read,notification_preferences.write,notifications.manage,notification_templates.read,notification_templates.write,emails.write,notifications.write,zones.read,zones.write
          - (( push_apps_manager_credentials.identity ))|(( push_apps_manager_credentials.password ))|cloud_controller.admin
          - (( run_smoke_tests_credentials.identity ))|(( run_smoke_tests_credentials.password ))|cloud_controller.admin
          - (( system_services_credentials.identity ))|(( system_services_credentials.password ))|cloud_controller.admin
          - (( system_verification_credentials.identity ))|(( system_verification_credentials.password ))|scim.write,scim.read,openid,cloud_controller.admin,dashboard.user,console.admin,console.support

      ccdb: (( .properties.system_database.selected_option.parsed_manifest(ccdb) ))

      domain: (( .cloud_controller.system_domain.value ))

      uaadb: (( .properties.system_database.selected_option.parsed_manifest(uaadb) ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      etcd:
        machines: (( .etcd_server.ips ))
      route_registrar:
        routes:
        - name: uaa
          port: 8080
          uris:
          - "uaa.(( .cloud_controller.system_domain.value ))"
          - "*.uaa.(( .cloud_controller.system_domain.value ))"
          - "login.(( .cloud_controller.system_domain.value ))"
          - "*.login.(( .cloud_controller.system_domain.value ))"
      router:
        servers:
          z1: (( .router.ips ))
          z2: []

  - name: diego_brain
    label: Diego Brain
    resource_label: Diego Brain
    description: Diego Brain
    templates:
      - name: auctioneer
        release: diego
      - name: cc_uploader
        release: diego
      - name: converger
        release: diego
      - name: file_server
        release: diego
      - name: nsync
        release: diego
      - name: route_emitter
        release: diego
      - name: ssh_proxy
        release: diego
      - name: stager
        release: diego
      - name: tps
        release: diego
      - name: consul_agent
        release: cf
      - name: metron_agent
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 2_048
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 4_096
        constraints:
          min: 4_096

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: true
        default: 1_024

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          min: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

      - name: ssh_host_key
        type: rsa_pkey_credentials
        configurable: false

    manifest: |
      diego:
        auctioneer:
          bbs:
            api_url: http://bbs.service.cf.internal:8889
          etcd:
            machines: ['etcd.service.cf.internal']
            require_ssl: false
            ca_cert: "foo"
            client_cert: "bar"
            client_key: "baz"
        cc_uploader:
          cc:
            job_polling_interval_in_seconds: 25
            basic_auth_username: (( .health_manager.internal_api_user_credentials.identity ))
            basic_auth_password: (( .health_manager.internal_api_user_credentials.password ))
            external_port: 9022
            staging_upload_password: (( .cloud_controller.staging_upload_credentials.password ))
            staging_upload_user: (( .cloud_controller.staging_upload_credentials.identity ))
        converger:
          bbs:
            api_url: http://bbs.service.cf.internal:8889
          etcd:
            machines: ['etcd.service.cf.internal']
            require_ssl: false
            ca_cert: "foo"
            client_cert: "bar"
            client_key: "baz"
        file_server:
          cc:
            job_polling_interval_in_seconds: 25
            basic_auth_username: (( .health_manager.internal_api_user_credentials.identity ))
            basic_auth_password: (( .health_manager.internal_api_user_credentials.password ))
            external_port: 9022
            staging_upload_password: (( .cloud_controller.staging_upload_credentials.password ))
            staging_upload_user: (( .cloud_controller.staging_upload_credentials.identity ))
        nsync:
          bbs:
            api_url: http://bbs.service.cf.internal:8889
          cc:
            base_url: https://api.(( .cloud_controller.system_domain.value ))
            basic_auth_username: (( .health_manager.internal_api_user_credentials.identity ))
            basic_auth_password: (( .health_manager.internal_api_user_credentials.password ))
            staging_upload_password: (( .cloud_controller.staging_upload_credentials.password ))
            staging_upload_user: (( .cloud_controller.staging_upload_credentials.identity ))
        route_emitter:
          bbs:
            api_url: http://bbs.service.cf.internal:8889
          nats:
            user: (( .nats.credentials.identity ))
            password: (( .nats.credentials.password ))
            port: 4222
            machines: (( .nats.ips ))
        ssh_proxy:
          bbs:
            api_url: http://bbs.service.cf.internal:8889
          host_key: (( ssh_host_key.private_key_pem ))
          enable_cf_auth: true
          enable_diego_auth: false
          diego_credentials: ""
          cc:
            external_port: 9022
        ssl:
          skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
        stager:
          cc:
            basic_auth_username: (( .health_manager.internal_api_user_credentials.identity ))
            basic_auth_password: (( .health_manager.internal_api_user_credentials.password ))
            external_port: 9022
            staging_upload_password: (( .cloud_controller.staging_upload_credentials.password ))
            staging_upload_user: (( .cloud_controller.staging_upload_credentials.identity ))
        tps:
          traffic_controller_url: wss://doppler.(( .cloud_controller.system_domain.value )):(( .properties.logger_endpoint_port.value || "443" ))
          bbs:
            api_url: http://bbs.service.cf.internal:8889
          cc:
            basic_auth_username: (( .health_manager.internal_api_user_credentials.identity ))
            basic_auth_password: (( .health_manager.internal_api_user_credentials.password ))
            external_port: 9022
            staging_upload_password: (( .cloud_controller.staging_upload_credentials.password ))
            staging_upload_user: (( .cloud_controller.staging_upload_credentials.identity ))
      consul:
        require_ssl: false
        agent:
          servers:
            lan: (( .consul_server.ips ))
          services:
            auctioneer: {}
            cc_uploader: {}
            file_server: {}
            nsync: {}
            ssh_proxy: {}
            stager: {}
            tps: {}
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      etcd:
        machines: (( .etcd_server.ips ))

  - name: diego_cell
    label: Diego Cell
    resource_label: Diego Cell
    description: Diego Cell
    templates:
      - name: rep
        release: diego
      - name: consul_agent
        release: cf
      - name: garden
        release: garden-linux
      - name: rootfses
        release: diego
      - name: metron_agent
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 16_384
        constraints:
          min: 16_384

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 32_768
        constraints:
          min: 32_768

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 2
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          min: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

    manifest: |
      diego:
        rep:
          bbs:
            api_url: http://bbs.service.cf.internal:8889
          etcd:
            machines: ['etcd.service.cf.internal']
            require_ssl: false
            ca_cert: "foo"
            client_cert: "bar"
            client_key: "baz"
          zone: (( availability_zone ))
      consul:
        require_ssl: false
        agent:
          servers:
            lan: (( .consul_server.ips ))
      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      etcd:
        machines: (( .etcd_server.ips ))
      garden:
        allow_host_access: (( .properties.allow_cross_container_traffic.value ))

  - name: dea
    label: DEA
    resource_label: DEA
    description: Droplet Execution Agents run the applications pushed to Pivotal CF Elastic Runtime
    templates:
      - name: dea_next
        release: cf
      - name: dea_logging_agent
        release: cf
      - name: metron_agent
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 16_384
        constraints:
          min: 4_096

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 32_768
        constraints:
          min: 10_240

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 2
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 0
        constraints:
          min: 0

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

      - name: loggregator_agent_status_credentials
        type: simple_credentials

    manifest: |
      domain: (( .cloud_controller.system_domain.value ))

      dea_next:
        allow_host_access: (( .properties.allow_cross_container_traffic.value ))
        directory_server_protocol: https
        memory_mb: (( ram ))
        memory_overcommit_factor: 1
        disk_mb: (( ephemeral_disk ))
        disk_overcommit_factor: 1
        num_instances: 10
        evacuation_bail_out_time_in_seconds: 600
        zone: (( availability_zone ))

      metron_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      etcd:
        machines: (( .etcd_server.ips ))

  - name: doppler
    label: Doppler Server
    resource_label: Doppler Server
    description: Doppler server collects application logs
    templates:
      - name: doppler
        release: cf
      - name: metron_agent
        release: cf
      - name: syslog_drain_binder
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: true
        default: 1
        constraints:
          min: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

      - name: status_credentials
        type: simple_credentials

      - name: shared_secret_credentials
        type: simple_credentials

      - name: message_brain_buffer_size
        type: integer
        default: 100
        configurable: true

    manifest: |
      doppler:
        zone: (( availability_zone ))
        status:
          user: (( status_credentials.identity ))
          password: (( status_credentials.password ))
          port: 5768
        message_brain_buffer_size: (( message_brain_buffer_size.value ))

      uaa:
        jwt:
          verification_key: (( .uaa.jwt_signing_key_credentials.public_key_pem ))

      doppler_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))

      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      etcd:
        machines: (( .etcd_server.ips ))

      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))

      system_domain: (( .cloud_controller.system_domain.value ))
      cc:
        bulk_api_password: (( .cloud_controller.bulk_api_credentials.password ))
        srv_api_uri: "https://api.(( .cloud_controller.system_domain.value ))"

  - name: loggregator_trafficcontroller
    label: Loggregator Trafficcontroller
    resource_label: Loggregator Trafficcontroller
    description: Loggregator trafficcontroller distributes requests to Loggregator servers
    templates:
      - name: loggregator_trafficcontroller
        release: cf
      - name: metron_agent
        release: cf
      - name: route_registrar
        release: cf

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 2_048
        constraints:
          min: 2_048

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 1
    dynamic_ip: 0
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        default: 1
        configurable: true
        constraints:
          min: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

      - name: status_credentials
        type: simple_credentials

    manifest: |
      loggregator:
        doppler_port: 8081

      cc:
        srv_api_uri: "https://api.(( .cloud_controller.system_domain.value ))"

      system_domain: (( .cloud_controller.system_domain.value ))

      loggregator_endpoint:
        shared_secret: (( .doppler.shared_secret_credentials.password ))
      traffic_controller:
        zone: (( availability_zone ))

      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

      nats:
        user: (( .nats.credentials.identity ))
        password: (( .nats.credentials.password ))
        port: 4222
        machines: (( .nats.ips ))
      syslog_daemon_config:
        address: (( .properties.syslog_host.value ))
        port: (( .properties.syslog_port.value ))
        transport: (( .properties.syslog_protocol.value ))
      metron_agent:
        zone: (( availability_zone ))
        deployment: cf
      etcd:
        machines: (( .etcd_server.ips ))
      doppler:
        uaa_client_id: (( .uaa.doppler_client_credentials.identity ))
      uaa:
        clients:
          doppler:
            secret: (( .uaa.doppler_client_credentials.password ))

      route_registrar:
        routes:
        - name: doppler
          port: 8081
          uris:
          - "doppler.(( .cloud_controller.system_domain.value ))"
        - name: loggregator
          port: 8080
          uris:
          - "loggregator.(( .cloud_controller.system_domain.value ))"

  - name: push-apps-manager
    label: Push Apps Manager
    resource_label: Push Apps Manager
    description: Pushes the Pivotal Apps Manager application to your Elastic Runtime installation
    templates:
      - name: push-apps-manager
        release: push-apps-manager-release
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

      - name: secret_token
        type: secret
        configurable: false

    manifest: |
      cf:
        api_url: "https://api.(( .cloud_controller.system_domain.value ))"
        admin_username: (( .uaa.push_apps_manager_credentials.identity ))
        admin_password: (( .uaa.push_apps_manager_credentials.password ))
        system_domain: (( .cloud_controller.system_domain.value ))
      services:
        authentication:
          CF_CLIENT_ID: (( .uaa.apps_manager_client_credentials.identity ))
          CF_CLIENT_SECRET: (( .uaa.apps_manager_client_credentials.password ))
          CF_LOGIN_SERVER_URL: "https://login.(( .cloud_controller.system_domain.value ))"
          CF_UAA_SERVER_URL: "https://uaa.(( .cloud_controller.system_domain.value ))"
        smtp:
          address: (( .properties.smtp_address.value ))
          port: (( .properties.smtp_port.value ))
          user_name: (( .properties.smtp_credentials.identity ))
          password: (( .properties.smtp_credentials.password ))
          enable_starttls_auto: (( .properties.smtp_enable_starttls_auto.value ))
      env:
        secret_token: (( secret_token.value ))
        cf_cc_api_url: "https://api.(( .cloud_controller.system_domain.value ))"
        cf_loggregator_http_url: http://loggregator.(( .cloud_controller.system_domain.value )) # this property is not yet used, so this value may be wrong when the time comes
        cf_console_url: "https://apps.(( .cloud_controller.system_domain.value ))"
        cf_notifications_service_url: "https://notifications.(( .cloud_controller.system_domain.value ))"
        default_from: (( .properties.smtp_from.value ))
        usage_service_host: app-usage.(( .cloud_controller.system_domain.value ))
        bundle_without: test development hosted_only
        apps_manager_version: (( .properties.product_version.value ))
      databases:
        console: (( .properties.system_database.selected_option.parsed_manifest(console) ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
        https_only_mode: true

  - name: push-app-usage-service
    label: Push App Usage Service
    resource_label: Push App Usage Service
    description: Monitors usage of an application pushed to your Elastic Runtime installation
    templates:
      - name: push-app-usage-service
        release: push-apps-manager-release
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

      - name: secret_token
        type: secret
        configurable: false

      - name: reply_to
        type: email
        configurable: true
        optional: true

      - name: from
        type: email
        configurable: true
        optional: true

      - name: smtp_address
        type: network_address
        configurable: true
        optional: true

      - name: smtp_port
        type: port
        configurable: true
        optional: true

      - name: smtp_credentials
        type: simple_credentials
        configurable: true
        optional: true

      - name: smtp_enable_starttls_auto
        type: boolean
        configurable: true
        default: false

    manifest: |
      cf:
        api_url: "https://api.(( .cloud_controller.system_domain.value ))"
        admin_username: (( .uaa.push_apps_manager_credentials.identity ))
        admin_password: (( .uaa.push_apps_manager_credentials.password ))
        system_domain: (( .cloud_controller.system_domain.value ))
      services:
        authentication:
          CF_CLIENT_ID: (( .uaa.apps_manager_client_credentials.identity ))
          CF_CLIENT_SECRET: (( .uaa.apps_manager_client_credentials.password ))
          CF_LOGIN_SERVER_URL: "https://login.(( .cloud_controller.system_domain.value ))"
          CF_UAA_SERVER_URL: "https://uaa.(( .cloud_controller.system_domain.value ))"
      env:
        secret_token: (( secret_token.value ))
        cf_cc_api_url: "https://api.(( .cloud_controller.system_domain.value ))"
        cf_loggregator_http_url: http://loggregator.(( .cloud_controller.system_domain.value )) # this property is not yet used, so this value may be wrong when the time comes
        cf_console_url: "https://apps.(( .cloud_controller.system_domain.value ))"
        default_reply_to: (( reply_to.value ))
        default_from: (( .properties.smtp_from.value ))
        bundle_without: test development hosted_only
      databases:
        app_usage_service: (( .properties.system_database.selected_option.parsed_manifest(push-app-usage-service) ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

  - name: smoke-tests
    label: Run Smoke Tests
    resource_label: Run Smoke Tests
    description: Runs Smoke Tests against your Elastic Runtime installation
    templates:
      - name: smoke-tests
        release: cf
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

    manifest: |
      smoke_tests:
        api: "https://api.(( .cloud_controller.system_domain.value ))"
        apps_domain: (( .cloud_controller.apps_domain.value ))
        user: (( .uaa.run_smoke_tests_credentials.identity ))
        password: (( .uaa.run_smoke_tests_credentials.password ))
        org: CF_SMOKE_TEST_ORG
        space: CF_SMOKE_TEST_SPACE
        skip_ssl_validation: (( .ha_proxy.skip_cert_verify.value ))
        use_existing_org: false
        use_existing_space: false
        ginkgo_opts: "-skipPackage=logging"

  - name: notifications
    label: Notifications
    resource_label: Notifications
    description: Notifications release for PCF
    templates:
      - name: deploy-notifications
        release: notifications
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

      - name: encryption_credentials
        type: simple_credentials

    manifest: |
      domain: (( .cloud_controller.system_domain.value ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
      notifications:
        app_domain: (( .cloud_controller.system_domain.value ))
        network: notifications
        sender: (( .properties.smtp_from.value ))
        encryption_key: (( encryption_credentials.password ))
        enable_diego: true
        instance_count: 3
        syslog_url: (( .properties.syslog_protocol.value "://" .properties.syslog_host.value ":" .properties.syslog_port.value ))
        organization: system
        space: notifications-with-ui
        error_on_misconfiguration: false
        cf:
          admin_user: (( .uaa.admin_credentials.identity ))
          admin_password: (( .uaa.admin_credentials.password ))
        smtp:
          host: (( .properties.smtp_address.value ))
          pass: (( .properties.smtp_credentials.password ))
          port: (( .properties.smtp_port.value ))
          user: (( .properties.smtp_credentials.identity ))
          tls: (( .properties.smtp_enable_starttls_auto.value ))
          auth_mechanism: (( .properties.smtp_auth_mechanism.value ))
          crammd5_secret: (( .properties.smtp_crammd5_secret.value ))
        uaa:
          admin_client_id: (( .uaa.admin_client_credentials.identity ))
          admin_client_secret: (( .uaa.admin_client_credentials.password ))
          client_id: (( .uaa.notifications_client_credentials.identity ))
          client_secret: (( .uaa.notifications_client_credentials.password ))
        database: (( .properties.system_database.selected_option.parsed_manifest(notifications) ))
        default_template: |
          {
            "name": "Default Template",
            "subject": "CF Notification: {{.Subject}}",
            "html": "\u003ctable width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"border-collapse:collapse;font-family: Helvetica, Arial,sans-serif\"\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd width=\"100%\" align=\"center\" bgcolor=\"#F8f8f8\" style=\"padding-right:10px;padding-left:10px\"\u003e\n                \u003ctable width=\"600\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"border-collapse:collapse\"\u003e\n                    \u003ctbody\u003e\n                        \u003ctr\u003e\n                            \u003ctd align=\"left\" valign=\"top\" style=\"padding-bottom:30px;padding-top:30px\"\u003e\n                              \u003cimg src=\"http://notifications-ui.{{.Domain}}/assets/pivotal_logo.png\"\n                                alt=\"Pivotal CF\" border=\"0\" style=\"display:block\" class=\"CToWUd\"\n                                width=\"166px\" height=\"35px\"\u003e\n                            \u003c/td\u003e\n                        \u003c/tr\u003e\n                    \u003c/tbody\u003e\n                \u003c/table\u003e\n                \u003ctable width=\"600\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"border-collapse:collapse\"\u003e\n                    \u003ctbody\u003e\n                        \u003ctr\u003e\n                            \u003ctd align=\"left\" valign=\"top\" bgcolor=\"#FFFFFF\"\u003e\n                                \u003ctable width=\"600\" cellpadding=\"40\" cellspacing=\"0\" border=\"0\" style=\"border-collapse:collapse;border:1px solid #e0e4e5\"\u003e\n                                    \u003ctbody\u003e\n                                        \u003ctr\u003e\n                                            \u003ctd style=\"color:#666666;font-size:16px;line-height:22px\"\u003e\n                                                \u003cdiv\u003e\n                                                    {{.HTML}}\n                                                \u003c/div\u003e\n                                            \u003c/td\u003e\n                                        \u003c/tr\u003e\n                                    \u003c/tbody\u003e\n                                \u003c/table\u003e\n                            \u003c/td\u003e\n                        \u003c/tr\u003e\n                    \u003c/tbody\u003e\n                \u003c/table\u003e\n                \u003ctable width=\"600\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"border-collapse:collapse;font-size:12px;color:#b4b4b4\"\u003e\n                    \u003ctbody\u003e\n                        \u003ctr\u003e\n                          \u003ctd align=\"left\" valign=\"middle\" style=\"padding-top:20px;padding-bottom:20px\"\u003eManage your \u003ca href=\"https://notifications-ui.{{.Domain}}/preferences\"\n                                target=\"_blank\"\u003enotification preferences\u003c/a\u003e or\n                              \u003ca href=\"https://notifications-ui.{{.Domain}}/unsubscribe/{{.UnsubscribeID}}\"\n                                target=\"_blank\"\u003eunsubscribe\u003c/a\u003e\n                            \u003c/td\u003e\n                        \u003c/tr\u003e\n                        \u003ctr\u003e\n                            \u003ctd align=\"left\" valign=\"middle\" style=\"padding-bottom:20px\"\u003ePivotal Cloud Foundry, and the Pivotal Cloud Foundry logo are registered\n                                trademarks or trademarks of Pivotal Software, Inc.\n                                in the United States and other countries. All other\n                                trademarks used herein are the property of their\n                                respective owners.\n                                \u003ca\u003e\n                            \u003c/td\u003e\n                        \u003c/tr\u003e\n                        \u003ctr\u003e\n                            \u003ctd align=\"left\" valign=\"middle\" style=\"padding-bottom:20px\"\u003e\u00A9 2015 Pivotal Software, Inc. All rights reserved.\n                                Published in the USA.\n                                \u003ca\u003e\n                            \u003c/td\u003e\n                        \u003c/tr\u003e\n                    \u003c/tbody\u003e\n                \u003c/table\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n",
            "text": "_____\n\n\nPivotal CF\n\n{{.Text}}\n\nManage your notification preferences:\nhttps://notifications-ui.{{.Domain}}/preferences\n\nUnsubscribe from Pivotal emails:\nhttps://notifications-ui.{{.Domain}}/unsubscribe/{{.UnsubscribeID}}\n\nPivotal Cloud Foundry, and the Pivotal Cloud Foundry logo are registered trademarks or trademarks of Pivotal Software, Inc. in the United States and other countries. All other trademarks used herein are the property of their respective owners.\n\n\u00A9 2015 Pivotal Software, Inc. All rights reserved. Published in the USA.\n\n______\n",
            "metadata": {}
          }

  - name: notifications-ui
    label: Notifications-UI
    resource_label: Notifications-UI
    description: Notifications UI Component for PCF
    templates:
      - name: deploy-notifications-ui
        release: notifications-ui
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

    manifest: |
      domain: (( .cloud_controller.system_domain.value ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
      notifications_ui:
        organization: system
        space: notifications-with-ui
        app_domain: (( .cloud_controller.system_domain.value ))
        network: notifications
        syslog_url: (( .properties.syslog_protocol.value "://" .properties.syslog_host.value ":" .properties.syslog_port.value ))
        encryption_key: (( .notifications.encryption_credentials.password ))
        enable_diego: true
        instance_count: 1
        cf:
          admin_user: (( .uaa.admin_credentials.identity ))
          admin_password: (( .uaa.admin_credentials.password ))
        uaa:
          admin_client_id: (( .uaa.admin_client_credentials.identity ))
          admin_client_secret: (( .uaa.admin_client_credentials.password ))
          client_id: (( .uaa.notifications_ui_client_credentials.identity ))
          client_secret: (( .uaa.notifications_ui_client_credentials.password ))

  - name: autoscaling
    label: Deploy CF Autoscaling App
    resource_label: Deploy CF Autoscaling App
    description: Deploys the CF Autoscaling App
    templates:
      - name: deploy-autoscaling
        release: cf-autoscaling
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 512
        constraints:
          min: 512

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

      - name: broker_credentials
        type: salted_credentials

      - name: encryption_key
        type: salted_credentials

    manifest: |
      app_domains:
        - (( .cloud_controller.system_domain.value ))
      autoscale:
        broker:
          user: (( broker_credentials.identity ))
          password: (( broker_credentials.password ))
        cf:
          admin_user: (( .uaa.admin_credentials.identity ))
          admin_password: (( .uaa.admin_credentials.password ))
        database: (( .properties.system_database.selected_option.parsed_manifest(autoscaling) ))
        encryption_key: (( encryption_key.password ))
        enable_diego: true
        notifications_host: "https://notifications.(( .cloud_controller.system_domain.value ))"
        organization: system
        space: autoscaling
      domain: (( .cloud_controller.system_domain.value ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
      uaa:
        clients:
          autoscaling_service:
            secret: (( .uaa.autoscale_client_credentials.password ))

  - name: autoscaling-register-broker
    label: Register autoscaling service broker
    resource_label: Register autoscaling service broker
    description: Register autoscaling service broker
    templates:
      - name: register-broker
        release: cf-autoscaling
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 512
        constraints:
          min: 512

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

    manifest: |
      app_domains:
        - (( .cloud_controller.system_domain.value ))
      autoscale:
        broker:
          user: (( .autoscaling.broker_credentials.identity ))
          password: (( .autoscaling.broker_credentials.password ))
        cf:
          admin_user: (( .uaa.admin_credentials.identity ))
          admin_password: (( .uaa.admin_credentials.password ))
        organization: system
        space: autoscaling
      domain: (( .cloud_controller.system_domain.value ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

  - name: autoscaling-destroy-broker
    label: Destroy autoscaling service broker
    resource_label: Destroy autoscaling service broker
    description: Destroy autoscaling service broker
    templates:
      - name: destroy-broker
        release: cf-autoscaling
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 512
        constraints:
          min: 512

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

    manifest: |
      autoscale:
        broker:
          user: (( .autoscaling.broker_credentials.identity ))
          password: (( .autoscaling.broker_credentials.password ))
        cf:
          admin_user: (( .uaa.admin_credentials.identity ))
          admin_password: (( .uaa.admin_credentials.password ))
        organization: system
        space: autoscaling
      domain: (( .cloud_controller.system_domain.value ))
      ssl:
        skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))

  - name: diego-acceptance-tests
    label: Run Diego Acceptance Tests
    resource_label: Run Diego Acceptance Tests
    description: Runs Diego Acceptance Tests against your Elastic Runtime installation
    templates:
      - name: acceptance-tests
        release: diego
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

    manifest: |
      acceptance_tests:
        api: "https://api.(( .cloud_controller.system_domain.value ))"
        apps_domain: (( .cloud_controller.apps_domain.value ))
        admin_user: (( .uaa.admin_credentials.identity ))
        admin_password: (( .uaa.admin_credentials.password ))
        skip_ssl_validation: (( .ha_proxy.skip_cert_verify.value ))
        run_security_groups_tests: false
        run_ssh_tests: false
        skip_docker_tests: true
        nodes: 1

  - name: acceptance-tests
    label: Run CF Acceptance Tests
    resource_label: Run CF Acceptance Tests
    description: Runs CF Acceptance Tests against your Elastic Runtime installation
    templates:
      - name: acceptance-tests
        release: cf
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

    manifest: |
      acceptance_tests:
        api: "https://api.(( .cloud_controller.system_domain.value ))"
        apps_domain: (( .cloud_controller.apps_domain.value ))
        admin_user: (( .uaa.admin_credentials.identity ))
        admin_password: (( .uaa.admin_credentials.password ))
        include_logging: true
        include_internet_dependent: true
        include_operator: true
        include_services: true
        skip_ssl_validation: (( .ha_proxy.skip_cert_verify.value ))
        skip_regex: lucid64
        skip_diego_unsupported_tests: true

  - name: acceptance-tests-internetless
    label: Run CF Acceptance Tests without internet
    resource_label: Run CF Acceptance Tests without internet
    description: Runs CF Acceptance Tests against your Elastic Runtime installation without internet
    templates:
      - name: acceptance-tests
        release: cf
    errand: true

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 1
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        configurable: false
        default: 1

    property_blueprints:
      - name: vm_credentials
        type: salted_credentials
        default:
          identity: vcap

    manifest: |
      acceptance_tests:
        api: "https://api.(( .cloud_controller.system_domain.value ))"
        apps_domain: (( .cloud_controller.apps_domain.value ))
        admin_user: (( .uaa.admin_credentials.identity ))
        admin_password: (( .uaa.admin_credentials.password ))
        include_logging: true
        include_internet_dependent: false
        include_operator: true
        include_services: true
        skip_ssl_validation: (( .ha_proxy.skip_cert_verify.value ))
        skip_regex: lucid64
        skip_diego_unsupported_tests: true

  - name: compilation
    label: Compilation
    resource_label: Compilation
    description: Compilation

    resource_definitions:
      - name: ram
        type: integer
        label: RAM
        configurable: true
        default: 1_024
        constraints:
          min: 1_024

      - name: ephemeral_disk
        type: integer
        label: Ephemeral Disk
        configurable: true
        default: 20_480
        constraints:
          min: 20_480

      - name: persistent_disk
        type: integer
        label: Persistent Disk
        configurable: false
        default: 0

      - name: cpu
        type: integer
        label: CPU
        configurable: true
        default: 2
        constraints:
          min: 1
          power_of_two: true

    static_ip: 0
    dynamic_ip: 1
    max_in_flight: 1

    instance_definitions:
      - name: instances
        type: integer
        label: Instances
        default: 4
        configurable: true
        constraints:
          min: 1

property_blueprints:
  - name: product_version
    type: string
    configurable: false
    default: *product_version

  - name: syslog_host
    type: network_address
    configurable: true
    optional: true

  - name: syslog_port
    type: port
    configurable: true
    optional: true

  - name: syslog_protocol
    type: dropdown_select
    configurable: true
    optional: true
    options:
      - name: tcp
        label: TCP protocol
      - name: relp
        label: RELP protocol
      - name: udp
        label: UDP protocol

  - name: smtp_from
    type: email
    configurable: true
    optional: true

  - name: smtp_address
    type: network_address
    configurable: true
    optional: true

  - name: smtp_port
    type: port
    configurable: true
    optional: true

  - name: smtp_credentials
    type: simple_credentials
    configurable: true
    optional: true

  - name: smtp_enable_starttls_auto
    type: boolean
    configurable: true
    default: false

  - name: smtp_auth_mechanism
    type: dropdown_select
    configurable: true
    default: plain
    options:
      - name: none
        label: None
      - name: plain
        label: Plain
      - name: cram-md5
        label: CRAMMD5

  - name: smtp_crammd5_secret
    type: string
    configurable: true
    optional: true

  - name: logger_endpoint_port
    type: port
    configurable: true
    optional: true

  - name: allow_cross_container_traffic
    type: boolean
    configurable: true
    default: false

  - name: app_usage_service_database
    type: string
    configurable: false
    default: app_usage_service
  - name: autoscale_database
    type: string
    configurable: false
    default: autoscale
  - name: ccdb_database
    type: string
    configurable: false
    default: ccdb
  - name: console_database
    type: string
    configurable: false
    default: console
  - name: notifications_database
    type: string
    configurable: false
    default: notifications
  - name: uaa_database
    type: string
    configurable: false
    default: uaa

  - name: system_database
    type: selector
    configurable: true
    default: internal_mysql
    option_templates:
      - name: internal
        select_value: internal
        named_manifests:
          - name: ccdb
            manifest: |
              address: (( .ccdb.first_ip ))
              port: 2544
              db_scheme: "postgres"
              roles:
              - tag: admin
                name: (( .ccdb.credentials.identity ))
                password: (( .ccdb.credentials.password ))
              databases:
              - tag: cc
                name: ccdb
                citext: true
          - name: uaadb
            manifest: |
              address: (( .uaadb.first_ip ))
              port: 2544
              db_scheme: postgresql
              roles:
              - tag: admin
                name: (( .uaadb.credentials.identity ))
                password: (( .uaadb.credentials.password ))
              databases:
              - tag: uaa
                name: uaa
          - name: notifications
            manifest: |
              url: mysql://(( .mysql.notifications_credentials.identity )):(( .mysql.notifications_credentials.password ))@(( .mysql_proxy.service_hostname.value || .mysql_proxy.first_ip || .mysql.first_ip )):3306/notifications
              max_open_connections: 10
          - name: autoscaling
            manifest: |
              url: mysql://(( .mysql.autoscale_credentials.identity )):(( .mysql.autoscale_credentials.password ))@(( .mysql_proxy.service_hostname.value || .mysql_proxy.first_ip || .mysql.first_ip )):3306/autoscale
          - name: console
            manifest: |
              ip: (( .consoledb.first_ip ))
              username: (( .consoledb.credentials.identity ))
              password: (( .consoledb.credentials.password ))
              adapter: postgres
          - name: push-app-usage-service
            manifest: |
              name: app_usage_service
              port: 3306
              ip: (( .mysql_proxy.first_ip || .mysql.first_ip ))
              username: (( .mysql.app_usage_credentials.identity ))
              password: (( .mysql.app_usage_credentials.password ))

      - name: internal_mysql
        select_value: internal_mysql
        named_manifests:
        - name: ccdb
          manifest: |
            address: (( .mysql_proxy.service_hostname.value || .mysql_proxy.first_ip || .mysql.first_ip ))
            port: 3306
            db_scheme: mysql
            roles:
            - tag: admin
              name: (( .mysql.ccdb_credentials.identity ))
              password: (( .mysql.ccdb_credentials.password ))
            databases:
            - tag: cc
              name: ccdb
              citext: true
        - name: uaadb
          manifest: |
            address: (( .mysql_proxy.service_hostname.value || .mysql_proxy.first_ip || .mysql.first_ip ))
            port: 3306
            db_scheme: mysql
            roles:
            - tag: admin
              name: (( .mysql.uaadb_credentials.identity ))
              password: (( .mysql.uaadb_credentials.password ))
            databases:
            - tag: uaa
              name: uaa
        - name: notifications
          manifest: |
            url: mysql://(( .mysql.notifications_credentials.identity )):(( .mysql.notifications_credentials.password ))@(( .mysql_proxy.service_hostname.value || .mysql_proxy.first_ip || .mysql.first_ip )):3306/notifications
            max_open_connections: 10
        - name: autoscaling
          manifest: |
            url: mysql://(( .mysql.autoscale_credentials.identity )):(( .mysql.autoscale_credentials.password ))@(( .mysql_proxy.service_hostname.value || .mysql_proxy.first_ip || .mysql.first_ip )):3306/autoscale
        - name: push-app-usage-service
          manifest: |
            name: app_usage_service
            port: 3306
            ip: (( .mysql_proxy.service_hostname.value || .mysql_proxy.first_ip || .mysql.first_ip ))
            username: (( .mysql.app_usage_credentials.identity ))
            password: (( .mysql.app_usage_credentials.password ))
        - name: console
          manifest: |
            ip: (( .consoledb.first_ip ))
            username: (( .consoledb.credentials.identity ))
            password: (( .consoledb.credentials.password ))
            adapter: postgres

      - name: external
        named_manifests:
          - name: ccdb
            manifest: |
              address: (( .properties.system_database.external.host.value ))
              port: (( .properties.system_database.external.port.value ))
              db_scheme: "mysql"
              roles:
              - tag: admin
                name: (( .properties.system_database.external.username.value ))
                password: (( .properties.system_database.external.password.value ))
              databases:
              - tag: cc
                name: ccdb
          - name: uaadb
            manifest: |
              address: (( .properties.system_database.external.host.value ))
              port: (( .properties.system_database.external.port.value ))
              db_scheme: "mysql"
              roles:
              - tag: admin
                name: (( .properties.system_database.external.username.value ))
                password: (( .properties.system_database.external.password.value ))
              databases:
              - tag: uaa
                name: uaa
          - name: notifications
            manifest: |
              url: mysql://(( .properties.system_database.external.username.value )):(( .properties.system_database.external.password.value ))@(( .properties.system_database.external.host.value )):(( .properties.system_database.external.port.value ))/notifications
              max_open_connections: 10
          - name: autoscaling
            manifest: |
              url: mysql://(( .properties.system_database.external.username.value )):(( .properties.system_database.external.password.value ))@(( .properties.system_database.external.host.value )):(( .properties.system_database.external.port.value ))/autoscale
          - name: console
            manifest: |
              ip: (( .properties.system_database.external.host.value ))
              port: (( .properties.system_database.external.port.value ))
              username: (( .properties.system_database.external.username.value ))
              password: (( .properties.system_database.external.password.value ))
              adapter: mysql
          - name: push-app-usage-service
            manifest: |
              name: app_usage_service
              port: (( .properties.system_database.external.port.value ))
              ip: (( .properties.system_database.external.host.value ))
              username: (( .properties.system_database.external.username.value ))
              password: (( .properties.system_database.external.password.value ))
        select_value: external
        property_blueprints:
          - name: port
            type: port
            configurable: true
          - name: host
            type: string
            configurable: true
          - name: username
            type: string
            configurable: true
          - name: password
            type: secret
            configurable: true

  - name: system_blobstore
    type: selector
    configurable: true
    default: internal
    option_templates:
      - name: internal
        select_value: internal
        named_manifests:
          - name: ccbuildpack
            manifest: |

          - name: ccdroplet
            manifest: |

          - name: ccpackage
            manifest: |

          - name: ccresource
            manifest: |

      - name: external
        named_manifests:
          - name: ccbuildpack
            manifest: |
              buildpack_directory_key: (( .properties.system_blobstore.external.buildpacks_bucket.value ))
              fog_connection:
                provider: AWS
                aws_access_key_id: (( .properties.system_blobstore.external.access_key.value ))
                aws_secret_access_key: (( .properties.system_blobstore.external.secret_key.value ))
                aws_signature_version: 2
                path_style: true
                endpoint: (( .properties.system_blobstore.external.endpoint.value ))
          - name: ccdroplet
            manifest: |
              droplet_directory_key: (( .properties.system_blobstore.external.droplets_bucket.value ))
              fog_connection:
                provider: AWS
                aws_access_key_id: (( .properties.system_blobstore.external.access_key.value ))
                aws_secret_access_key: (( .properties.system_blobstore.external.secret_key.value ))
                aws_signature_version: 2
                path_style: true
                endpoint: (( .properties.system_blobstore.external.endpoint.value ))
          - name: ccpackage
            manifest: |
              app_package_directory_key: (( .properties.system_blobstore.external.packages_bucket.value ))
              fog_connection:
                provider: AWS
                aws_access_key_id: (( .properties.system_blobstore.external.access_key.value ))
                aws_secret_access_key: (( .properties.system_blobstore.external.secret_key.value ))
                aws_signature_version: 2
                path_style: true
                endpoint: (( .properties.system_blobstore.external.endpoint.value ))
          - name: ccresource
            manifest: |
              resource_directory_key: (( .properties.system_blobstore.external.resources_bucket.value ))
              fog_connection:
                provider: AWS
                aws_access_key_id: (( .properties.system_blobstore.external.access_key.value ))
                aws_secret_access_key: (( .properties.system_blobstore.external.secret_key.value ))
                aws_signature_version: 2
                path_style: true
                endpoint: (( .properties.system_blobstore.external.endpoint.value ))
        select_value: external
        property_blueprints:
          - name: endpoint
            type: string
            configurable: true
            default: "https://s3.amazonaws.com"
          - name: buildpacks_bucket
            type: string
            configurable: true
          - name: droplets_bucket
            type: string
            configurable: true
          - name: packages_bucket
            type: string
            configurable: true
          - name: resources_bucket
            type: string
            configurable: true
          - name: access_key
            type: string
            configurable: true
          - name: secret_key
            type: secret
            configurable: true

  - name: group_search
    type: selector
    configurable: true
    default: no_groups
    option_templates:
      - name: no_groups
        select_value: no_groups
        named_manifests:
          - name: ldap_group_profile
            manifest: |
              profile_type: no-groups

      - name: enable_admin_groups
        select_value: enable_admin_groups
        named_manifests:
          - name: ldap_group_profile
            manifest: |
              profile_type: groups-map-to-scopes
              searchBase: (( .properties.group_search.enable_admin_groups.ldap_group_search_base.value ))
              groupSearchFilter: (( .properties.group_search.enable_admin_groups.ldap_group_search_filter.value ))
        property_blueprints:
          - name: ldap_group_search_base
            type: string
            configurable: true
            optional: true

          - name: ldap_group_search_filter
            type: string
            configurable: true
            default: "member={0}"
