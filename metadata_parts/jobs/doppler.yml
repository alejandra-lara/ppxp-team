---
name: doppler
label: Doppler Server
resource_label: Doppler Server
description: Doppler server collects application logs
templates:
  - name: consul_agent
    release: consul
  - name: doppler
    release: loggregator
  - name: metron_agent
    release: loggregator
  - name: syslog_drain_binder
    release: loggregator

resource_definitions:
  - name: ram
    type: integer
    label: RAM
    configurable: true
    default: 1_024
    constraints:
      min: 1_024

  - name: ephemeral_disk
    type: integer
    label: Ephemeral Disk
    configurable: true
    default: 2_048
    constraints:
      min: 2_048

  - name: persistent_disk
    type: integer
    label: Persistent Disk
    configurable: false
    default: 0

  - name: cpu
    type: integer
    label: CPU
    configurable: true
    default: 1
    constraints:
      min: 1
      power_of_two: true

static_ip: 0
dynamic_ip: 1
max_in_flight: 1
single_az_only: false

instance_definition:
  name: instances
  type: integer
  label: Instances
  configurable: true
  default: 1
  constraints:
    min: 1

property_blueprints:
  - name: shared_secret_credentials
    type: simple_credentials

  - name: message_drain_buffer_size
    type: integer
    default: 10000
    configurable: true

  - name: doppler_tls_cert
    type: rsa_cert_credentials
    configurable: false
    default:
      domains: ["doppler"]

  - name: metron_tls_cert
    type: rsa_cert_credentials
    configurable: false
    default:
      domains: ["metron"]

  - name: syslogdrainbinder_tls_cert
    type: rsa_cert_credentials
    configurable: false
    default:
      domains: ["syslogdrainbinder"]

manifest: |
  doppler:
    message_drain_buffer_size: (( message_drain_buffer_size.value ))
    etcd:
      client_cert: (( .properties.cf_etcd_client_cert.cert_pem ))
      client_key: (( .properties.cf_etcd_client_cert.private_key_pem ))
  doppler_endpoint:
    shared_secret: (( .doppler.shared_secret_credentials.password ))
  ssl:
    skip_cert_verify: (( .ha_proxy.skip_cert_verify.value ))
  syslog_daemon_config:
    address: (( .properties.syslog_host.value ))
    port: (( .properties.syslog_port.value ))
    transport: (( .properties.syslog_protocol.value ))
  metron_agent:
    deployment: cf
  metron_endpoint:
    shared_secret: (( .doppler.shared_secret_credentials.password ))
  loggregator:
    etcd:
      require_ssl: true
      machines: ['cf-etcd.service.cf.internal']
      ca_cert: (( $ops_manager.ca_certificate ))
    tls:
      ca_cert: (( $ops_manager.ca_certificate ))
      doppler:
        cert: (( doppler_tls_cert.cert_pem ))
        key: (( doppler_tls_cert.private_key_pem ))
      metron:
        cert: (( metron_tls_cert.cert_pem ))
        key: (( metron_tls_cert.private_key_pem ))
      syslogdrainbinder:
        cert: (( syslogdrainbinder_tls_cert.cert_pem ))
        key: (( syslogdrainbinder_tls_cert.private_key_pem ))
  system_domain: (( .cloud_controller.system_domain.value ))
  cc:
    bulk_api_password: (( .cloud_controller.bulk_api_credentials.password ))
    srv_api_uri: "https://api.(( .cloud_controller.system_domain.value ))"
    mutual_tls:
      ca_cert: (( $ops_manager.ca_certificate ))
  syslog_drain_binder:
    etcd:
      client_cert: (( .properties.cf_etcd_client_cert.cert_pem ))
      client_key: (( .properties.cf_etcd_client_cert.private_key_pem ))
  consul:
    encrypt_keys:
    - (( .properties.consul_encrypt_key.value ))
    ca_cert: (( $ops_manager.ca_certificate ))
    agent_cert: (( .properties.consul_agent_cert.cert_pem ))
    agent_key: (( .properties.consul_agent_cert.private_key_pem ))
    agent:
      domain: cf.internal
      services:
        doppler: {}
      servers:
        lan: (( .consul_server.ips ))
